<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_02bzq79" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.2.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.17.0">
  <bpmn:process id="amlKycClientProcess" name="amlKycClientProcess" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_0bebf6m</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_0bebf6m" sourceRef="StartEvent_1" targetRef="Activity_07slub3" />
    <bpmn:serviceTask id="Activity_07slub3" name="Логирование процесса" camunda:delegateExpression="${loggerDelegate}">
      <bpmn:incoming>Flow_0bebf6m</bpmn:incoming>
      <bpmn:outgoing>Flow_1vjkn1a</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1vjkn1a" sourceRef="Activity_07slub3" targetRef="Activity_1mffk8u" />
    <bpmn:scriptTask id="Activity_1mffk8u" name="Get Payload" scriptFormat="groovy">
      <bpmn:incoming>Flow_1vjkn1a</bpmn:incoming>
      <bpmn:outgoing>Flow_14wmxoh</bpmn:outgoing>
      <bpmn:script>import static org.camunda.spin.Spin.JSON

            def jsonStr = execution.getVariable("payload") as String
            def jsonData = JSON(jsonStr).prop("payload").prop("amlCsmKycClientRequest")
            def jsonFull = JSON(jsonStr).prop("payload")
            def executionId = jsonStr.contains("executionId")
            def clientCheckResult = jsonData.prop("ResponseData").prop("ClientCheckResult").elements()
            execution.setVariable("sourceId", clientCheckResult[0].prop("SourceId").stringValue())
            execution.setVariable("kycSourceId",jsonFull.prop("InitialClient").prop("RequestData").prop("Clients").elements()[0].prop("SourceId").stringValue())
            execution.setVariable("payload", jsonData)
            execution.setVariable("executionId", executionId)
            execution.setVariable("payloadFull", jsonFull)</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_14wmxoh" sourceRef="Activity_1mffk8u" targetRef="Activity_1dmsgze" />
    <bpmn:serviceTask id="Activity_1dmsgze" name="Логирование процесса" camunda:delegateExpression="${loggerDelegate}">
      <bpmn:incoming>Flow_14wmxoh</bpmn:incoming>
      <bpmn:outgoing>Flow_0r4sii8</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0r4sii8" sourceRef="Activity_1dmsgze" targetRef="Activity_00wprxj" />
    <bpmn:serviceTask id="Activity_00wprxj" name="Открыть сессию" camunda:delegateExpression="${openSessionRnkbDelegate}">
      <bpmn:incoming>Flow_0r4sii8</bpmn:incoming>
      <bpmn:outgoing>Flow_0mouvka</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0mouvka" sourceRef="Activity_00wprxj" targetRef="Activity_13cbbf8" />
    <bpmn:serviceTask id="Activity_13cbbf8" name="Поиск существующих кейсов" camunda:delegateExpression="${selectDelegate}">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="outputVarName">cases</camunda:inputParameter>
          <camunda:inputParameter name="selectQuery">select k from KycCaseClient k left join Client c1 on
                k.clientId.id = c1.id where c1.exClientId = '${sourceId}'
            </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0mouvka</bpmn:incoming>
      <bpmn:outgoing>Flow_0id5bqk</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_14jv5q0" name="Кейсы найдены?" default="Flow_1tdal2p">
      <bpmn:incoming>Flow_0id5bqk</bpmn:incoming>
      <bpmn:outgoing>Flow_1tdal2p</bpmn:outgoing>
      <bpmn:outgoing>Flow_1yf8hm0</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_0id5bqk" sourceRef="Activity_13cbbf8" targetRef="Gateway_14jv5q0" />
    <bpmn:endEvent id="Event_0m11oe7">
      <bpmn:incoming>Flow_1poj8yf</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_1tdal2p" sourceRef="Gateway_14jv5q0" targetRef="Activity_08gaqrz" />
    <bpmn:subProcess id="createCaseKyc" name="createCaseKyc">
      <bpmn:incoming>Flow_1xc4nq8</bpmn:incoming>
      <bpmn:outgoing>Flow_1g9zlz9</bpmn:outgoing>
      <bpmn:startEvent id="Event_0zaunjw">
        <bpmn:outgoing>Flow_0ec8gii</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:serviceTask id="Activity_0fibyst" name="Сохранить CASE" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">caseNewOut</camunda:inputParameter>
            <camunda:inputParameter name="saveObject">${case}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0hkmoua</bpmn:incoming>
        <bpmn:outgoing>Flow_03ugfqn</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_0lpl272" name="Создать KYC_CASE_BY_LIST" scriptFormat="groovy">
        <bpmn:incoming>Flow_1iwb104</bpmn:incoming>
        <bpmn:outgoing>Flow_12p82pg</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
import com.prime.db.rnkb.model.kyc.KycCaseClientList2

import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

List&lt;KycCaseClientList2&gt; kycCaseClientList2List = []
def kycList = json.prop("ResponseData").prop("ClientCheckResult").elements()[0].prop("KYCList").elements()
def filteredList = kycList.findAll { k -&gt;
    k.prop("CheckStatus").stringValue() == "1" ||
            k.prop("CheckStatus").stringValue() == "2"
}
def result = json.prop("Clients").elements()[0].prop("Results").elements()
filteredList.each { l -&gt;
    KycCaseClientList2 kycCaseClientList2 = new KycCaseClientList2()
    kycCaseClientList2.setCaseId(execution.getVariable("caseNewOut"))
    kycCaseClientList2.setMatchType(getBd(290, execution.getVariable("executionId") ? "1" : "2"))
    def record = result.find { r -&gt; r.prop("record").prop("listType").stringValue() == l.prop("Id").stringValue()
    }.prop("record")
    java.lang.System.out.println(record)
    kycCaseClientList2.setTypeList(getBd(214, record.prop("listType").stringValue()))
    kycCaseClientList2.setExId(record.prop("exId").stringValue())
    kycCaseClientList2.setNum(record.prop("num").stringValue())
    java.lang.System.out.println(result[0].prop("D0"))
    StringBuilder markerString = new StringBuilder()
    java.lang.System.out.println(result[0].fieldNames())
    def fields = result[0].fieldNames().findAll { it =~ /^[D,M][0-9]*$/ }
    java.lang.System.out.println(fields)
    fields.each { it -&gt;
        if ((result[0].prop(it).isBoolean() &amp;&amp; result[0].prop(it).boolValue() != false)
                || (result[0].prop(it).isString() &amp;&amp; result[0].prop(it).stringValue() != "")
                || (result[0].prop(it).isNumber() &amp;&amp; result[0].prop(it).numberValue() != 0)) {
            markerString.append(it)
            markerString.append(", ")
        }
    }
    java.lang.System.out.println(markerString.toString().substring(0, markerString.toString().size() - 2))
    kycCaseClientList2.setMarkers(markerString.size() &gt; 0 ? markerString.toString().substring(0, markerString.toString().size() - 2) : "")
    kycCaseClientList2.setNameMatch(result[0].prop("D0").numberValue() as Integer)
    kycCaseClientList2.setFirstName(result[0].prop("D28").numberValue() as Integer)
    kycCaseClientList2.setLastName(result[0].prop("D27").numberValue() as Integer)
    kycCaseClientList2.setMiddleName(result[0].prop("D29").numberValue() as Integer)
    kycCaseClientList2.setLevelBlocking(l.prop("LevelBlocking").stringValue() as Integer)
    kycCaseClientList2.setCheckStatus(l.prop("CheckStatus").stringValue() as Integer)
    kycCaseClientList2.setIsActive(record.prop("isActive").boolValue() as Boolean)
    kycCaseClientList2.setEntityType(record.prop("entityType").stringValue())
    kycCaseClientList2List.add(kycCaseClientList2)
}
execution.setVariable("kycCaseClientList2List", kycCaseClientList2List)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_12p82pg" sourceRef="Activity_0lpl272" targetRef="Activity_1oiixaw" />
      <bpmn:serviceTask id="Activity_1oiixaw" name="Сохранить KYC_CASE_BY_LIST" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">KYCCaseClientList2newOut</camunda:inputParameter>
            <camunda:inputParameter name="saveObjectList">${kycCaseClientList2List}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_12p82pg</bpmn:incoming>
        <bpmn:outgoing>Flow_0668o27</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:endEvent id="Event_0jfqg3s">
        <bpmn:incoming>Flow_0pb8ndl</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:serviceTask id="Activity_1on3bn4" name="Получить клиента" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">client</camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT c FROM Client c WHERE c.exClientId = '${sourceId}'
                  </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1607rsp</bpmn:incoming>
        <bpmn:outgoing>Flow_1iwb104</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1iwb104" sourceRef="Activity_1on3bn4" targetRef="Activity_0lpl272" />
      <bpmn:scriptTask id="Activity_1qo9810" name="Сформировать CASE" scriptFormat="groovy">
        <bpmn:incoming>Flow_0usorvv</bpmn:incoming>
        <bpmn:outgoing>Flow_0hkmoua</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.Case
import com.prime.db.rnkb.model.BaseDictionary
import java.time.LocalDateTime
import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)


BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}
println "Старт формирования кейса"
com.prime.db.rnkb.model.Case caseNew = new com.prime.db.rnkb.model.Case()
caseNew.setCaseType(getBd(18, "5"))
caseNew.setName(getBd(18,"5").getName())
caseNew.setStatus(json.prop("Clients").elements()[0].prop("Results").elements()[0].prop("rulesResult").elements()[0].prop("autoDecision").boolValue() == true ? getBd(286, "3") : getBd(286, "1"))
caseNew.setCreationdate(LocalDateTime.now())

execution.setVariable("case", caseNew)
</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_0hkmoua" sourceRef="Activity_1qo9810" targetRef="Activity_0fibyst" />
      <bpmn:scriptTask id="Activity_0jpq0gy" name="Создать KYCCASEClientNameList" scriptFormat="groovy">
        <bpmn:incoming>Flow_0668o27</bpmn:incoming>
        <bpmn:outgoing>Flow_1i38imp</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.kyc.KycCaseClientList2
import com.prime.db.rnkb.model.kyc.KycCaseClientNameList
import com.prime.db.rnkb.model.BaseDictionary
import org.camunda.spin.json.SpinJsonNode

import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def kyc2list = execution.getVariable("kycCaseClientList2List")
println("Списки kyc")
println(kyc2list)
List&lt;KycCaseClientNameList&gt; kycCaseClientNameLists = []
def result = json.prop("Clients").elements()[0].prop("Results").elements()
kyc2list.each {k -&gt;
    def record = result.find { r -&gt; r.prop("record").prop("listType").stringValue() == k.getTypeList().getCode()
    }.prop("record")
    record.prop("nameList").elements().each {n -&gt;
        KycCaseClientNameList kycCaseClientNameList = new KycCaseClientNameList()
        kycCaseClientNameList.setKycCaseClientList2Id(k)
        kycCaseClientNameList.setNameType(getBd(280, n.prop("nameType").stringValue()))
        kycCaseClientNameList.setName(n.prop("name").stringValue())
        kycCaseClientNameList.setFirstName(n.hasProp("firstName") ? n.prop("firstName").stringValue() : null)
        kycCaseClientNameList.setLastName(n.hasProp("lastName")  ? n.prop("lastName").stringValue() : null)
        kycCaseClientNameList.setMiddleName(n.hasProp("middleName") ? n.prop("middleName").stringValue() : null)
        def thisResult = result.find { r -&gt; r.prop("record").prop("listType").stringValue() == k.getTypeList().getCode()
        }
        kycCaseClientNameList.setBestMatch(thisResult.hasProp("bestMatch") &amp;&amp; thisResult.prop("bestMatch") != null ? true : false as Boolean)
        kycCaseClientNameLists.add(kycCaseClientNameList)
    }
}
execution.setVariable("kycCaseClientNameLists", kycCaseClientNameLists)
</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0ugsp04" name="Сохранить KYCCASEClientNameList" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">KYCCASEClientNameListNewOut</camunda:inputParameter>
            <camunda:inputParameter name="saveObjectList">${kycCaseClientNameLists}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1i38imp</bpmn:incoming>
        <bpmn:outgoing>Flow_1ti26x4</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1i38imp" sourceRef="Activity_0jpq0gy" targetRef="Activity_0ugsp04" />
      <bpmn:sequenceFlow id="Flow_0668o27" sourceRef="Activity_1oiixaw" targetRef="Activity_0jpq0gy" />
      <bpmn:scriptTask id="Activity_14jaihp" name="Создать KYCCASEClientAddressList" scriptFormat="groovy">
        <bpmn:incoming>Flow_1ti26x4</bpmn:incoming>
        <bpmn:outgoing>Flow_1oviod8</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.kyc.KycCaseClientAddressList
import com.prime.db.rnkb.model.kyc.KycCaseClientList2
import com.prime.db.rnkb.model.BaseDictionary


import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

List&lt;KycCaseClientList2&gt; kyc2list = execution.getVariable("kycCaseClientList2List")
List&lt;KycCaseClientAddressList&gt; kycCaseClientAddressLists = []

def result = json.prop("Clients").elements()[0].prop("Results").elements()
kyc2list.each {k -&gt;
    def record = result.find { r -&gt; r.prop("record").prop("listType").stringValue() == k.getTypeList().getCode()
    }.prop("record")
    record.prop("addressList").elements().each {n -&gt;
        KycCaseClientAddressList kycCaseClientAddressList = new KycCaseClientAddressList()
        kycCaseClientAddressList.setKycCaseClientList2Id(k)
        kycCaseClientAddressList.setAddressType(getBd(281, n.prop("addressType").stringValue()))
        kycCaseClientAddressList.setAddressLine(n.hasProp("addressLine") ? n.prop("addressLine").stringValue() : null)
        kycCaseClientAddressLists.add(kycCaseClientAddressList)
    }
}

execution.setVariable("kycCaseClientAddressLists", kycCaseClientAddressLists)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_1d3sctn" name="Сохранить KYCCASEClientAddressList" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientAddressListsOutNew</camunda:inputParameter>
            <camunda:inputParameter name="saveObjectList">${kycCaseClientAddressLists}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1oviod8</bpmn:incoming>
        <bpmn:outgoing>Flow_1r24wg0</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1ti26x4" sourceRef="Activity_0ugsp04" targetRef="Activity_14jaihp" />
      <bpmn:sequenceFlow id="Flow_1oviod8" sourceRef="Activity_14jaihp" targetRef="Activity_1d3sctn" />
      <bpmn:scriptTask id="Activity_0fi9bj3" name="Создать KYCCASEClientDateDetails" scriptFormat="groovy">
        <bpmn:incoming>Flow_1r24wg0</bpmn:incoming>
        <bpmn:outgoing>Flow_0owc2w2</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.kyc.KycCaseClientDateDetails
import com.prime.db.rnkb.model.kyc.KycCaseClientList2
import com.prime.db.rnkb.model.BaseDictionary


import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

List&lt;KycCaseClientList2&gt; kyc2list = execution.getVariable("kycCaseClientList2List")
List&lt;KycCaseClientDateDetails&gt; kycCaseClientDateDetails = []

def result = json.prop("Clients").elements()[0].prop("Results").elements()
kyc2list.each {k -&gt;
    def record = result.find { r -&gt; r.prop("record").prop("listType").stringValue() == k.getTypeList().getCode()
    }.prop("record")
    record.prop("dateDetails").elements().each {n -&gt;

        KycCaseClientDateDetails kycCaseClientDateDetails1 = new KycCaseClientDateDetails()
        kycCaseClientDateDetails1.setKycCaseClientList2Id(k)
        kycCaseClientDateDetails1.setDateTypeId(getBd(282, n.prop("dateTypeId").stringValue()))
        kycCaseClientDateDetails1.setDateValue(n.hasProp("dateValue") ? n.prop("dateValue").stringValue() : null)
        kycCaseClientDateDetails1.setDay(n.hasProp("day") ? n.prop("day").toString() : null)
        kycCaseClientDateDetails1.setMonth(n.hasProp("month") ? n.prop("month").toString() : null)
        kycCaseClientDateDetails1.setYear(n.hasProp("year") ? n.prop("year").toString() : null)
        kycCaseClientDateDetails.add(kycCaseClientDateDetails1)

    }
}

execution.setVariable("kycCaseClientDateDetails", kycCaseClientDateDetails)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0fl8bee" name="Сохранить KYCCASEClientDateDetails" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientDateDetailsOutNew</camunda:inputParameter>
            <camunda:inputParameter name="saveObjectList">${kycCaseClientDateDetails}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0owc2w2</bpmn:incoming>
        <bpmn:outgoing>Flow_13qgy7t</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1r24wg0" sourceRef="Activity_1d3sctn" targetRef="Activity_0fi9bj3" />
      <bpmn:sequenceFlow id="Flow_0owc2w2" sourceRef="Activity_0fi9bj3" targetRef="Activity_0fl8bee" />
      <bpmn:scriptTask id="Activity_1iib5db" name="Создать KYCCASEClientIdentityAtrList" scriptFormat="groovy">
        <bpmn:incoming>Flow_13qgy7t</bpmn:incoming>
        <bpmn:outgoing>Flow_0fu95uf</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.kyc.KycCaseClientIdentityAtrList
import com.prime.db.rnkb.model.kyc.KycCaseClientList2
import com.prime.db.rnkb.model.BaseDictionary

import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

List&lt;KycCaseClientList2&gt; kyc2list = execution.getVariable("kycCaseClientList2List")
List&lt;KycCaseClientIdentityAtrList&gt; kycCaseClientIdentityAtrLists = []

def result = json.prop("Clients").elements()[0].prop("Results").elements()
kyc2list.each { k -&gt;
    def record = result.find { r -&gt; r.prop("record").prop("listType").stringValue() == k.getTypeList().getCode()
    }.prop("record")
    record.prop("identityAtrList").elements().each { n -&gt;
        KycCaseClientIdentityAtrList kycCaseClientIdentityAtrList = new KycCaseClientIdentityAtrList()
        kycCaseClientIdentityAtrList.setKycCaseClientList2Id(k)
        kycCaseClientIdentityAtrList.setIdType(n.hasProp("idType") ? getBd(283, n.prop("idType").stringValue()) : null)
        kycCaseClientIdentityAtrList.setIdValue(n.hasProp("idValue") ? n.prop("idValue").stringValue() : null)
        kycCaseClientIdentityAtrList.setIdSerial(n.hasProp("idSerial") ? n.prop("idSerial").stringValue() : null)
        kycCaseClientIdentityAtrList.setIdNumber(n.hasProp("idNumber") ? n.prop("idNumber").stringValue() : null)
        kycCaseClientIdentityAtrList.setComment(n.hasProp("Comment") ? n.prop("Comment").stringValue() : null)
        kycCaseClientIdentityAtrList.setDateOfDocument(n.hasProp("dateOfDocument") ? n.prop("dateOfDocument").stringValue() : null)
        kycCaseClientIdentityAtrList.setExpiryDateOfDocument(n.hasProp("expiryDateOfDocument") ? n.prop("expiryDateOfDocument").stringValue() : null)
        kycCaseClientIdentityAtrLists.add(kycCaseClientIdentityAtrList)
    }
}

execution.setVariable("kycCaseClientIdentityAtrLists", kycCaseClientIdentityAtrLists)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0wid35v" name="Сохранить KYCCASEClientIdentityAtrList" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientIdentityAtrListsNewOut</camunda:inputParameter>
            <camunda:inputParameter name="saveObjectList">${kycCaseClientIdentityAtrLists}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0fu95uf</bpmn:incoming>
        <bpmn:outgoing>Flow_02mx0o1</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_13qgy7t" sourceRef="Activity_0fl8bee" targetRef="Activity_1iib5db" />
      <bpmn:sequenceFlow id="Flow_0fu95uf" sourceRef="Activity_1iib5db" targetRef="Activity_0wid35v" />
      <bpmn:scriptTask id="Activity_1ojxqyb" name="Создать KYCCASEClientCountryList" scriptFormat="groovy">
        <bpmn:incoming>Flow_02mx0o1</bpmn:incoming>
        <bpmn:outgoing>Flow_05tobo5</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.kyc.KycCaseClientCountryList
import com.prime.db.rnkb.model.kyc.KycCaseClientList2

import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

List&lt;KycCaseClientList2&gt; kyc2list = execution.getVariable("kycCaseClientList2List")
List&lt;KycCaseClientCountryList&gt; kycCaseClientCountryLists = []

kyc2list.each { k -&gt;
    KycCaseClientCountryList kycCaseClientCountryList = new KycCaseClientCountryList()
    kycCaseClientCountryList.setKycCaseClientList2Id(k)
    kycCaseClientCountryLists.add(kycCaseClientCountryList)
}

execution.setVariable("kycCaseClientCountryLists", kycCaseClientCountryLists)
</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_00rp610" name="Сохранить KYCCASEClientCountryList" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientCountryListsNewOut</camunda:inputParameter>
            <camunda:inputParameter name="saveObjectList">${kycCaseClientCountryLists}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_05tobo5</bpmn:incoming>
        <bpmn:outgoing>Flow_1t9bpci</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_02mx0o1" sourceRef="Activity_0wid35v" targetRef="Activity_1ojxqyb" />
      <bpmn:sequenceFlow id="Flow_05tobo5" sourceRef="Activity_1ojxqyb" targetRef="Activity_00rp610" />
      <bpmn:scriptTask id="Activity_0k5c96i" name="Создать KYCCASEClientVersionsList" scriptFormat="groovy">
        <bpmn:incoming>Flow_1t9bpci</bpmn:incoming>
        <bpmn:outgoing>Flow_0l4lpqq</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
import com.prime.db.rnkb.model.kyc.KycCaseClientList2
import com.prime.db.rnkb.model.kyc.KycCaseClientVersionsList

import java.time.LocalDateTime

import static org.camunda.spin.Spin.JSON

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def pld = execution.getVariable("payload")
def json = JSON(pld)

List&lt;KycCaseClientList2&gt; kyc2list = execution.getVariable("kycCaseClientList2List")
List&lt;KycCaseClientVersionsList&gt; kycCaseClientVersionsLists = []

def result = json.prop("Clients").elements()[0].prop("Results").elements()
kyc2list.each { k -&gt;
    def record = result.find { r -&gt; r.prop("record").prop("listType").stringValue() == k.getTypeList().getCode()
    }.prop("record")
    record.prop("versionsList").elements().each { n -&gt;
        KycCaseClientVersionsList kycCaseClientVersionsList = new KycCaseClientVersionsList()
        kycCaseClientVersionsList.setKycCaseClientList2Id(k)
        kycCaseClientVersionsList.setListIdentifier(n.hasProp("listIdentifier") ? n.prop("listIdentifier").stringValue() : null)
        kycCaseClientVersionsList.setListVersion(n.hasProp("listVersion") ? n.prop("listVersion").stringValue() : null)
        kycCaseClientVersionsList.setVersionDate(n.hasProp("versionDate") ? LocalDateTime.parse(n.prop("versionDate").stringValue()) : null )
        kycCaseClientVersionsList.setLoadDate(n.hasProp("loadDate") ? LocalDateTime.parse(n.prop("loadDate").stringValue()):null)
        kycCaseClientVersionsList.setUpdateDate(n.hasProp("updateDate") ? LocalDateTime.parse(n.prop("updateDate").stringValue()):null)
        kycCaseClientVersionsList.setIsLastVersion(n.prop("isLastVersion").boolValue())
        kycCaseClientVersionsLists.add(kycCaseClientVersionsList)
    }
}

execution.setVariable("kycCaseClientVersionsLists", kycCaseClientVersionsLists)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0z7a2h2" name="Сохранить KYCCASEClientVersionsList" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientVersionsListsOutNew</camunda:inputParameter>
            <camunda:inputParameter name="saveObjectList">${kycCaseClientVersionsLists}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0l4lpqq</bpmn:incoming>
        <bpmn:outgoing>Flow_0y26mo3</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1t9bpci" sourceRef="Activity_00rp610" targetRef="Activity_0k5c96i" />
      <bpmn:sequenceFlow id="Flow_0l4lpqq" sourceRef="Activity_0k5c96i" targetRef="Activity_0z7a2h2" />
      <bpmn:serviceTask id="Activity_0qtkq9w" name="Сохранить KYCCASEClient" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kyccaseClientOutNew</camunda:inputParameter>
            <camunda:inputParameter name="saveObject">${kyccaseClient}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1ugpg09</bpmn:incoming>
        <bpmn:outgoing>Flow_0ii78nb</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_1mh1lzf" name="Создать KYCCASEClient" scriptFormat="groovy">
        <bpmn:incoming>Flow_1qyew5k</bpmn:incoming>
        <bpmn:outgoing>Flow_1ugpg09</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
import com.prime.db.rnkb.model.kyc.KycCaseClient

import java.time.LocalDateTime

import static org.camunda.spin.Spin.JSON

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def pld = execution.getVariable("payloadFull")
def json = JSON(pld)
def initialClient = json.prop("InitialClient").prop("RequestData").prop("Clients").elements()
KycCaseClient kyccaseClient = new KycCaseClient()
kyccaseClient.setCaseId(execution.getVariable("caseNewOut"))
kyccaseClient.setSourceId(initialClient[0].prop("SourceId").stringValue())
kyccaseClient.setClientId(execution.getVariable("client"))
kyccaseClient.setBranchCode(initialClient[0].hasProp("BranchCode") ? initialClient[0].prop("BranchCode").stringValue() : null)
kyccaseClient.setBranchName(initialClient[0].hasProp("BranchName") ? initialClient[0].prop("BranchName").stringValue(): null)
kyccaseClient.setCManagerName(initialClient[0].hasProp("CManagerName") ? initialClient[0].prop("CManagerName").stringValue() : null)
kyccaseClient.setClientType(getBd(24, initialClient[0].prop("ClientType").stringValue()))
kyccaseClient.setFullName(initialClient[0].hasProp("FullName") ? initialClient[0].prop("FullName").stringValue() : null)
kyccaseClient.setInn(initialClient[0].hasProp("INN") ? initialClient[0].prop("INN").stringValue() : null)
kyccaseClient.setOgrn(initialClient[0].hasProp("OGRN") ? initialClient[0].prop("OGRN").stringValue() : null)

execution.setVariable("kyccaseClient", kyccaseClient)
execution.setVariable("clientType", initialClient[0].prop("ClientType").stringValue())


</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_1ugpg09" sourceRef="Activity_1mh1lzf" targetRef="Activity_0qtkq9w" />
      <bpmn:sequenceFlow id="Flow_0y26mo3" sourceRef="Activity_0z7a2h2" targetRef="Activity_0zt5wir" />
      <bpmn:serviceTask id="Activity_0zt5wir" name="Получить kycClient" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycClient</camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT c FROM Client c WHERE c.exClientId = '${kycSourceId}'</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0y26mo3</bpmn:incoming>
        <bpmn:outgoing>Flow_1qyew5k</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1qyew5k" sourceRef="Activity_0zt5wir" targetRef="Activity_1mh1lzf" />
      <bpmn:scriptTask id="Activity_1ebyu7i" name="Создать KYCCASEClientLegal" scriptFormat="groovy">
        <bpmn:incoming>Flow_1eatndf</bpmn:incoming>
        <bpmn:outgoing>Flow_115yqhq</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
import com.prime.db.rnkb.model.kyc.KycCaseClientLegal

import java.time.LocalDate
import java.time.LocalDateTime

import static org.camunda.spin.Spin.JSON

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def pld = execution.getVariable("payloadFull")
def json = JSON(pld)
def initialClient = json.prop("InitialClient").prop("RequestData").prop("Clients").elements()[0].prop("ClientLegal")
KycCaseClientLegal kycCaseClientLegal = new KycCaseClientLegal()
kycCaseClientLegal.setKycCaseClientId(execution.getVariable("kyccaseClientOutNew"))
kycCaseClientLegal.setLegalName(initialClient.hasProp("LegalName") ? initialClient.prop("LegalName").stringValue() : null)
kycCaseClientLegal.setShortName(initialClient.hasProp("ShortName") ? initialClient.prop("ShortName").stringValue() : null)
kycCaseClientLegal.setShortNameEng(initialClient.hasProp("ShortNameEng") ? initialClient.prop("ShortNameEng").stringValue() : null)
kycCaseClientLegal.setTaxSerialIssueDate(initialClient.hasProp("TaxSerialIssueDate") ? LocalDate.parse(initialClient.prop("TaxSerialIssueDate").stringValue()).atStartOfDay() : null )
kycCaseClientLegal.setTaxSerialIssueDate(initialClient.hasProp("DateOfRegistrationBeforeOGRN") ? LocalDate.parse(initialClient.prop("DateOfRegistrationBeforeOGRN").stringValue()).atStartOfDay() : null )
kycCaseClientLegal.setKpp(initialClient.hasProp("KPP") ? initialClient.prop("KPP").stringValue() : null)
kycCaseClientLegal.setSwiftCd(initialClient.hasProp("SwiftCd") ? initialClient.prop("SwiftCd").stringValue() : null)
kycCaseClientLegal.setBankId(initialClient.hasProp("BankId") ? initialClient.prop("BankId").stringValue() : null)
kycCaseClientLegal.setOkfs(initialClient.hasProp("OKFS") ? getBd(39,initialClient.prop("OKFS").stringValue()) : null)
kycCaseClientLegal.setJurisdiction(initialClient.hasProp("Jurisdiction") ? getBd(40, initialClient.prop("Jurisdiction").stringValue()) : null)
kycCaseClientLegal.setLegalForm(initialClient.hasProp("LegalForm") ? getBd(76, initialClient.prop("LegalForm").stringValue()) : null)
kycCaseClientLegal.setRegistrationCity(initialClient.hasProp("RegistrationCity") ? initialClient.prop("RegistrationCity").stringValue() : null)
kycCaseClientLegal.setRegistrationUnit(initialClient.hasProp("RegistrationUnit") ? initialClient.prop("RegistrationUnit").stringValue() : null)
kycCaseClientLegal.setOkato(initialClient.hasProp("OKATO") ? initialClient.prop("OKATO").stringValue() : null)
kycCaseClientLegal.setGiin(initialClient.hasProp("GIIN") ? initialClient.prop("GIIN").stringValue() : null)
kycCaseClientLegal.setRegistrationUnitAddress(initialClient.hasProp("RegistrationUnitAddress") ? initialClient.prop("RegistrationUnitAddress").stringValue() : null)
kycCaseClientLegal.setLei(initialClient.hasProp("LEI") ? initialClient.prop("LEI").stringValue() : null)

execution.setVariable("kycCaseClientLegal", kycCaseClientLegal)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_115yqhq" sourceRef="Activity_1ebyu7i" targetRef="Activity_14k0t28" />
      <bpmn:serviceTask id="Activity_14k0t28" name="Сохранить KYCCASEClientLegal" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientLegalOutNew</camunda:inputParameter>
            <camunda:inputParameter name="saveObject">${kycCaseClientLegal}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_115yqhq</bpmn:incoming>
        <bpmn:outgoing>Flow_12qcmku</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_1t2x4mk" name="Создать KYCCASEClientIndividual" scriptFormat="groovy">
        <bpmn:incoming>Flow_0ctb87c</bpmn:incoming>
        <bpmn:outgoing>Flow_1voa57g</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
import com.prime.db.rnkb.model.kyc.KycCaseClientIndividual

import java.time.LocalDate
import java.time.LocalDateTime

import static org.camunda.spin.Spin.JSON

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def pld = execution.getVariable("payloadFull")
def json = JSON(pld)
def initialClient = json.prop("InitialClient").prop("RequestData").prop("Clients").elements()[0].prop("ClientIndividual")
KycCaseClientIndividual kycCaseClientIndividual = new KycCaseClientIndividual()
kycCaseClientIndividual.setKycCaseClientId(execution.getVariable("kyccaseClient"))
kycCaseClientIndividual.setLastNameEng(initialClient.prop("LastNameEng").stringValue())
kycCaseClientIndividual.setFirstNameEng(initialClient.prop("FirstNameEng").stringValue())
kycCaseClientIndividual.setMiddleNameEng(initialClient.prop("MiddleNameEng").stringValue())
kycCaseClientIndividual.setLastName(initialClient.prop("LastName").stringValue())
kycCaseClientIndividual.setFirstName(initialClient.prop("FirstName").stringValue())
kycCaseClientIndividual.setMiddleName(initialClient.prop("MiddleName").stringValue())
kycCaseClientIndividual.setFullNameEng(initialClient.prop("FullNameEng").stringValue())
kycCaseClientIndividual.setPlaceOfBirth(initialClient.prop("PlaceOfBirth").stringValue())
kycCaseClientIndividual.setOkato(initialClient.prop("OKATORegCode").stringValue())
kycCaseClientIndividual.setRegisterNumber(initialClient.prop("RegisterNumber").stringValue())
kycCaseClientIndividual.setBirthdate(initialClient.hasProp("Birthdate") ? LocalDate.parse(initialClient.prop("Birthdate").stringValue()).atStartOfDay():null)
kycCaseClientIndividual.setCitizenship(initialClient.hasProp("Citizenship") ? getBd(40, initialClient.prop("Citizenship").stringValue()) : null)

execution.setVariable("kycCaseClientIndividual", kycCaseClientIndividual)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_0e2zkzt" name="clientType">
        <bpmn:incoming>Flow_0ii78nb</bpmn:incoming>
        <bpmn:outgoing>Flow_1eatndf</bpmn:outgoing>
        <bpmn:outgoing>Flow_0ctb87c</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0ii78nb" sourceRef="Activity_0qtkq9w" targetRef="Gateway_0e2zkzt" />
      <bpmn:sequenceFlow id="Flow_1eatndf" sourceRef="Gateway_0e2zkzt" targetRef="Activity_1ebyu7i">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${clientType != "4"}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_0ctb87c" sourceRef="Gateway_0e2zkzt" targetRef="Activity_1t2x4mk">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${clientType == "4"}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_1voa57g" sourceRef="Activity_1t2x4mk" targetRef="Activity_0ipq9zi" />
      <bpmn:serviceTask id="Activity_0ipq9zi" name="Сохранить KYCCaseClientIndividual" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientIndividualOutNew</camunda:inputParameter>
            <camunda:inputParameter name="saveObject">${kycCaseClientIndividual}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1voa57g</bpmn:incoming>
        <bpmn:outgoing>Flow_0256qcs</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_0256qcs" sourceRef="Activity_0ipq9zi" targetRef="Activity_09l15q2" />
      <bpmn:scriptTask id="Activity_09l15q2" name="Создать KYCCASEClientVerdoc" scriptFormat="groovy">
        <bpmn:incoming>Flow_0256qcs</bpmn:incoming>
        <bpmn:outgoing>Flow_108zdac</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
import com.prime.db.rnkb.model.kyc.KycCaseClientVerdoc

import java.time.LocalDate

import static org.camunda.spin.Spin.JSON

BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def pld = execution.getVariable("payloadFull")
def json = JSON(pld)


KycCaseClientVerdoc kycCaseClientVerdoc = new KycCaseClientVerdoc()
kycCaseClientVerdoc.setKycCaseClientId(execution.getVariable("kyccaseClientOutNew"))
if (json.prop("InitialClient").prop("RequestData").prop("Clients").elements()[0].hasProp("VerificationDocuments")) {
    def initialClient = json.prop("InitialClient").prop("RequestData").prop("Clients").elements()[0].prop("VerificationDocuments")
    kycCaseClientVerdoc.setSourceId(initialClient.hasProp("SourceId") ? initialClient.prop("SourceId").stringValue() : null)
    kycCaseClientVerdoc.setIsMain(initialClient.hasProp("IsMain") ? initialClient.prop("IsMain").boolValue() : null)
    kycCaseClientVerdoc.setIssueDate(initialClient.hasProp("IssueDate") ? LocalDate.parse(initialClient.prop("IssueDate").stringValue()): null)
    kycCaseClientVerdoc.setName(initialClient.hasProp("Name") ? initialClient.prop("Name").stringValue() : null)
    kycCaseClientVerdoc.setType(initialClient.hasProp("Type") ? getBd(34, initialClient.prop("Type").stringValue()) : null)
    kycCaseClientVerdoc.setDocNumber(initialClient.hasProp("DocNumber") ? initialClient.prop("DocNumber").stringValue() : null)
    kycCaseClientVerdoc.setIssueByOrganization(initialClient.hasProp("IssueByOrganization") ? initialClient.prop("IssueByOrganization").stringValue() : null)
    kycCaseClientVerdoc.setExpirationDate(initialClient.hasProp("ExpirationDate") ? LocalDate.parse(initialClient.prop("ExpirationDate").stringValue()) : null)
    kycCaseClientVerdoc.setIssueByDepartmentCode(initialClient.hasProp("IssueByDepartmentCode") ? initialClient.prop("IssueByDepartmentCode").stringValue() : null)
}

execution.setVariable("kycCaseClientVerdoc", kycCaseClientVerdoc)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_108zdac" sourceRef="Activity_09l15q2" targetRef="Activity_1yf0fxx" />
      <bpmn:serviceTask id="Activity_1yf0fxx" name="Сохранить KYCCaseClientVerdoc" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">kycCaseClientVerdocOutNew</camunda:inputParameter>
            <camunda:inputParameter name="saveObject">${kycCaseClientVerdoc}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_108zdac</bpmn:incoming>
        <bpmn:outgoing>Flow_11ze8k0</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:exclusiveGateway id="Gateway_0n32jz6">
        <bpmn:incoming>Flow_11ze8k0</bpmn:incoming>
        <bpmn:incoming>Flow_12qcmku</bpmn:incoming>
        <bpmn:outgoing>Flow_0pb8ndl</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_11ze8k0" sourceRef="Activity_1yf0fxx" targetRef="Gateway_0n32jz6" />
      <bpmn:sequenceFlow id="Flow_12qcmku" sourceRef="Activity_14k0t28" targetRef="Gateway_0n32jz6" />
      <bpmn:sequenceFlow id="Flow_0pb8ndl" sourceRef="Gateway_0n32jz6" targetRef="Event_0jfqg3s" />
      <bpmn:sequenceFlow id="Flow_0usorvv" sourceRef="Activity_1udutan" targetRef="Activity_1qo9810" />
      <bpmn:sequenceFlow id="Flow_0ec8gii" sourceRef="Event_0zaunjw" targetRef="Activity_1udutan" />
      <bpmn:serviceTask id="Activity_1udutan" name="Логирование процесса" camunda:delegateExpression="${loggerDelegate}">
        <bpmn:incoming>Flow_0ec8gii</bpmn:incoming>
        <bpmn:outgoing>Flow_0usorvv</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_03ugfqn" sourceRef="Activity_0fibyst" targetRef="Activity_0uhej1l" />
      <bpmn:serviceTask id="Activity_0uhej1l" name="Логирование процесса" camunda:delegateExpression="${loggerDelegate}">
        <bpmn:incoming>Flow_03ugfqn</bpmn:incoming>
        <bpmn:outgoing>Flow_1607rsp</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1607rsp" sourceRef="Activity_0uhej1l" targetRef="Activity_1on3bn4" />
      <bpmn:textAnnotation id="TextAnnotation_1ps9xhg">
        <bpmn:text>123123</bpmn:text>
      </bpmn:textAnnotation>
      <bpmn:association id="Association_0o8xeui" sourceRef="Activity_1oiixaw" targetRef="TextAnnotation_1ps9xhg" />
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="Flow_1yf8hm0" sourceRef="Gateway_14jv5q0" targetRef="Gateway_1383s4t">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${cases.size() &lt; 1}
            </bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:endEvent id="Event_1ci363g">
      <bpmn:incoming>Flow_1kwzn44</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_1g9zlz9" sourceRef="createCaseKyc" targetRef="Activity_06urcbs" />
    <bpmn:serviceTask id="Activity_1vdc5v6" name="Закрыть сессию" camunda:delegateExpression="${closeSessionRnkbDelegate}">
      <bpmn:incoming>Flow_1nat4ys</bpmn:incoming>
      <bpmn:outgoing>Flow_1kwzn44</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1kwzn44" sourceRef="Activity_1vdc5v6" targetRef="Event_1ci363g" />
    <bpmn:serviceTask id="Activity_0sbdk1p" name="StartTransactionDelegate" camunda:delegateExpression="${startTransactionDelegate}">
      <bpmn:incoming>Flow_1v7pagb</bpmn:incoming>
      <bpmn:outgoing>Flow_1xc4nq8</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1xc4nq8" sourceRef="Activity_0sbdk1p" targetRef="createCaseKyc" />
    <bpmn:serviceTask id="Activity_06urcbs" name="EndTransactionDelegate" camunda:delegateExpression="${endTransactionDelegate}">
      <bpmn:incoming>Flow_1g9zlz9</bpmn:incoming>
      <bpmn:outgoing>Flow_1nat4ys</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1nat4ys" sourceRef="Activity_06urcbs" targetRef="Activity_1vdc5v6" />
    <bpmn:serviceTask id="Activity_1cpt2gg" name="Закрыть сессию" camunda:delegateExpression="${closeSessionRnkbDelegate}">
      <bpmn:incoming>Flow_1yzqqia</bpmn:incoming>
      <bpmn:outgoing>Flow_1poj8yf</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1poj8yf" sourceRef="Activity_1cpt2gg" targetRef="Event_0m11oe7" />
    <bpmn:scriptTask id="Activity_08gaqrz" name="Получить список TypeList" scriptFormat="groovy">
      <bpmn:incoming>Flow_1tdal2p</bpmn:incoming>
      <bpmn:outgoing>Flow_1pw0owq</bpmn:outgoing>
      <bpmn:script>import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

def kycLists = json
        .prop("ResponseData")
        .prop("ClientCheckResult")
        .elements()[0]
        .prop("KYCList").elements().any {k -&gt;
    k.prop("CheckStatus").stringValue() == "1" || k.prop("CheckStatus").stringValue() == "2"
}

execution.setVariable("kycLists", kycLists)</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:exclusiveGateway id="Gateway_0hwsvy1" name="Список пустой?" default="Flow_13xl7mb">
      <bpmn:incoming>Flow_1pw0owq</bpmn:incoming>
      <bpmn:outgoing>Flow_0wqeg59</bpmn:outgoing>
      <bpmn:outgoing>Flow_13xl7mb</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1pw0owq" sourceRef="Activity_08gaqrz" targetRef="Gateway_0hwsvy1" />
    <bpmn:endEvent id="Event_19mnekh">
      <bpmn:incoming>Flow_0wqeg59</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0wqeg59" name="да" sourceRef="Gateway_0hwsvy1" targetRef="Event_19mnekh">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!kycLists}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_13xl7mb" name="нет" sourceRef="Gateway_0hwsvy1" targetRef="Activity_0ln9jyl" />
    <bpmn:scriptTask id="Activity_0ln9jyl" name="Изменить статусы кейсов" scriptFormat="groovy">
      <bpmn:incoming>Flow_13xl7mb</bpmn:incoming>
      <bpmn:outgoing>Flow_0tqjyuw</bpmn:outgoing>
      <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary


import static org.camunda.spin.Spin.JSON

def pld = execution.getVariable("payload")
def json = JSON(pld)

def KYCList = json.prop("ResponseData").prop("ClientCheckResult").elements()[0].prop("KYCList")

def typeLists = []
KYCList.elements().stream().map({ r -&gt; r.prop("Id").stringValue() }).each {i -&gt; typeLists.add(i as Long)}
println("Шаг 1")
List&lt;Case&gt; getCases(String exId, List&lt;String&gt; codes) {
    caseRepo.getLatestCaseByClientIdAndExIdAndNumAndTypeList1(exId, codes);
}
println("Шаг 2")
BaseDictionary getBd(int type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}
println("Шаг 3")
println(execution.getVariable("sourceId"))
println(typeLists)
println(typeLists.class)
def cases = getCases(execution.getVariable("sourceId") as String, typeLists)
println("Шаг 4")
def changeCases = []
println("Шаг 5")
cases.each {c -&gt;
    if (c.getStatus() == getBd(286, "1") || c.getStatus() == getBd(286, "2")) {
        println("Шаг 6")
        execution.setVariable("createCase", true)
        println("Шаг 7")
        changeCases.add(c)
        println("Шаг 8")
        c.setStatus(getBd(286, "7"))
    }
    else if (c.getStatus() == getBd(286, "7") || c.getStatus() == getBd(286, "4") || c.getStatus() == getBd(286, "5") ){
        execution.setVariable("createCase", true)
        println("Шаг 9")
    }
    else {
        execution.setVariable("createCase", false)
    }
}
if (execution.getVariable("createCase") == null) {
    execution.setVariable("createCase", false)
}
execution.setVariable("changeCases", changeCases)
println("Шаг 10")</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0tqjyuw" sourceRef="Activity_0ln9jyl" targetRef="Activity_0fmw1xk" />
    <bpmn:serviceTask id="Activity_0fmw1xk" name="Сохранить измененные кейсы" camunda:delegateExpression="${saveObjectListDelegate}">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="outputVarName">changedCaseOutNew</camunda:inputParameter>
          <camunda:inputParameter name="saveObjectList">${changeCases}</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0tqjyuw</bpmn:incoming>
      <bpmn:outgoing>Flow_1nt6ll5</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_056w41b" name="Необходимо создать новый кейс?" default="Flow_1yzqqia">
      <bpmn:incoming>Flow_1nt6ll5</bpmn:incoming>
      <bpmn:outgoing>Flow_1yzqqia</bpmn:outgoing>
      <bpmn:outgoing>Flow_1bxj3x2</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1nt6ll5" sourceRef="Activity_0fmw1xk" targetRef="Gateway_056w41b" />
    <bpmn:sequenceFlow id="Flow_1yzqqia" name="нет" sourceRef="Gateway_056w41b" targetRef="Activity_1cpt2gg" />
    <bpmn:exclusiveGateway id="Gateway_1383s4t">
      <bpmn:incoming>Flow_1yf8hm0</bpmn:incoming>
      <bpmn:incoming>Flow_1bxj3x2</bpmn:incoming>
      <bpmn:outgoing>Flow_1v7pagb</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1v7pagb" sourceRef="Gateway_1383s4t" targetRef="Activity_0sbdk1p" />
    <bpmn:sequenceFlow id="Flow_1bxj3x2" name="да" sourceRef="Gateway_056w41b" targetRef="Gateway_1383s4t">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${createCase}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="amlKycClientProcess">
      <bpmndi:BPMNEdge id="Flow_1bxj3x2_di" bpmnElement="Flow_1bxj3x2">
        <di:waypoint x="1870" y="155" />
        <di:waypoint x="1870" y="230" />
        <di:waypoint x="1125" y="230" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1879" y="190" width="12" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1v7pagb_di" bpmnElement="Flow_1v7pagb">
        <di:waypoint x="1100" y="255" />
        <di:waypoint x="1100" y="270" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1yzqqia_di" bpmnElement="Flow_1yzqqia">
        <di:waypoint x="1895" y="130" />
        <di:waypoint x="1940" y="130" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1909" y="112" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1nt6ll5_di" bpmnElement="Flow_1nt6ll5">
        <di:waypoint x="1820" y="130" />
        <di:waypoint x="1845" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0tqjyuw_di" bpmnElement="Flow_0tqjyuw">
        <di:waypoint x="1660" y="130" />
        <di:waypoint x="1720" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13xl7mb_di" bpmnElement="Flow_13xl7mb">
        <di:waypoint x="1445" y="130" />
        <di:waypoint x="1560" y="130" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1481" y="112" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0wqeg59_di" bpmnElement="Flow_0wqeg59">
        <di:waypoint x="1420" y="155" />
        <di:waypoint x="1420" y="200" />
        <di:waypoint x="1522" y="200" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1430" y="172" width="12" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1pw0owq_di" bpmnElement="Flow_1pw0owq">
        <di:waypoint x="1310" y="130" />
        <di:waypoint x="1395" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1poj8yf_di" bpmnElement="Flow_1poj8yf">
        <di:waypoint x="2040" y="130" />
        <di:waypoint x="2092" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1nat4ys_di" bpmnElement="Flow_1nat4ys">
        <di:waypoint x="5260" y="470" />
        <di:waypoint x="5320" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1xc4nq8_di" bpmnElement="Flow_1xc4nq8">
        <di:waypoint x="1100" y="350" />
        <di:waypoint x="1100" y="380" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1kwzn44_di" bpmnElement="Flow_1kwzn44">
        <di:waypoint x="5420" y="470" />
        <di:waypoint x="5452" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1g9zlz9_di" bpmnElement="Flow_1g9zlz9">
        <di:waypoint x="4820" y="470" />
        <di:waypoint x="5160" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1yf8hm0_di" bpmnElement="Flow_1yf8hm0">
        <di:waypoint x="1100" y="155" />
        <di:waypoint x="1100" y="205" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1tdal2p_di" bpmnElement="Flow_1tdal2p">
        <di:waypoint x="1125" y="130" />
        <di:waypoint x="1210" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0id5bqk_di" bpmnElement="Flow_0id5bqk">
        <di:waypoint x="990" y="130" />
        <di:waypoint x="1075" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0mouvka_di" bpmnElement="Flow_0mouvka">
        <di:waypoint x="840" y="130" />
        <di:waypoint x="890" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0r4sii8_di" bpmnElement="Flow_0r4sii8">
        <di:waypoint x="670" y="130" />
        <di:waypoint x="740" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_14wmxoh_di" bpmnElement="Flow_14wmxoh">
        <di:waypoint x="510" y="130" />
        <di:waypoint x="570" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1vjkn1a_di" bpmnElement="Flow_1vjkn1a">
        <di:waypoint x="350" y="130" />
        <di:waypoint x="410" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0bebf6m_di" bpmnElement="Flow_0bebf6m">
        <di:waypoint x="195" y="130" />
        <di:waypoint x="250" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="159" y="112" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1ji0naw_di" bpmnElement="Activity_07slub3">
        <dc:Bounds x="250" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0rsao7c_di" bpmnElement="Activity_1mffk8u">
        <dc:Bounds x="410" y="90" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0dzd0rq_di" bpmnElement="Activity_1dmsgze">
        <dc:Bounds x="570" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_15o15uh_di" bpmnElement="Activity_00wprxj">
        <dc:Bounds x="740" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1esksia_di" bpmnElement="Activity_13cbbf8">
        <dc:Bounds x="890" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_14jv5q0_di" bpmnElement="Gateway_14jv5q0" isMarkerVisible="true">
        <dc:Bounds x="1075" y="105" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1056" y="81" width="87" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0m11oe7_di" bpmnElement="Event_0m11oe7">
        <dc:Bounds x="2092" y="112" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ue267h" bpmnElement="Activity_1cpt2gg">
        <dc:Bounds x="1940" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1tskgm5_di" bpmnElement="createCaseKyc" isExpanded="true">
        <dc:Bounds x="540" y="380" width="4280" height="280" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1607rsp_di" bpmnElement="Flow_1607rsp">
        <di:waypoint x="1210" y="560" />
        <di:waypoint x="1260" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_03ugfqn_di" bpmnElement="Flow_03ugfqn">
        <di:waypoint x="1020" y="560" />
        <di:waypoint x="1110" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ec8gii_di" bpmnElement="Flow_0ec8gii">
        <di:waypoint x="598" y="560" />
        <di:waypoint x="650" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0usorvv_di" bpmnElement="Flow_0usorvv">
        <di:waypoint x="750" y="560" />
        <di:waypoint x="780" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0pb8ndl_di" bpmnElement="Flow_0pb8ndl">
        <di:waypoint x="4725" y="540" />
        <di:waypoint x="4762" y="540" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_12qcmku_di" bpmnElement="Flow_12qcmku">
        <di:waypoint x="4380" y="440" />
        <di:waypoint x="4700" y="440" />
        <di:waypoint x="4700" y="515" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_11ze8k0_di" bpmnElement="Flow_11ze8k0">
        <di:waypoint x="4660" y="600" />
        <di:waypoint x="4700" y="600" />
        <di:waypoint x="4700" y="565" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_108zdac_di" bpmnElement="Flow_108zdac">
        <di:waypoint x="4510" y="600" />
        <di:waypoint x="4560" y="600" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0256qcs_di" bpmnElement="Flow_0256qcs">
        <di:waypoint x="4360" y="600" />
        <di:waypoint x="4410" y="600" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1voa57g_di" bpmnElement="Flow_1voa57g">
        <di:waypoint x="4210" y="600" />
        <di:waypoint x="4260" y="600" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ctb87c_di" bpmnElement="Flow_0ctb87c">
        <di:waypoint x="4050" y="585" />
        <di:waypoint x="4050" y="600" />
        <di:waypoint x="4110" y="600" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1eatndf_di" bpmnElement="Flow_1eatndf">
        <di:waypoint x="4050" y="535" />
        <di:waypoint x="4050" y="440" />
        <di:waypoint x="4110" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ii78nb_di" bpmnElement="Flow_0ii78nb">
        <di:waypoint x="3990" y="560" />
        <di:waypoint x="4025" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_115yqhq_di" bpmnElement="Flow_115yqhq">
        <di:waypoint x="4210" y="440" />
        <di:waypoint x="4280" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1qyew5k_di" bpmnElement="Flow_1qyew5k">
        <di:waypoint x="3720" y="560" />
        <di:waypoint x="3760" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0y26mo3_di" bpmnElement="Flow_0y26mo3">
        <di:waypoint x="3580" y="560" />
        <di:waypoint x="3620" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ugpg09_di" bpmnElement="Flow_1ugpg09">
        <di:waypoint x="3860" y="560" />
        <di:waypoint x="3890" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0l4lpqq_di" bpmnElement="Flow_0l4lpqq">
        <di:waypoint x="3440" y="560" />
        <di:waypoint x="3480" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1t9bpci_di" bpmnElement="Flow_1t9bpci">
        <di:waypoint x="3300" y="560" />
        <di:waypoint x="3340" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_05tobo5_di" bpmnElement="Flow_05tobo5">
        <di:waypoint x="3150" y="560" />
        <di:waypoint x="3200" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_02mx0o1_di" bpmnElement="Flow_02mx0o1">
        <di:waypoint x="3010" y="560" />
        <di:waypoint x="3050" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0fu95uf_di" bpmnElement="Flow_0fu95uf">
        <di:waypoint x="2880" y="560" />
        <di:waypoint x="2910" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13qgy7t_di" bpmnElement="Flow_13qgy7t">
        <di:waypoint x="2750" y="560" />
        <di:waypoint x="2780" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0owc2w2_di" bpmnElement="Flow_0owc2w2">
        <di:waypoint x="2610" y="560" />
        <di:waypoint x="2650" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1r24wg0_di" bpmnElement="Flow_1r24wg0">
        <di:waypoint x="2470" y="560" />
        <di:waypoint x="2510" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1oviod8_di" bpmnElement="Flow_1oviod8">
        <di:waypoint x="2320" y="560" />
        <di:waypoint x="2370" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ti26x4_di" bpmnElement="Flow_1ti26x4">
        <di:waypoint x="2150" y="560" />
        <di:waypoint x="2220" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0668o27_di" bpmnElement="Flow_0668o27">
        <di:waypoint x="1750" y="560" />
        <di:waypoint x="1870" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1i38imp_di" bpmnElement="Flow_1i38imp">
        <di:waypoint x="1970" y="560" />
        <di:waypoint x="2050" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0hkmoua_di" bpmnElement="Flow_0hkmoua">
        <di:waypoint x="880" y="560" />
        <di:waypoint x="920" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1iwb104_di" bpmnElement="Flow_1iwb104">
        <di:waypoint x="1360" y="560" />
        <di:waypoint x="1440" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_12p82pg_di" bpmnElement="Flow_12p82pg">
        <di:waypoint x="1540" y="560" />
        <di:waypoint x="1650" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_0zaunjw_di" bpmnElement="Event_0zaunjw">
        <dc:Bounds x="562" y="542" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0jfqg3s_di" bpmnElement="Event_0jfqg3s">
        <dc:Bounds x="4762" y="522" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0kjt2l6_di" bpmnElement="Activity_1qo9810">
        <dc:Bounds x="780" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1nif594_di" bpmnElement="Activity_1d3sctn">
        <dc:Bounds x="2370" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0nwx0wl_di" bpmnElement="Activity_0fi9bj3">
        <dc:Bounds x="2510" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1fr29nh_di" bpmnElement="Activity_0fl8bee">
        <dc:Bounds x="2650" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_03u507s_di" bpmnElement="Activity_1iib5db">
        <dc:Bounds x="2780" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_16pd6i6_di" bpmnElement="Activity_0wid35v">
        <dc:Bounds x="2910" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1vsryur_di" bpmnElement="Activity_1ojxqyb">
        <dc:Bounds x="3050" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0v8sjgb_di" bpmnElement="Activity_00rp610">
        <dc:Bounds x="3200" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_19j9glz_di" bpmnElement="Activity_0k5c96i">
        <dc:Bounds x="3340" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1blg4rf_di" bpmnElement="Activity_0z7a2h2">
        <dc:Bounds x="3480" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1kh81yx_di" bpmnElement="Activity_0qtkq9w">
        <dc:Bounds x="3890" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_12vp7v3_di" bpmnElement="Activity_1mh1lzf">
        <dc:Bounds x="3760" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_07hgxnj_di" bpmnElement="Activity_0zt5wir">
        <dc:Bounds x="3620" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_04ll77p_di" bpmnElement="Activity_1ebyu7i">
        <dc:Bounds x="4110" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_17xt2x5_di" bpmnElement="Activity_14k0t28">
        <dc:Bounds x="4280" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_04oq8lj_di" bpmnElement="Activity_1t2x4mk">
        <dc:Bounds x="4110" y="560" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0e2zkzt_di" bpmnElement="Gateway_0e2zkzt" isMarkerVisible="true">
        <dc:Bounds x="4025" y="535" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="4075" y="543" width="50" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1xfzz9l_di" bpmnElement="Activity_0ipq9zi">
        <dc:Bounds x="4260" y="560" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0f01t3i_di" bpmnElement="Activity_09l15q2">
        <dc:Bounds x="4410" y="560" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1shkzrz_di" bpmnElement="Activity_1yf0fxx">
        <dc:Bounds x="4560" y="560" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0n32jz6_di" bpmnElement="Gateway_0n32jz6" isMarkerVisible="true">
        <dc:Bounds x="4675" y="515" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0byhmvm_di" bpmnElement="Activity_1udutan">
        <dc:Bounds x="650" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="TextAnnotation_1ps9xhg_di" bpmnElement="TextAnnotation_1ps9xhg">
        <dc:Bounds x="1870" y="440" width="100" height="30" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_153gkg6_di" bpmnElement="Activity_0fibyst">
        <dc:Bounds x="920" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0dxcw6h_di" bpmnElement="Activity_1oiixaw">
        <dc:Bounds x="1650" y="520" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1yrjp56_di" bpmnElement="Activity_0lpl272">
        <dc:Bounds x="1440" y="520" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1brd4g4_di" bpmnElement="Activity_1on3bn4">
        <dc:Bounds x="1260" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1dobyuo_di" bpmnElement="Activity_0uhej1l">
        <dc:Bounds x="1110" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1pxwt0h_di" bpmnElement="Activity_0jpq0gy">
        <dc:Bounds x="1870" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0coemej_di" bpmnElement="Activity_0ugsp04">
        <dc:Bounds x="2050" y="520" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0wo4wfh_di" bpmnElement="Activity_14jaihp">
        <dc:Bounds x="2220" y="520" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Association_0o8xeui_di" bpmnElement="Association_0o8xeui">
        <di:waypoint x="1750" y="536" />
        <di:waypoint x="1889" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_1ci363g_di" bpmnElement="Event_1ci363g">
        <dc:Bounds x="5452" y="452" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1vdc5v6_di" bpmnElement="Activity_1vdc5v6">
        <dc:Bounds x="5320" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0sbdk1p_di" bpmnElement="Activity_0sbdk1p">
        <dc:Bounds x="1050" y="270" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_06urcbs_di" bpmnElement="Activity_06urcbs">
        <dc:Bounds x="5160" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1c2naab_di" bpmnElement="Activity_08gaqrz">
        <dc:Bounds x="1210" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0hwsvy1_di" bpmnElement="Gateway_0hwsvy1" isMarkerVisible="true">
        <dc:Bounds x="1395" y="105" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1380" y="81" width="80" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_19mnekh_di" bpmnElement="Event_19mnekh">
        <dc:Bounds x="1522" y="182" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_163r2ux_di" bpmnElement="Activity_0ln9jyl">
        <dc:Bounds x="1560" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0rydaub_di" bpmnElement="Activity_0fmw1xk">
        <dc:Bounds x="1720" y="90" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_056w41b_di" bpmnElement="Gateway_056w41b" isMarkerVisible="true">
        <dc:Bounds x="1845" y="105" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1832" y="60" width="75" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1383s4t_di" bpmnElement="Gateway_1383s4t" isMarkerVisible="true">
        <dc:Bounds x="1075" y="205" width="50" height="50" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
