<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1eoxw1v" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.2.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
  <bpmn:process id="amlCsmKycClientRequest" name="19. Сохранение результатов Онлайн/Офлайн от поисковой машины по клиентам" isExecutable="true">
    <bpmn:startEvent id="Event_0bpxwwc">
      <bpmn:outgoing>Flow_1crfnfk</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:serviceTask id="Activity_0fehiu4" name="Process Logging" camunda:delegateExpression="${loggerDelegate}">
      <bpmn:incoming>Flow_1crfnfk</bpmn:incoming>
      <bpmn:outgoing>Flow_05quuqa</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_0uuh0i5" name="Start Transaction Delegate" camunda:delegateExpression="${startTransactionDelegate}">
      <bpmn:incoming>Flow_05quuqa</bpmn:incoming>
      <bpmn:outgoing>Flow_0v9yh38</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1crfnfk" sourceRef="Event_0bpxwwc" targetRef="Activity_0fehiu4" />
    <bpmn:sequenceFlow id="Flow_05quuqa" sourceRef="Activity_0fehiu4" targetRef="Activity_0uuh0i5" />
    <bpmn:subProcess id="Activity_1mw9f6o">
      <bpmn:incoming>Flow_0v9yh38</bpmn:incoming>
      <bpmn:outgoing>Flow_03gukxj</bpmn:outgoing>
      <bpmn:startEvent id="Event_01z62wt">
        <bpmn:outgoing>Flow_0nm40x4</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:scriptTask id="Activity_0ldya20" name="Payload Retirieving" scriptFormat="groovy">
        <bpmn:incoming>Flow_0nm40x4</bpmn:incoming>
        <bpmn:outgoing>Flow_0hb06iv</bpmn:outgoing>
        <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*

def jsonStr = execution.getVariable("payload")
def jsonData = JSON(jsonStr)

def payloadObject = jsonData.prop("payload").prop("amlPaymentRejection")

def clients = payloadObject.prop("Clients")
if(clients.elements().size() &gt; 0) {
    execution.setVariable("clientItems", clients)
} else {
    throw new RuntimeException("Invalid Clients")
}

def clientCheckResults = jsonData.prop("ResponseData").prop("ClientCheckResult")
if (clientCheckResults.elements().size() &gt; 0) {
    execution.setVariable("clientCheckResultItems", clientCheckResults)
} else {
    throw new RuntimeException("Invalid ClientCheckResult")
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_0nm40x4" sourceRef="Event_01z62wt" targetRef="Activity_0ldya20" />
      <bpmn:subProcess id="Activity_Clients_Handling" name="Clients Handling">
        <bpmn:incoming>Flow_0hb06iv</bpmn:incoming>
        <bpmn:outgoing>Flow_0m9d8o5</bpmn:outgoing>
        <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${clientItems.elements()}" camunda:elementVariable="clientItem" />
        <bpmn:startEvent id="Event_1xfcm0n">
          <bpmn:outgoing>Flow_13q4mth</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:scriptTask id="Activity_0pnz9cm" name="Client Check Result Retrieving" scriptFormat="groovy">
          <bpmn:incoming>Flow_13q4mth</bpmn:incoming>
          <bpmn:outgoing>Flow_0k0u987</bpmn:outgoing>
          <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*

def clientCheckResultItems = execution.getVariable("clientCheckResultItems")
def clientItem = execution.getVariable("clientItem")
def targetSourceId = clientItem.prop("SourceId").stringValue()
def clientCheckResult = JSON("{}")

clientCheckResultItems.elements().each{item -&gt; 
    def sourceId = item.prop("SourceId").stringValue()
    if (sourceId == targetSourceId) {
        clientCheckResult = item
    }
}

execution.setVariable("clientCheckResult", clientCheckResult)
execution.setVariable("clientId", targetSourceId)</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:subProcess id="Activity_10o7dqk" name="Result Handling">
          <bpmn:incoming>Flow_00656g0</bpmn:incoming>
          <bpmn:outgoing>Flow_0dk0obq</bpmn:outgoing>
          <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${resultItems.elements()}" camunda:elementVariable="resultItem" />
          <bpmn:startEvent id="Event_118qtrk">
            <bpmn:outgoing>Flow_0rdzslu</bpmn:outgoing>
          </bpmn:startEvent>
          <bpmn:scriptTask id="Activity_0uzj693" name="Payload Retirieving" scriptFormat="groovy">
            <bpmn:incoming>Flow_0rdzslu</bpmn:incoming>
            <bpmn:outgoing>Flow_1897it8</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*

def clientItem = execution.getVariable("clientItem")
def resultItem = execution.getVariable("resultItem")
def clientCheckResult = execution.getVariable("clientCheckResult")

def record = resultItem.prop("record")
def exId = record.prop("exId")?.stringValue()
def num = record.prop("num")?.stringValue()
def typeList = []

clientCheckResult.prop("KYCList")?.elements()?.each{kyc -&gt;
    def type = kyc.prop("Id")?.stringValue()
    if (type != null) {
        typeList.add(type)
    }
}

execution.setVariable("typeList", typeList)
execution.setVariable("exId", exId)
execution.setVariable("num", num)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:scriptTask id="Activity_15sew4o" name="Case Status Decision" scriptFormat="groovy">
            <bpmn:incoming>Flow_1897it8</bpmn:incoming>
            <bpmn:outgoing>Flow_1vua5pp</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*

def exId = execution.getVariable("exId")
def num = execution.getVariable("num")
def typeList = execution.getVariable("typeList")
def clientId = execution.getVariable("client")?.getId()
def caseItems = caseRepo.getLatestCaseByClientIdAndExIdAndNumAndTypeList(clientId, typeList, exId, num)
def status

if (caseItems.size() &gt; 0) {
    def caseItem = caseItems.get(0)
    status = caseItem.getStatus()?.getCode()
    execution.setVariable("caseItem", caseItem)
}

def processName = execution.getVariable("processName")
def csd = 0

if ((status == "1" &amp;&amp; processName == "amlKycClientProcess") || (status == "2" &amp;&amp; processName == "offlineCreateCase")) {
    csd = 1
} else if (status == "3" || status == "4") {
    csd = 2
} else if (status == "5") {
    csd = 3
}

execution.setVariable("csd", csd)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:exclusiveGateway id="Gateway_0uxnypy">
            <bpmn:incoming>Flow_1vua5pp</bpmn:incoming>
            <bpmn:outgoing>Flow_0sn2zax</bpmn:outgoing>
            <bpmn:outgoing>Flow_00mgcwc</bpmn:outgoing>
            <bpmn:outgoing>Flow_1vgkfgw</bpmn:outgoing>
          </bpmn:exclusiveGateway>
          <bpmn:scriptTask id="Activity_15cx39w" name="Change Case Status" scriptFormat="groovy">
            <bpmn:incoming>Flow_0sn2zax</bpmn:incoming>
            <bpmn:outgoing>Flow_05f27h4</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def status3 = getBd(286, "3")
def cs = execution.getVariable("caseItem")

cs.status = status3
execution.setVariable("case", cs)

</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:serviceTask id="Activity_1js50xw" name="Save Case Status" camunda:delegateExpression="${saveObjectDelegate}">
            <bpmn:extensionElements>
              <camunda:inputOutput>
                <camunda:inputParameter name="saveObject">${case}</camunda:inputParameter>
              </camunda:inputOutput>
            </bpmn:extensionElements>
            <bpmn:incoming>Flow_05f27h4</bpmn:incoming>
            <bpmn:outgoing>Flow_1yqdt8n</bpmn:outgoing>
          </bpmn:serviceTask>
          <bpmn:endEvent id="Event_09g1ver">
            <bpmn:incoming>Flow_00mgcwc</bpmn:incoming>
          </bpmn:endEvent>
          <bpmn:sequenceFlow id="Flow_0sn2zax" name="CSD #1" sourceRef="Gateway_0uxnypy" targetRef="Activity_15cx39w">
            <bpmn:documentation>CSD - Case Status Decision - Решение по статусу найденного кейса (или ненайденного)
1 - Меняем статус найденного кейса и создаем новый
2 - Завершаем процесс
3 - Создаем новый кейс</bpmn:documentation>
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${csd == 1}</bpmn:conditionExpression>
          </bpmn:sequenceFlow>
          <bpmn:sequenceFlow id="Flow_00mgcwc" name="CSD #2" sourceRef="Gateway_0uxnypy" targetRef="Event_09g1ver">
            <bpmn:documentation>CSD - Case Status Decision - Решение по статусу найденного кейса (или ненайденного)
1 - Меняем статус найденного кейса и создаем новый
2 - Завершаем процесс
3 - Создаем новый кейс</bpmn:documentation>
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${csd == 2}</bpmn:conditionExpression>
          </bpmn:sequenceFlow>
          <bpmn:sequenceFlow id="Flow_05f27h4" sourceRef="Activity_15cx39w" targetRef="Activity_1js50xw" />
          <bpmn:sequenceFlow id="Flow_1vua5pp" sourceRef="Activity_15sew4o" targetRef="Gateway_0uxnypy" />
          <bpmn:subProcess id="Activity_02vg82q" name="Case Creation">
            <bpmn:incoming>Flow_1yqdt8n</bpmn:incoming>
            <bpmn:incoming>Flow_1vgkfgw</bpmn:incoming>
            <bpmn:outgoing>Flow_1255pjq</bpmn:outgoing>
            <bpmn:startEvent id="Event_09o8qzt">
              <bpmn:outgoing>Flow_18xp7a5</bpmn:outgoing>
            </bpmn:startEvent>
            <bpmn:scriptTask id="Activity_1cp5fv0" name="Case Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_18xp7a5</bpmn:incoming>
              <bpmn:outgoing>Flow_0xqw8f0</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.Case
import com.prime.db.rnkb.model.BaseDictionary
import java.time.LocalDateTime

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def processName = execution.getVariable("processName")
def csd = execution.getVariable("csd")
def status

if (csd == 0 &amp;&amp; processName == "amlKycClientProcess") {
    status = getBd(286, "1")
} else if (csd == 0 &amp;&amp; processName == "offlineCreateCase") {
    status = getBd(286, "2")
} else if (csd == 1) {
    status = getBd(286, "3")
} else if (csd == 3) {
    status = getBd(286, "5")
} else {
    throw new RuntimeException("Case status cannot be calculated")
}


def cs = new Case()
cs.caseType = getBd(18, "5")
cs.status = status
cs.creationdate = LocalDateTime.now()

execution.setVariable("caseItem", cs)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:serviceTask id="Activity_Case_Saving" name="Case Saving" camunda:delegateExpression="${saveObjectDelegate}">
              <bpmn:extensionElements>
                <camunda:inputOutput>
                  <camunda:inputParameter name="saveObject">${caseItem}</camunda:inputParameter>
                  <camunda:inputParameter name="outputVarName">caseItem</camunda:inputParameter>
                </camunda:inputOutput>
              </bpmn:extensionElements>
              <bpmn:incoming>Flow_0xqw8f0</bpmn:incoming>
              <bpmn:outgoing>Flow_0vgu2xc</bpmn:outgoing>
            </bpmn:serviceTask>
            <bpmn:endEvent id="Event_0m0mboy">
              <bpmn:incoming>Flow_0vgu2xc</bpmn:incoming>
            </bpmn:endEvent>
            <bpmn:sequenceFlow id="Flow_0vgu2xc" sourceRef="Activity_Case_Saving" targetRef="Event_0m0mboy" />
            <bpmn:sequenceFlow id="Flow_0xqw8f0" sourceRef="Activity_1cp5fv0" targetRef="Activity_Case_Saving" />
            <bpmn:sequenceFlow id="Flow_18xp7a5" sourceRef="Event_09o8qzt" targetRef="Activity_1cp5fv0" />
          </bpmn:subProcess>
          <bpmn:sequenceFlow id="Flow_1yqdt8n" sourceRef="Activity_1js50xw" targetRef="Activity_02vg82q" />
          <bpmn:sequenceFlow id="Flow_1vgkfgw" name="CSD #3" sourceRef="Gateway_0uxnypy" targetRef="Activity_02vg82q" />
          <bpmn:subProcess id="Activity_1v5jznt" name="Kyc Case Client Lists">
            <bpmn:incoming>Flow_0y2tfrb</bpmn:incoming>
            <bpmn:outgoing>Flow_15ogu7q</bpmn:outgoing>
            <bpmn:startEvent id="Event_1pfart9">
              <bpmn:outgoing>Flow_0leqngs</bpmn:outgoing>
            </bpmn:startEvent>
            <bpmn:scriptTask id="Activity_00si6fi" name="List1 Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_0leqngs</bpmn:incoming>
              <bpmn:outgoing>Flow_19djyrd</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientList1

def cs = execution.getVariable("caseItem")
def client = execution.getVariable("client")

def list1 = new KycCaseClientList1()
list1.caseId = cs
list1.clientId = client

execution.setVariable("list1Item", list1)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:scriptTask id="Activity_06v13eb" name="Name List Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_0crol6n</bpmn:incoming>
              <bpmn:outgoing>Flow_0eetssk</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientNameList;
import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")


def names = resultItem.prop("record")?.prop("nameList")?.elements()

def bestMatch = resultItem.prop("bestMatch")?.prop("name")?.stringValue()
def bestMatchType = resultItem.prop("bestMatch")?.prop("nameType")?.stringValue()

def saveObjects = []

names?.each{name -&gt;
    def nameType = name.prop("nameType").stringValue()

    def nameList = new KycCaseClientNameList()
    nameList.kycCaseClientList2Id = list2Item
    nameList.nameType = getBd(280, nameType)
    nameList.name = name.prop("name").stringValue();

    if (name.hasProp("firstName")) {
        nameList.firstName = name.prop("firstName").stringValue()
    }

    if (name.hasProp("lastName")) {
        nameList.lastName = name.prop("lastName").stringValue()
    }

    if (name.hasProp("middleName")) {
        nameList.middleName = name.prop("middleName").stringValue()
    }

    if (name.hasProp("Latin")) {
        nameList.latin = name.prop("Latin").stringValue()
    }

    if (name.hasProp("DateOfBirth")) {
        nameList.dateOfBirth = name.prop("DateOfBirth").stringValue()
    }

    if (name.hasProp("YearOfBirth")) {
        nameList.yearOfBirth = name.prop("YearOfBirth").stringValue()
    }

    if (name.hasProp("PlaceOfBirth")) {
        nameList.placeOfBirth = name.prop("PlaceOfBirth").stringValue()
    }

    if (name.hasProp("INN")) {
        nameList.inn = name.prop("INN").stringValue()
    }

    if (name.hasProp("SNILS")) {
        nameList.snils = name.prop("SNILS").stringValue()
    }

    if (name.hasProp("RegistrationDate")) {
        nameList.registrationDate = name.prop("RegistrationDate").stringValue()
    }

    if (name.hasProp("PlaceOfRegistration")) {
        nameList.placeOfRegistration = name.prop("PlaceOfRegistration").stringValue()
    }

    if (name.hasProp("OGRN")) {
        nameList.ogrn = name.prop("OGRN").stringValue()
    }

    nameList.bestMatch = (nameList.name == bestMatch &amp;&amp; nameType == bestMatchType);

    saveObjects.add(nameList)
}

execution.setVariable("saveObjects", saveObjects);</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:serviceTask id="Activity_List1_Saving" name="List1 Saving" camunda:delegateExpression="${saveObjectDelegate}">
              <bpmn:extensionElements>
                <camunda:inputOutput>
                  <camunda:inputParameter name="outputVarName">list1Item</camunda:inputParameter>
                  <camunda:inputParameter name="saveObject">${list1Item}</camunda:inputParameter>
                </camunda:inputOutput>
              </bpmn:extensionElements>
              <bpmn:incoming>Flow_19djyrd</bpmn:incoming>
              <bpmn:outgoing>Flow_0wwts1a</bpmn:outgoing>
            </bpmn:serviceTask>
            <bpmn:scriptTask id="Activity_1c5haxn" name="List2 Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_0wwts1a</bpmn:incoming>
              <bpmn:outgoing>Flow_1wdsir7</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientList2
import com.prime.db.rnkb.model.BaseDictionary
import org.camunda.spin.json.SpinJsonNode

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

String getMarkers(SpinJsonNode node, List&lt;String&gt; markers) {
    def result = []
    markers.each{m -&gt;
        if(m.startsWith("M")) {
            if(node.prop(m).isBoolean() &amp;&amp; node.prop(m).boolValue() == true)
                result.add(m)
        } else {
            if(node.prop(m)?.numberValue() != 0)
                result.add(m)
        }
    }

    return result.join(";")
}

def markers = ["M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9", "M10", "M11", "M12", "M13", "M14", "M15", "M16", "M17","M18", "M19", "M20", "M21", "M22", "M23", "M24", "M25", "M26", "D27", "D28", "D29", "D0", "M28", "M29", "M30", "M31", "M32", "M33", "M34", "M35", "M36"]

def cs = execution.getVariable("caseItem")
def resultItem = execution.getVariable("resultItem")

def kycList = resultItem.prop("KYCList")
def typeList = kycList.prop("Id").stringValue()
def record = resultItem.prop("record")
def isActive = resultItem.prop("record").prop("isActive").boolValue()
def entityType = resultItem.prop("record").prop("entityType").stringValue()
def d0 = resultItem.prop("D0").numberValue()?.intValue()
def d27 = resultItem.prop("D27").numberValue()?.intValue()
def d28 = resultItem.prop("D28").numberValue()?.intValue()
def d29 = resultItem.prop("D29").numberValue()?.intValue()
// def levelBlocking = kycList.prop("LevelBlocking").numberValue()?.intValue()
// def checkStatus = kycList.prop("CheckStatus")?.numberValue()?.intValue()

def list2 = new KycCaseClientList2()
list2.caseId = cs
list2.typeList = getBd(214, typeList)
list2.exId = record.prop("exId").stringValue()
list2.num = record.prop("num").stringValue()
list2.markers = getMarkers(resultItem, markers)
list2.nameMatch = d0
list2.firstName = d27
list2.lastName = d28
list2.middleName = d29
//list2.levelBlocking = levelBlocking
//list2.checkStatus = checkStatus
list2.isActive = isActive
list2.entityType = entityType

execution.setVariable("list2Item", list2)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:serviceTask id="Activity_List2_Saving" name="List2 Saving" camunda:delegateExpression="${saveObjectDelegate}">
              <bpmn:extensionElements>
                <camunda:inputOutput>
                  <camunda:inputParameter name="outputVarName">list1Item</camunda:inputParameter>
                  <camunda:inputParameter name="saveObject">${list2Item}</camunda:inputParameter>
                </camunda:inputOutput>
              </bpmn:extensionElements>
              <bpmn:incoming>Flow_1wdsir7</bpmn:incoming>
              <bpmn:outgoing>Flow_0crol6n</bpmn:outgoing>
            </bpmn:serviceTask>
            <bpmn:serviceTask id="Activity_Save_Lists" name="Save Lists" camunda:delegateExpression="${saveObjectListDelegate}">
              <bpmn:extensionElements>
                <camunda:inputOutput>
                  <camunda:inputParameter name="saveObject">${saveObjects}</camunda:inputParameter>
                </camunda:inputOutput>
              </bpmn:extensionElements>
              <bpmn:incoming>Flow_1dvreq0</bpmn:incoming>
              <bpmn:incoming>Flow_0tnbmu6</bpmn:incoming>
              <bpmn:outgoing>Flow_0or65n9</bpmn:outgoing>
            </bpmn:serviceTask>
            <bpmn:scriptTask id="Activity_09mhvto" name="Versions List Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_1trwpwi</bpmn:incoming>
              <bpmn:outgoing>Flow_1dvreq0</bpmn:outgoing>
              <bpmn:outgoing>Flow_0tnbmu6</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientVersionsList;
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def versions = resultItem?.prop("record")?.prop("versionsList")?.elements()
def signOfTerrorist = 0

if (resultItem.prop("record").hasProp("signOfTerrorist")) {
    signOfTerrorist = resultItem.prop("record").prop("signOfTerrorist").numberValue().intValue()
}

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSS");

versions?.each{version -&gt;
    def versionList = new KycCaseClientVersionsList()

    versionList.kycCaseClientList2Id = list2Item
    versionList.listIdentifier = version.prop("listIdentifier").stringValue()
    versionList.listVersion = version.prop("listVersion").stringValue()
    versionList.versionDate = LocalDateTime.parse(version.prop("versionDate").stringValue(), formatter)
    versionList.loadDate = LocalDateTime.parse(version.prop("loadDate").stringValue(), formatter)
    versionList.updateDate = LocalDateTime.parse(version.prop("updateDate").stringValue(), formatter)
    versionList.isLastVersion = version.prop("isLastVersion").boolValue()
    versionList.signOfTerrorist = signOfTerrorist

    saveObjects.add(versionList)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:scriptTask id="Activity_1j7iunw" name="Identity List Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_1y17db5</bpmn:incoming>
              <bpmn:outgoing>Flow_064q816</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientIdentityAtrList;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def ids = resultItem?.prop("record")?.prop("identityAtrList")?.elements()

ids?.each{id -&gt;
    def idType = id.prop("idType").stringValue()

    def identityList = new KycCaseClientIdentityAtrList()

    identityList.kycCaseClientList2Id = list2Item
    identityList.idType = getBd(283, idType)

    if (id.hasProp("idValue")) {
        identityList.idValue = id.prop("idValue").stringValue()
    }

    if (id.hasProp("idSerial")) {
        identityList.idSerial = id.prop("idSerial").stringValue()
    }

    if (id.hasProp("idNumber")) {
        identityList.idNumber = id.prop("idNumber").stringValue()
    }

    if (id.hasProp("Comment")) {
        identityList.comment = id.prop("Comment").stringValue()
    }

    if (id.hasProp("DateDocument")) {
        identityList.dateDocument = id.prop("DateDocument").stringValue()
    }

    if (id.hasProp("IssuingAuthority")) {
        identityList.issuingAuthority = id.prop("IssuingAuthority").stringValue()
    }

    if (id.hasProp("DateOfDocument")) {
        identityList.dateOfDocument = id.prop("DateOfDocument").stringValue()
    }

    if (id.hasProp("ExpiryDateOfDocument")) {
        identityList.expiryDateOfDocument = id.prop("ExpiryDateOfDocument").stringValue()
    }

    if (id.hasProp("ValidDoc")) {
        identityList.validDoc = id.prop("ValidDoc").stringValue()
    }

    saveObjects.add(identityList)
}

execution.setVariable("saveObjects", saveObjects)
</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:scriptTask id="Activity_1i3xrqv" name="Date List Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_17xowf4</bpmn:incoming>
              <bpmn:outgoing>Flow_1y17db5</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientDateDetails;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def dates = resultItem?.prop("record")?.prop("dateDetails")?.elements()

dates?.each{date -&gt;
    def dateDetails = new KycCaseClientDateDetails()

    dateDetails.kycCaseClientList2Id = list2Item
    dateDetails.dateTypeId = getBd(282, date.prop("dateTypeId").stringValue())
    if (!date.prop("dateValue").isNull())
        dateDetails.dateValue = date.prop("dateValue")?.stringValue();

    if (!date.prop("day").isNull())
        dateDetails.day = date.prop("day")?.numberValue()?.toString();

    if (!date.prop("month").isNull())
    dateDetails.month = date.prop("month")?.numberValue()?.toString();

    if (!date.prop("year").isNull())
    dateDetails.year = date.prop("year")?.numberValue()?.toString();

    saveObjects.add(dateDetails)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:scriptTask id="Activity_1nbbps9" name="Address List Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_0eetssk</bpmn:incoming>
              <bpmn:outgoing>Flow_17xowf4</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientAddressList;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def addresses = resultItem?.prop("record")?.prop("addressList")?.elements()

addresses?.each{address -&gt;
    def addressType = address.prop("addressType").stringValue()

    def addressList = new KycCaseClientAddressList()

    addressList.kycCaseClientList2Id = list2Item
    addressList.addressType = getBd(281, addressType)
    addressList.addressLine = address.prop("addressLine").stringValue();
    addressList.countryCOde = address.prop("CountryCode").stringValue()
    addressList.country = address.prop("Country").stringValue()

    saveObjects.add(addressList)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:scriptTask id="Activity_05v8l85" name="Country List Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_064q816</bpmn:incoming>
              <bpmn:outgoing>Flow_1trwpwi</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientCountryList;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def countries = resultItem?.prop("record")?.prop("countryList")?.elements()

countries?.each{country -&gt;
    def countryList = new KycCaseClientCountryList()

    countryList.kycCaseClientList2Id = list2Item
    countryList.countryType = getBd(284, country.prop("CountryType").stringValue())
    countryList.countryCode = country.prop("CountryCode").stringValue()
    countryList.countryName = country.prop("CountryName").stringValue()

    saveObjects.add(countryList)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:endEvent id="Event_0eblwtk">
              <bpmn:incoming>Flow_0or65n9</bpmn:incoming>
            </bpmn:endEvent>
            <bpmn:sequenceFlow id="Flow_0or65n9" sourceRef="Activity_Save_Lists" targetRef="Event_0eblwtk" />
            <bpmn:sequenceFlow id="Flow_1dvreq0" sourceRef="Activity_09mhvto" targetRef="Activity_Save_Lists" />
            <bpmn:sequenceFlow id="Flow_1trwpwi" sourceRef="Activity_05v8l85" targetRef="Activity_09mhvto" />
            <bpmn:sequenceFlow id="Flow_064q816" sourceRef="Activity_1j7iunw" targetRef="Activity_05v8l85" />
            <bpmn:sequenceFlow id="Flow_0crol6n" sourceRef="Activity_List2_Saving" targetRef="Activity_06v13eb" />
            <bpmn:sequenceFlow id="Flow_1wdsir7" sourceRef="Activity_1c5haxn" targetRef="Activity_List2_Saving" />
            <bpmn:sequenceFlow id="Flow_0wwts1a" sourceRef="Activity_List1_Saving" targetRef="Activity_1c5haxn" />
            <bpmn:sequenceFlow id="Flow_17xowf4" sourceRef="Activity_1nbbps9" targetRef="Activity_1i3xrqv" />
            <bpmn:sequenceFlow id="Flow_1y17db5" sourceRef="Activity_1i3xrqv" targetRef="Activity_1j7iunw" />
            <bpmn:sequenceFlow id="Flow_0tnbmu6" sourceRef="Activity_09mhvto" targetRef="Activity_Save_Lists" />
            <bpmn:sequenceFlow id="Flow_0eetssk" sourceRef="Activity_06v13eb" targetRef="Activity_1nbbps9" />
            <bpmn:sequenceFlow id="Flow_19djyrd" sourceRef="Activity_00si6fi" targetRef="Activity_List1_Saving" />
            <bpmn:sequenceFlow id="Flow_0leqngs" sourceRef="Event_1pfart9" targetRef="Activity_00si6fi" />
          </bpmn:subProcess>
          <bpmn:endEvent id="Event_0m31yx9">
            <bpmn:incoming>Flow_15ogu7q</bpmn:incoming>
          </bpmn:endEvent>
          <bpmn:sequenceFlow id="Flow_15ogu7q" sourceRef="Activity_1v5jznt" targetRef="Event_0m31yx9" />
          <bpmn:sequenceFlow id="Flow_0rdzslu" sourceRef="Event_118qtrk" targetRef="Activity_0uzj693" />
          <bpmn:sequenceFlow id="Flow_1897it8" sourceRef="Activity_0uzj693" targetRef="Activity_15sew4o" />
          <bpmn:subProcess id="Activity_KycCaseClient_Creation" name="KycCaseClient Creation">
            <bpmn:incoming>Flow_1255pjq</bpmn:incoming>
            <bpmn:outgoing>Flow_0y2tfrb</bpmn:outgoing>
            <bpmn:startEvent id="Event_0fwct2q">
              <bpmn:outgoing>Flow_1vb9g4s</bpmn:outgoing>
            </bpmn:startEvent>
            <bpmn:scriptTask id="Activity_KycClient_Filling" name="KycClient Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_1vb9g4s</bpmn:incoming>
              <bpmn:outgoing>Flow_0r1i49m</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClient
import com.prime.db.rnkb.model.BaseDictionary
import java.time.LocalDate
import java.time.format.DateTimeFormatter

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def clientItem = execution.getVariable("clientItem")
def checkResult = execution.getVariable("clientCheckResult")
def client = execution.getVariable("client")
def caseItem = execution.getVariable("caseItem")

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

def kycCaseClient = new KycCaseClient()
kycCaseClient.sourceId = clientItem.prop("SourceId").stringValue()
kycCaseClient.clientId = client
kycCaseClient.caseId = caseItem
kycCaseClient.clientType = getBd(24, clientItem.prop("ClientType").stringValue())

if (clientItem.hasProp("BranchCode")) {
    kycCaseClient.branchCode = clientItem.prop("BranchCode").stringValue()
}

if (clientItem.hasProp("BranchName")) {
    kycCaseClient.branchName = clientItem.prop("BranchName").stringValue()
}

if (clientItem.hasProp("BranchName")) {
    kycCaseClient.cManagerName = clientItem.prop("CManagerName").stringValue()
}

if (clientItem.hasProp("FullName")) {
    kycCaseClient.fullName = clientItem.prop("FullName").stringValue()
}

if (clientItem.hasProp("INN")) {
    kycCaseClient.inn = clientItem.prop("INN").stringValue()
}

if (clientItem.hasProp("OGRN")) {
    kycCaseClient.ogrn = clientItem.prop("OGRN").stringValue()
}

if (clientItem.hasProp("OGRNDate")) {
    kycCaseClient.ogrnDate = LocalDate.parse(clientItem.prop("OGRNDate").stringValue(), formatter).atStartOfDay()
}

execution.setVariable("kycCaseClientItem", kycCaseClient)</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:serviceTask id="Activity_KycClient_Saving" name="KycClient Saving" camunda:delegateExpression="${saveObjectDelegate}">
              <bpmn:extensionElements>
                <camunda:inputOutput>
                  <camunda:inputParameter name="outputVarName">kycCaseClientItem</camunda:inputParameter>
                  <camunda:inputParameter name="saveObject">${kycCaseClientItem}</camunda:inputParameter>
                </camunda:inputOutput>
              </bpmn:extensionElements>
              <bpmn:incoming>Flow_0r1i49m</bpmn:incoming>
              <bpmn:outgoing>Flow_19ck0uz</bpmn:outgoing>
            </bpmn:serviceTask>
            <bpmn:sequenceFlow id="Flow_0r1i49m" sourceRef="Activity_KycClient_Filling" targetRef="Activity_KycClient_Saving" />
            <bpmn:sequenceFlow id="Flow_1vb9g4s" sourceRef="Event_0fwct2q" targetRef="Activity_KycClient_Filling" />
            <bpmn:scriptTask id="Activity_Individual_or_Legal_Filling" name="Individual or Legal Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_19ck0uz</bpmn:incoming>
              <bpmn:outgoing>Flow_03r75hn</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientIndividual
import com.prime.db.rnkb.model.kyc.KycCaseClientLegal
import com.prime.db.rnkb.model.BaseDictionary
import java.time.LocalDateTime
import java.time.LocalDate
import java.time.format.DateTimeFormatter

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def clientItem = execution.getVariable("clientItem")
def kycCaseClientItem = execution.getVariable("kycCaseClientItem")

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSS")
DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd")

if (clientItem.hasProp("ClientIndividual")) {
    def individualProp = clientItem.prop("ClientIndividual")
    def individual = new KycCaseClientIndividual()
    individual.kycCaseClientId = kycCaseClientItem
    individual.lastNameEng = individualProp.prop("LastNameEng").stringValue()
    individual.firstNameEng = individualProp.prop("FirstNameEng").stringValue()
    individual.middleNameEng = individualProp.prop("MiddleNameEng").stringValue()
    individual.lastName = individualProp.prop("LastName").stringValue()
    individual.firstName = individualProp.prop("FirstName").stringValue()
    individual.middleName = individualProp.prop("MiddleName").stringValue()
    individual.fullNameEng = individualProp.prop("FullNameEng").stringValue()
    individual.lastNameTranslited = individualProp.prop("LastNameTranslited").stringValue()
    individual.firstNameTranslited = individualProp.prop("FirstNameTranslited").stringValue()
    individual.middleNameTranslited = individualProp.prop("MiddleNameTranslited").stringValue()
    individual.birthdate = LocalDate.parse(individualProp.prop("Birthdate").stringValue(), dateFormatter).atStartOfDay()
    individual.placeOfBirth = individualProp.prop("PlaceOfBirth").stringValue()
    individual.citizenship = getBd(40, individualProp.prop("PlaceOfBirth").stringValue())
    individual.okato = individualProp.prop("OKATORegCode").stringValue()
    individual.registerNumber = individualProp.prop("RegisterNumber").stringValue()

    execution.setVariable("detailedClientItem", individual)
} else if (clientItem.hasProp("ClientLegal")) {
    def legalProp = clientItem.prop("ClientLegal")
    def legal = new KycCaseClientLegal()
    legal.kycCaseClientId = kycCaseClientItem
    legal.legalName = legalProp.prop("LegalName").stringValue()
    legal.legalNameTranslited = legalProp.prop("LegalNameTranslited").stringValue()
    legal.shortName = legalProp.prop("ShortName").stringValue()
    legal.shortNameEng = legalProp.prop("ShortNameEng").stringValue()
    legal.kpp = legalProp.prop("KPP").stringValue()
    legal.swiftCd = legalProp.prop("SwiftCd").stringValue()
    legal.bankId = legalProp.prop("BankId").stringValue()
    legal.registrationCity = legalProp.prop("RegistrationCity").stringValue()
    legal.okfs = getBd(39, legalProp.prop("OKFS").stringValue())
    legal.taxSerialIssueDate =     LocalDate.parse(legalProp.prop("TaxSerialIssueDate").stringValue(), dateFormatter).atStartOfDay()
    legal.registrationUnit = legalProp.prop("RegistrationUnit").stringValue()
    legal.dateOfRegistrationBeforeOgrn =         LocalDate.parse(legalProp.prop("DateOfRegistrationBeforeOGRN").stringValue(), dateFormatter).atStartOfDay()
    legal.okato = legalProp.prop("OKATO").stringValue()
    legal.legalForm = getBd(76, legalProp.prop("LegalForm").stringValue())
    legal.giin = legalProp.prop("GIIN").stringValue()
    legal.registrationUnitAddress = legalProp.prop("RegistrationUnitAddress").stringValue()
    legal.jurisdiction = getBd(40, legalProp.prop("Jurisdiction").stringValue())
    legal.lei = legalProp.prop("LEI").stringValue()

    execution.setVariable("detailedClientItem", legal)
}</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:serviceTask id="Activity_Individual_or_Legal_Saving" name="Individual or Legal Saving" camunda:delegateExpression="${saveObjectDelegate}">
              <bpmn:extensionElements>
                <camunda:inputOutput>
                  <camunda:inputParameter name="outputVarName">detailedClientItem</camunda:inputParameter>
                  <camunda:inputParameter name="saveObject">${detailedClientItem}</camunda:inputParameter>
                </camunda:inputOutput>
              </bpmn:extensionElements>
              <bpmn:incoming>Flow_03r75hn</bpmn:incoming>
              <bpmn:outgoing>Flow_0ddj40j</bpmn:outgoing>
            </bpmn:serviceTask>
            <bpmn:sequenceFlow id="Flow_03r75hn" sourceRef="Activity_Individual_or_Legal_Filling" targetRef="Activity_Individual_or_Legal_Saving" />
            <bpmn:sequenceFlow id="Flow_19ck0uz" sourceRef="Activity_KycClient_Saving" targetRef="Activity_Individual_or_Legal_Filling" />
            <bpmn:subProcess id="Activity_0t0jwx2" name="Verdocs">
              <bpmn:extensionElements />
              <bpmn:incoming>Flow_1o1e04e</bpmn:incoming>
              <bpmn:outgoing>Flow_110afzp</bpmn:outgoing>
              <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${verdocItems.elements()}" camunda:elementVariable="verdocItem" />
              <bpmn:startEvent id="Event_0gc7qhn">
                <bpmn:outgoing>Flow_0779rrq</bpmn:outgoing>
              </bpmn:startEvent>
              <bpmn:scriptTask id="Activity_Verdoc_Filling" name="Verdoc Filling" scriptFormat="groovy">
                <bpmn:incoming>Flow_0779rrq</bpmn:incoming>
                <bpmn:outgoing>Flow_0t29l6l</bpmn:outgoing>
                <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientVerdoc
import com.prime.db.rnkb.model.BaseDictionary
import java.time.LocalDate
import java.time.format.DateTimeFormatter

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def clientItem = execution.getVariable("clientItem")
def kycCaseClientItem = execution.getVariable("kycCaseClientItem")
def verdocItem = execution.getVariable("verdocItem")

DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

def verdoc = new KycCaseClientVerdoc()
verdoc.kycCaseClientId = kycCaseClientItem.getId()
verdoc.sourceId = verdocItem.prop("SourceId").stringValue()
verdoc.isMain = verdocItem.prop("IsMain").boolValue()
if (verdocItem.hasProp("IssueDate"))
    verdoc.issueDate = LocalDate.parse(verdocItem.prop("IssueDate").stringValue(), dateFormatter)
verdoc.name = verdocItem.prop("Name").stringValue()
verdoc.type = getBd(34, verdocItem.prop("Type").stringValue())
verdoc.docNumber = verdocItem.prop("DocNumber").stringValue()

if (verdocItem.hasProp("IssueByOrganization"))
    verdoc.issueByOrganization = verdocItem.prop("IssueByOrganization").stringValue()

if (verdocItem.hasProp("ExpirationDate"))
    verdoc.expirationDate = LocalDate.parse(verdocItem.prop("ExpirationDate").stringValue(), dateFormatter)
if (verdocItem.hasProp("IssueByDepartmentCode"))
    verdoc.issueByDepartmentCode = verdocItem.prop("IssueByDepartmentCode").stringValue()

execution.setVariable("verdoc", verdoc)</bpmn:script>
              </bpmn:scriptTask>
              <bpmn:sequenceFlow id="Flow_0779rrq" sourceRef="Event_0gc7qhn" targetRef="Activity_Verdoc_Filling" />
              <bpmn:serviceTask id="Activity_Verdoc_Saving" name="Verdoc Saving" camunda:delegateExpression="${saveObjectDelegate}">
                <bpmn:extensionElements>
                  <camunda:inputOutput>
                    <camunda:inputParameter name="outputVarName">verdoc</camunda:inputParameter>
                    <camunda:inputParameter name="saveObject">${verdoc}</camunda:inputParameter>
                  </camunda:inputOutput>
                </bpmn:extensionElements>
                <bpmn:incoming>Flow_0t29l6l</bpmn:incoming>
                <bpmn:outgoing>Flow_1o1vd0s</bpmn:outgoing>
              </bpmn:serviceTask>
              <bpmn:sequenceFlow id="Flow_0t29l6l" sourceRef="Activity_Verdoc_Filling" targetRef="Activity_Verdoc_Saving" />
              <bpmn:endEvent id="Event_1vwq21r">
                <bpmn:incoming>Flow_1o1vd0s</bpmn:incoming>
              </bpmn:endEvent>
              <bpmn:sequenceFlow id="Flow_1o1vd0s" sourceRef="Activity_Verdoc_Saving" targetRef="Event_1vwq21r" />
            </bpmn:subProcess>
            <bpmn:endEvent id="Event_0mccipi">
              <bpmn:incoming>Flow_110afzp</bpmn:incoming>
              <bpmn:incoming>Flow_1pkc148</bpmn:incoming>
            </bpmn:endEvent>
            <bpmn:sequenceFlow id="Flow_110afzp" sourceRef="Activity_0t0jwx2" targetRef="Event_0mccipi" />
            <bpmn:scriptTask id="Activity_Verdoc_Items_Filling" name="Verdoc Items Filling" scriptFormat="groovy">
              <bpmn:incoming>Flow_0ddj40j</bpmn:incoming>
              <bpmn:outgoing>Flow_12d7sju</bpmn:outgoing>
              <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*

def clientItem = execution.getVariable("clientItem")

if (clientItem.hasProp("VerificationDocuments")) {
    def verdocItems = clientItem.prop("VerificationDocuments")
    execution.setVariable("verdocItems", verdocItems)
} else {
    execution.setVariable("verdocItems", null)
}</bpmn:script>
            </bpmn:scriptTask>
            <bpmn:sequenceFlow id="Flow_0ddj40j" sourceRef="Activity_Individual_or_Legal_Saving" targetRef="Activity_Verdoc_Items_Filling" />
            <bpmn:exclusiveGateway id="Gateway_1n9enrx" default="Flow_1pkc148">
              <bpmn:incoming>Flow_12d7sju</bpmn:incoming>
              <bpmn:outgoing>Flow_1o1e04e</bpmn:outgoing>
              <bpmn:outgoing>Flow_1pkc148</bpmn:outgoing>
            </bpmn:exclusiveGateway>
            <bpmn:sequenceFlow id="Flow_12d7sju" sourceRef="Activity_Verdoc_Items_Filling" targetRef="Gateway_1n9enrx" />
            <bpmn:sequenceFlow id="Flow_1o1e04e" sourceRef="Gateway_1n9enrx" targetRef="Activity_0t0jwx2">
              <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${verdocItems != null}</bpmn:conditionExpression>
            </bpmn:sequenceFlow>
            <bpmn:sequenceFlow id="Flow_1pkc148" sourceRef="Gateway_1n9enrx" targetRef="Event_0mccipi" />
          </bpmn:subProcess>
          <bpmn:sequenceFlow id="Flow_1255pjq" sourceRef="Activity_02vg82q" targetRef="Activity_KycCaseClient_Creation" />
          <bpmn:sequenceFlow id="Flow_0y2tfrb" sourceRef="Activity_KycCaseClient_Creation" targetRef="Activity_1v5jznt" />
        </bpmn:subProcess>
        <bpmn:scriptTask id="Activity_0fsct6w" name="Items Filling" scriptFormat="groovy">
          <bpmn:incoming>Flow_0n8v4nt</bpmn:incoming>
          <bpmn:outgoing>Flow_00656g0</bpmn:outgoing>
          <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*

def clientItem = execution.getVariable("clientItem")

def resultItems = clientItem.prop("Results")

execution.setVariable("resultItems", resultItems)</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:sequenceFlow id="Flow_00656g0" sourceRef="Activity_0fsct6w" targetRef="Activity_10o7dqk" />
        <bpmn:serviceTask id="Activity_0ja45ts" name="Client Selection" camunda:delegateExpression="${selectOneDelegate}">
          <bpmn:extensionElements>
            <camunda:inputOutput>
              <camunda:inputParameter name="outputVarName">client</camunda:inputParameter>
              <camunda:inputParameter name="parameters">
                <camunda:map>
                  <camunda:entry key="clientId">${clientId}</camunda:entry>
                </camunda:map>
              </camunda:inputParameter>
              <camunda:inputParameter name="selectQuery">SELECT c FROM Client c WHERE c.exClientId = :clientId</camunda:inputParameter>
            </camunda:inputOutput>
          </bpmn:extensionElements>
          <bpmn:incoming>Flow_0k0u987</bpmn:incoming>
          <bpmn:outgoing>Flow_0n8v4nt</bpmn:outgoing>
        </bpmn:serviceTask>
        <bpmn:sequenceFlow id="Flow_0k0u987" sourceRef="Activity_0pnz9cm" targetRef="Activity_0ja45ts" />
        <bpmn:endEvent id="Event_00471b9">
          <bpmn:incoming>Flow_0dk0obq</bpmn:incoming>
        </bpmn:endEvent>
        <bpmn:sequenceFlow id="Flow_0dk0obq" sourceRef="Activity_10o7dqk" targetRef="Event_00471b9" />
        <bpmn:sequenceFlow id="Flow_13q4mth" sourceRef="Event_1xfcm0n" targetRef="Activity_0pnz9cm" />
        <bpmn:sequenceFlow id="Flow_0n8v4nt" sourceRef="Activity_0ja45ts" targetRef="Activity_0fsct6w" />
      </bpmn:subProcess>
      <bpmn:sequenceFlow id="Flow_0hb06iv" sourceRef="Activity_0ldya20" targetRef="Activity_Clients_Handling" />
      <bpmn:endEvent id="Event_11a48t6">
        <bpmn:incoming>Flow_0m9d8o5</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_0m9d8o5" sourceRef="Activity_Clients_Handling" targetRef="Event_11a48t6" />
    </bpmn:subProcess>
    <bpmn:serviceTask id="Activity_0utp56l" name="End Transaction Delegate" camunda:delegateExpression="${endTransactionDelegate}">
      <bpmn:incoming>Flow_03gukxj</bpmn:incoming>
      <bpmn:outgoing>Flow_0euspvr</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0euspvr" sourceRef="Activity_0utp56l" targetRef="Event_056f6k2" />
    <bpmn:sequenceFlow id="Flow_03gukxj" sourceRef="Activity_1mw9f6o" targetRef="Activity_0utp56l" />
    <bpmn:sequenceFlow id="Flow_0v9yh38" sourceRef="Activity_0uuh0i5" targetRef="Activity_1mw9f6o" />
    <bpmn:endEvent id="Event_056f6k2">
      <bpmn:incoming>Flow_0euspvr</bpmn:incoming>
    </bpmn:endEvent>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="amlCsmKycClientRequest">
      <bpmndi:BPMNEdge id="Flow_0v9yh38_di" bpmnElement="Flow_0v9yh38">
        <di:waypoint x="630" y="440" />
        <di:waypoint x="700" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_03gukxj_di" bpmnElement="Flow_03gukxj">
        <di:waypoint x="6630" y="390" />
        <di:waypoint x="6690" y="390" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_15rcu80" bpmnElement="Flow_0euspvr">
        <di:waypoint x="6790" y="390" />
        <di:waypoint x="7032" y="390" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0auvdjj" bpmnElement="Flow_05quuqa">
        <di:waypoint x="330" y="440" />
        <di:waypoint x="530" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1jh5w26" bpmnElement="Flow_1crfnfk">
        <di:waypoint x="195" y="440" />
        <di:waypoint x="230" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="BPMNShape_1tuq9xm" bpmnElement="Event_0bpxwwc">
        <dc:Bounds x="159" y="422" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0sz0otu" bpmnElement="Activity_0fehiu4">
        <dc:Bounds x="230" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0fqc74d" bpmnElement="Activity_0uuh0i5">
        <dc:Bounds x="530" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1mw9f6o_di" bpmnElement="Activity_1mw9f6o" isExpanded="true">
        <dc:Bounds x="700" y="80" width="5930" height="620" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0m9d8o5_di" bpmnElement="Flow_0m9d8o5">
        <di:waypoint x="6530" y="400" />
        <di:waypoint x="6572" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0hb06iv_di" bpmnElement="Flow_0hb06iv">
        <di:waypoint x="910" y="440" />
        <di:waypoint x="950" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0nm40x4_di" bpmnElement="Flow_0nm40x4">
        <di:waypoint x="776" y="440" />
        <di:waypoint x="810" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_01z62wt_di" bpmnElement="Event_01z62wt">
        <dc:Bounds x="740" y="422" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_15nnyml" bpmnElement="Activity_0ldya20">
        <dc:Bounds x="810" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0h6rz8w_di" bpmnElement="Activity_Clients_Handling" isExpanded="true">
        <dc:Bounds x="950" y="130" width="5580" height="540" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0n8v4nt_di" bpmnElement="Flow_0n8v4nt">
        <di:waypoint x="1290" y="440" />
        <di:waypoint x="1340" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13q4mth_di" bpmnElement="Flow_13q4mth">
        <di:waypoint x="1008" y="440" />
        <di:waypoint x="1050" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0dk0obq_di" bpmnElement="Flow_0dk0obq">
        <di:waypoint x="6400" y="395" />
        <di:waypoint x="6452" y="395" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0k0u987_di" bpmnElement="Flow_0k0u987">
        <di:waypoint x="1150" y="440" />
        <di:waypoint x="1190" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_00656g0_di" bpmnElement="Flow_00656g0">
        <di:waypoint x="1440" y="440" />
        <di:waypoint x="1500" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_1xfcm0n_di" bpmnElement="Event_1xfcm0n">
        <dc:Bounds x="972" y="422" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1daer2i" bpmnElement="Activity_0pnz9cm">
        <dc:Bounds x="1050" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_10o7dqk_di" bpmnElement="Activity_10o7dqk" isExpanded="true">
        <dc:Bounds x="1500" y="180" width="4900" height="430" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0y2tfrb_di" bpmnElement="Flow_0y2tfrb">
        <di:waypoint x="4440" y="440" />
        <di:waypoint x="4510" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1255pjq_di" bpmnElement="Flow_1255pjq">
        <di:waypoint x="2940" y="395" />
        <di:waypoint x="2980" y="395" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1897it8_di" bpmnElement="Flow_1897it8">
        <di:waypoint x="1750" y="440" />
        <di:waypoint x="1840" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0rdzslu_di" bpmnElement="Flow_0rdzslu">
        <di:waypoint x="1576" y="440" />
        <di:waypoint x="1650" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_15ogu7q_di" bpmnElement="Flow_15ogu7q">
        <di:waypoint x="6270" y="450" />
        <di:waypoint x="6312" y="450" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1vgkfgw_di" bpmnElement="Flow_1vgkfgw">
        <di:waypoint x="2080" y="465" />
        <di:waypoint x="2080" y="500" />
        <di:waypoint x="2450" y="500" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2164" y="475" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1yqdt8n_di" bpmnElement="Flow_1yqdt8n">
        <di:waypoint x="2380" y="300" />
        <di:waypoint x="2400" y="300" />
        <di:waypoint x="2400" y="440" />
        <di:waypoint x="2450" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1vua5pp_di" bpmnElement="Flow_1vua5pp">
        <di:waypoint x="1940" y="440" />
        <di:waypoint x="2055" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1tqn68u" bpmnElement="Flow_05f27h4">
        <di:waypoint x="2250" y="300" />
        <di:waypoint x="2280" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_126k050" bpmnElement="Flow_00mgcwc">
        <di:waypoint x="2105" y="440" />
        <di:waypoint x="2242" y="440" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2156" y="422" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0f7a756" bpmnElement="Flow_0sn2zax">
        <di:waypoint x="2080" y="415" />
        <di:waypoint x="2080" y="300" />
        <di:waypoint x="2150" y="300" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2096" y="282" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_118qtrk_di" bpmnElement="Event_118qtrk">
        <dc:Bounds x="1540" y="422" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0uvjv0r" bpmnElement="Activity_0uzj693">
        <dc:Bounds x="1650" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0yjt5uz" bpmnElement="Activity_15sew4o">
        <dc:Bounds x="1840" y="400" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1lhf6pn" bpmnElement="Gateway_0uxnypy" isMarkerVisible="true">
        <dc:Bounds x="2055" y="415" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_03icpep" bpmnElement="Activity_15cx39w">
        <dc:Bounds x="2150" y="260" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_16h2c9d" bpmnElement="Activity_1js50xw">
        <dc:Bounds x="2280" y="260" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0rmuzvk" bpmnElement="Event_09g1ver">
        <dc:Bounds x="2242" y="422" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_04uo9hr" bpmnElement="Activity_02vg82q" isExpanded="true">
        <dc:Bounds x="2450" y="340" width="490" height="200" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="BPMNEdge_0uikk8q" bpmnElement="Flow_18xp7a5">
        <di:waypoint x="2506" y="440" />
        <di:waypoint x="2560" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0roknli" bpmnElement="Flow_0xqw8f0">
        <di:waypoint x="2660" y="440" />
        <di:waypoint x="2730" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0q9oh8h" bpmnElement="Flow_0vgu2xc">
        <di:waypoint x="2830" y="440" />
        <di:waypoint x="2882" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="BPMNShape_0jbgcos" bpmnElement="Event_09o8qzt">
        <dc:Bounds x="2470" y="422" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1lm74z8" bpmnElement="Activity_1cp5fv0">
        <dc:Bounds x="2560" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_197knfl" bpmnElement="Activity_Case_Saving">
        <dc:Bounds x="2730" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_05gcfyi" bpmnElement="Event_0m0mboy">
        <dc:Bounds x="2882" y="422" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1pzr1q0" bpmnElement="Activity_1v5jznt" isExpanded="true">
        <dc:Bounds x="4510" y="346" width="1760" height="188" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="BPMNEdge_1qyoci5" bpmnElement="Flow_0leqngs">
        <di:waypoint x="4578" y="436" />
        <di:waypoint x="4620" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1cbsmjj" bpmnElement="Flow_19djyrd">
        <di:waypoint x="4720" y="436" />
        <di:waypoint x="4760" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_15fmi21" bpmnElement="Flow_0eetssk">
        <di:waypoint x="5260" y="436" />
        <di:waypoint x="5280" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1d57pdp" bpmnElement="Flow_0tnbmu6">
        <di:waypoint x="5970" y="436" />
        <di:waypoint x="6030" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0mxnxk2" bpmnElement="Flow_1y17db5">
        <di:waypoint x="5520" y="436" />
        <di:waypoint x="5570" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1co6cji" bpmnElement="Flow_17xowf4">
        <di:waypoint x="5380" y="436" />
        <di:waypoint x="5420" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1a6cgc8" bpmnElement="Flow_0wwts1a">
        <di:waypoint x="4860" y="436" />
        <di:waypoint x="4890" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_12axuwj" bpmnElement="Flow_1wdsir7">
        <di:waypoint x="4990" y="436" />
        <di:waypoint x="5029" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0mlpzkm" bpmnElement="Flow_0crol6n">
        <di:waypoint x="5129" y="436" />
        <di:waypoint x="5160" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0sv6qyg" bpmnElement="Flow_064q816">
        <di:waypoint x="5670" y="436" />
        <di:waypoint x="5720" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1oa90xb" bpmnElement="Flow_1trwpwi">
        <di:waypoint x="5820" y="436" />
        <di:waypoint x="5870" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_00vq379" bpmnElement="Flow_1dvreq0">
        <di:waypoint x="5970" y="436" />
        <di:waypoint x="6030" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0yyoeum" bpmnElement="Flow_0or65n9">
        <di:waypoint x="6130" y="436" />
        <di:waypoint x="6192" y="436" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="BPMNShape_1skvggg" bpmnElement="Event_1pfart9">
        <dc:Bounds x="4542" y="418" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ed4itf" bpmnElement="Activity_00si6fi">
        <dc:Bounds x="4620" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1a72wnn" bpmnElement="Activity_06v13eb">
        <dc:Bounds x="5160" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_16n6ysa" bpmnElement="Activity_List1_Saving">
        <dc:Bounds x="4760" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_07qc3m6" bpmnElement="Activity_1c5haxn">
        <dc:Bounds x="4890" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1gtz0ii" bpmnElement="Activity_List2_Saving">
        <dc:Bounds x="5029" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ueuq6b" bpmnElement="Activity_Save_Lists">
        <dc:Bounds x="6030" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1xlbcgf" bpmnElement="Activity_09mhvto">
        <dc:Bounds x="5870" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0gt0z2j" bpmnElement="Activity_1j7iunw">
        <dc:Bounds x="5570" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0nsvm6h" bpmnElement="Activity_1i3xrqv">
        <dc:Bounds x="5420" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0lod7r1" bpmnElement="Activity_1nbbps9">
        <dc:Bounds x="5280" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ccuw3x" bpmnElement="Activity_05v8l85">
        <dc:Bounds x="5720" y="396" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1hd56ex" bpmnElement="Event_0eblwtk">
        <dc:Bounds x="6192" y="418" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0m31yx9_di" bpmnElement="Event_0m31yx9">
        <dc:Bounds x="6312" y="432" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1mt6d7a_di" bpmnElement="Activity_KycCaseClient_Creation" isExpanded="true">
        <dc:Bounds x="2980" y="250" width="1460" height="290" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1pkc148_di" bpmnElement="Flow_1pkc148">
        <di:waypoint x="3810" y="425" />
        <di:waypoint x="3810" y="520" />
        <di:waypoint x="4380" y="520" />
        <di:waypoint x="4380" y="418" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1o1e04e_di" bpmnElement="Flow_1o1e04e">
        <di:waypoint x="3835" y="400" />
        <di:waypoint x="3870" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_12d7sju_di" bpmnElement="Flow_12d7sju">
        <di:waypoint x="3750" y="400" />
        <di:waypoint x="3785" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ddj40j_di" bpmnElement="Flow_0ddj40j">
        <di:waypoint x="3620" y="400" />
        <di:waypoint x="3650" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_110afzp_di" bpmnElement="Flow_110afzp">
        <di:waypoint x="4280" y="400" />
        <di:waypoint x="4362" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_19ck0uz_di" bpmnElement="Flow_19ck0uz">
        <di:waypoint x="3340" y="400" />
        <di:waypoint x="3380" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_03r75hn_di" bpmnElement="Flow_03r75hn">
        <di:waypoint x="3480" y="400" />
        <di:waypoint x="3520" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1vb9g4s_di" bpmnElement="Flow_1vb9g4s">
        <di:waypoint x="3056" y="400" />
        <di:waypoint x="3090" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0r1i49m_di" bpmnElement="Flow_0r1i49m">
        <di:waypoint x="3190" y="400" />
        <di:waypoint x="3240" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_0fwct2q_di" bpmnElement="Event_0fwct2q">
        <dc:Bounds x="3020" y="382" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_13yra65" bpmnElement="Activity_KycClient_Filling">
        <dc:Bounds x="3090" y="360" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0plcx6n" bpmnElement="Activity_KycClient_Saving">
        <dc:Bounds x="3240" y="360" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1gsy73x" bpmnElement="Activity_Individual_or_Legal_Filling">
        <dc:Bounds x="3380" y="360" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1uf9hl0" bpmnElement="Activity_Individual_or_Legal_Saving">
        <dc:Bounds x="3520" y="360" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0t0jwx2_di" bpmnElement="Activity_0t0jwx2" isExpanded="true">
        <dc:Bounds x="3870" y="300" width="410" height="200" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1o1vd0s_di" bpmnElement="Flow_1o1vd0s">
        <di:waypoint x="4190" y="400" />
        <di:waypoint x="4222" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0t29l6l_di" bpmnElement="Flow_0t29l6l">
        <di:waypoint x="4060" y="400" />
        <di:waypoint x="4090" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0779rrq_di" bpmnElement="Flow_0779rrq">
        <di:waypoint x="3928" y="400" />
        <di:waypoint x="3960" y="400" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_0gc7qhn_di" bpmnElement="Event_0gc7qhn">
        <dc:Bounds x="3892" y="382" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1do2z4s" bpmnElement="Activity_Verdoc_Filling">
        <dc:Bounds x="3960" y="360" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_08gdvqh" bpmnElement="Activity_Verdoc_Saving">
        <dc:Bounds x="4090" y="360" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1vwq21r_di" bpmnElement="Event_1vwq21r">
        <dc:Bounds x="4222" y="382" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0mccipi_di" bpmnElement="Event_0mccipi">
        <dc:Bounds x="4362" y="382" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1hfyloe" bpmnElement="Activity_Verdoc_Items_Filling">
        <dc:Bounds x="3650" y="360" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1n9enrx_di" bpmnElement="Gateway_1n9enrx" isMarkerVisible="true">
        <dc:Bounds x="3785" y="375" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0e192h5" bpmnElement="Activity_0fsct6w">
        <dc:Bounds x="1340" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0xqx516" bpmnElement="Activity_0ja45ts">
        <dc:Bounds x="1190" y="400" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_00471b9_di" bpmnElement="Event_00471b9">
        <dc:Bounds x="6452" y="377" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_11a48t6_di" bpmnElement="Event_11a48t6">
        <dc:Bounds x="6572" y="382" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0dhs369" bpmnElement="Activity_0utp56l">
        <dc:Bounds x="6690" y="350" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_056f6k2_di" bpmnElement="Event_056f6k2">
        <dc:Bounds x="7032" y="372" width="36" height="36" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
