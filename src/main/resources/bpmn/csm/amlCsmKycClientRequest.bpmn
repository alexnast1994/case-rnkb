<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1eoxw1v" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.0.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
  <bpmn:process id="amlCsmKycClientRequest" name="19. Сохранение результатов Онлайн/Офлайн от поисковой машины по клиентам" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_0dvx4sc</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:endEvent id="Event_009dr5b">
      <bpmn:incoming>Flow_1qkyy98</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:serviceTask id="Activity_Process_Logging" name="Process Logging" camunda:delegateExpression="${loggerDelegate}">
      <bpmn:incoming>Flow_0dvx4sc</bpmn:incoming>
      <bpmn:outgoing>Flow_0tmz7xl</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0dvx4sc" sourceRef="StartEvent_1" targetRef="Activity_Process_Logging" />
    <bpmn:serviceTask id="Activity_Open_Session" name="Open Session" camunda:delegateExpression="${openSessionDelegate}">
      <bpmn:incoming>Flow_0tmz7xl</bpmn:incoming>
      <bpmn:outgoing>Flow_1fmjt5z</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:subProcess id="Activity_038bidn">
      <bpmn:incoming>Flow_1iepyy5</bpmn:incoming>
      <bpmn:outgoing>Flow_16i4xfs</bpmn:outgoing>
      <bpmn:startEvent id="Event_1i5ua25">
        <bpmn:outgoing>Flow_1jftf2k</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:scriptTask id="Activity_Payload_Retirieving" name="Payload Retirieving" scriptFormat="groovy">
        <bpmn:incoming>Flow_1jftf2k</bpmn:incoming>
        <bpmn:outgoing>Flow_1umk5kd</bpmn:outgoing>
        <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*

def jsonStr = execution.getVariable("payload")
def jsonData = JSON(jsonStr)

def clients = jsonData.prop("Clients").elements()
if(clients.size() &gt; 0) {
    def client = clients.get(0);
    def exIds = []
    def nums = []

    client.prop("Results")?.elements()?.each{r -&gt;
        def exId = r.prop("record").prop("exId")?.stringValue()
        if (exId != null) {
            exIds.add(exId)
        }

        def num = r.prop("record").prop("num")?.stringValue()
        if (num != null) {
            nums.add(num)
        }
    }

    execution.setVariable("clients", jsonData.prop("Clients"))
    execution.setVariable("exIds", exIds)
    execution.setVariable("nums", nums)
} else {
    throw new RuntimeException("Invalid Clients")
}

def clientCheckResults = jsonData.prop("ResponseData").prop("ClientCheckResult").elements()
if (clientCheckResults.size() &gt; 0) {
    def data = clientCheckResults.get(0)
    def clientId = data.prop("SourceId")?.stringValue()
    def typeList = []

    data.prop("KYCList")?.elements()?.each{kyc -&gt;
        def type = kyc.prop("Id")?.stringValue()
        if (type != null) {
            typeList.add(type)
        }
    }

    execution.setVariable("clientId", clientId)
    execution.setVariable("typeList", typeList)
    execution.setVariable("clientCheckResults", jsonData.prop("ResponseData").prop("ClientCheckResult"))
} else {
    throw new RuntimeException("Invalid ClientCheckResult")
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_1jftf2k" sourceRef="Event_1i5ua25" targetRef="Activity_Payload_Retirieving" />
      <bpmn:sequenceFlow id="Flow_1umk5kd" sourceRef="Activity_Payload_Retirieving" targetRef="Activity_Case_Selection" />
      <bpmn:serviceTask id="Activity_Case_Selection" name="Case Selection" camunda:delegateExpression="${selectOneDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">case</camunda:inputParameter>
            <camunda:inputParameter name="parameters">
              <camunda:map>
                <camunda:entry key="clientId">${clientId}</camunda:entry>
                <camunda:entry key="typeList">${typeList}</camunda:entry>
                <camunda:entry key="exIds">${exIds}</camunda:entry>
                <camunda:entry key="nums">${nums}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT c.* FROM \"CASE\" c INNER JOIN KYCCASECLIENTLIST1 l1 ON l1.caseid = c.id INNER JOIN KYCCASECLIENTLIST2 l2 ON l2.caseid = c.id WHERE l1.clientid = :clientId AND l2.typelist IN :typeList AND l2.exid IN :exIds AND l2.num IN :nums AND c.CREATIONDATE = (SELECT max(c.CREATIONDATE) FROM \"CASE\" c INNER JOIN KYCCASECLIENTLIST1 l1 ON l1.caseid = c.id INNER JOIN KYCCASECLIENTLIST2 l2 ON l2.caseid = c.id WHERE l1.clientid = :clientId AND l2.typelist IN :typeList AND l2.exid IN :exIds AND l2.num IN :nums) ORDER BY c.CREATIONDATE desc</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1umk5kd</bpmn:incoming>
        <bpmn:outgoing>Flow_02epdra</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_Case_Status_Decision" name="Case Status Decision" scriptFormat="groovy">
        <bpmn:incoming>Flow_02epdra</bpmn:incoming>
        <bpmn:outgoing>Flow_0wdbxtf</bpmn:outgoing>
        <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def status1 = getBd(286, "1")
def status2 = getBd(286, "2")
def status3 = getBd(286, "3")
def status4 = getBd(286, "4")
def status5 = getBd(286, "5")

def cs = execution.getVariable("case")
def status = cs.status
def processName = execution.getVariable("processName")
def csd = 0

if ((status == status1 &amp;&amp; processName == "clientProcess") || (status == status2 &amp;&amp; processName == "offlineCreateCase")) {
    csd = 1
} else if (status == status3 || status == status4) {
    csd = 2
} else if (status == status5) {
    csd = 3
}

execution.setVariable("csd", csd)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_02epdra" sourceRef="Activity_Case_Selection" targetRef="Activity_Case_Status_Decision" />
      <bpmn:exclusiveGateway id="Gateway_1ixvp1l">
        <bpmn:incoming>Flow_0wdbxtf</bpmn:incoming>
        <bpmn:outgoing>Flow_Case_Status_Decision_Variant_1</bpmn:outgoing>
        <bpmn:outgoing>Flow_Case_Status_Decision_Variant_2</bpmn:outgoing>
        <bpmn:outgoing>Flow_Case_Status_Decision_Variant_3</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0wdbxtf" sourceRef="Activity_Case_Status_Decision" targetRef="Gateway_1ixvp1l" />
      <bpmn:sequenceFlow id="Flow_Case_Status_Decision_Variant_1" name="CSD #1" sourceRef="Gateway_1ixvp1l" targetRef="Activity_Change_Case_Status">
        <bpmn:documentation>CSD - Case Status Decision - Решение по статусу найденного кейса (или ненайденного)
1 - Меняем статус найденного кейса и создаем новый
2 - Завершаем процесс
3 - Создаем новый кейс</bpmn:documentation>
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${csd == 1}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:scriptTask id="Activity_Change_Case_Status" name="Change Case Status" scriptFormat="groovy">
        <bpmn:incoming>Flow_Case_Status_Decision_Variant_1</bpmn:incoming>
        <bpmn:outgoing>Flow_1s75o9g</bpmn:outgoing>
        <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def status3 = getBd(286, "3")
def cs = execution.getVariable("case")

cs.status = status3
execution.setVariable("case", cs)

</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_Save_Case_Status" name="Save Case Status" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${case}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1s75o9g</bpmn:incoming>
        <bpmn:outgoing>Flow_1f117pp</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1s75o9g" sourceRef="Activity_Change_Case_Status" targetRef="Activity_Save_Case_Status" />
      <bpmn:endEvent id="Event_1ex7y4t">
        <bpmn:incoming>Flow_Case_Status_Decision_Variant_2</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_Case_Status_Decision_Variant_2" name="CSD #2" sourceRef="Gateway_1ixvp1l" targetRef="Event_1ex7y4t">
        <bpmn:documentation>CSD - Case Status Decision - Решение по статусу найденного кейса (или ненайденного)
1 - Меняем статус найденного кейса и создаем новый
2 - Завершаем процесс
3 - Создаем новый кейс</bpmn:documentation>
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${csd == 2}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:subProcess id="Activity_06ner0a" name="Client Handling">
        <bpmn:incoming>Flow_Case_Status_Decision_Variant_3</bpmn:incoming>
        <bpmn:incoming>Flow_1f117pp</bpmn:incoming>
        <bpmn:outgoing>Flow_1auljgg</bpmn:outgoing>
        <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${clientCheckResults.elements()}" camunda:elementVariable="clientCheckResult" />
        <bpmn:startEvent id="Event_0nwiigi">
          <bpmn:outgoing>Flow_1efdc2t</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:serviceTask id="Activity_1o3wbs1" name="Client Selection" camunda:delegateExpression="${selectOneDelegate}">
          <bpmn:extensionElements>
            <camunda:inputOutput>
              <camunda:inputParameter name="outputVarName">client</camunda:inputParameter>
              <camunda:inputParameter name="parameters">
                <camunda:map>
                  <camunda:entry key="clientId">${clientId}</camunda:entry>
                </camunda:map>
              </camunda:inputParameter>
              <camunda:inputParameter name="selectQuery">SELECT c FROM Client c WHERE c.exClientId = :clientId</camunda:inputParameter>
            </camunda:inputOutput>
          </bpmn:extensionElements>
          <bpmn:incoming>Flow_0dgquoy</bpmn:incoming>
          <bpmn:outgoing>Flow_0uooo24</bpmn:outgoing>
        </bpmn:serviceTask>
        <bpmn:scriptTask id="Activity_Items_Filling" name="Items Filling" scriptFormat="groovy">
          <bpmn:incoming>Flow_0uooo24</bpmn:incoming>
          <bpmn:outgoing>Flow_02vr7hf</bpmn:outgoing>
          <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.BaseDictionary

def clientCheckResult = execution.getVariable("clientCheckResult")

def kycList = clientCheckResult.prop("KYCList")?.elements()
def kycItems = JSON("[]")

kycList?.each{kycItem -&gt;
    def checkStatus = kycItem.prop("CheckStatus").stringValue()
    if(checkStatus == "1" || checkStatus == "2" || checkStatus == "3") {
        kycItems.append(kycItem)
    }
}

execution.setVariable("kycItems", kycItems)

def resultItems = JSON("[]")
def clients = execution.getVariable("clients").elements()

clients.each{client -&gt; 
    def checkResultSourceId = clientCheckResult.prop("SourceId")?.stringValue()    
    def clientSourceId = client.prop("SourceId")?.stringValue()

    if (checkResultSourceId == clientSourceId) {
        resultItems = client.prop("Results")
    }
}

execution.setVariable("resultItems", resultItems)</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:subProcess id="Activity_Case_Creation" name="Case Creation">
          <bpmn:extensionElements />
          <bpmn:incoming>Flow_02vr7hf</bpmn:incoming>
          <bpmn:outgoing>Flow_00e0pz8</bpmn:outgoing>
          <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${kycItems.elements()}" camunda:elementVariable="kycItem" />
          <bpmn:startEvent id="Event_0o64b6z">
            <bpmn:outgoing>Flow_0dyv6eh</bpmn:outgoing>
          </bpmn:startEvent>
          <bpmn:scriptTask id="Activity_Case_Filling" name="Case Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_0dyv6eh</bpmn:incoming>
            <bpmn:outgoing>Flow_0o2uo40</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.Case
import com.prime.db.rnkb.model.BaseDictionary
import java.time.LocalDateTime

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def processName = execution.getVariable("processName")
def csd = execution.getVariable("csd")
def status

if (csd == null &amp;&amp; processName == "clientProcess") {
    status = getBd(286, "1")
} else if (csd == null &amp;&amp; processName == "offlineCreateCase") {
    status = getBd(286, "2")
} else if (csd == 1) {
    status = getBd(286, "3")
} else if (csd == 3) {
    status = getBd(286, "5")
} else {
    throw new RuntimeException("Case status cannot be calculated")
}


def cs = new Case()
cs.caseType = getBd(18, "5")
cs.status = status
cs.creationdate = LocalDateTime.now()

execution.setVariable("caseItem", cs)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:serviceTask id="Activity_Case_Saving" name="Case Saving" camunda:delegateExpression="${saveObjectDelegate}">
            <bpmn:extensionElements>
              <camunda:inputOutput>
                <camunda:inputParameter name="saveObject">${caseItem}</camunda:inputParameter>
                <camunda:inputParameter name="outputVarName">caseItem</camunda:inputParameter>
              </camunda:inputOutput>
            </bpmn:extensionElements>
            <bpmn:incoming>Flow_0o2uo40</bpmn:incoming>
            <bpmn:outgoing>Flow_0z17ecp</bpmn:outgoing>
          </bpmn:serviceTask>
          <bpmn:sequenceFlow id="Flow_0dyv6eh" sourceRef="Event_0o64b6z" targetRef="Activity_Case_Filling" />
          <bpmn:sequenceFlow id="Flow_0o2uo40" sourceRef="Activity_Case_Filling" targetRef="Activity_Case_Saving" />
          <bpmn:endEvent id="Event_1k5vjr4">
            <bpmn:incoming>Flow_0z17ecp</bpmn:incoming>
          </bpmn:endEvent>
          <bpmn:sequenceFlow id="Flow_0z17ecp" sourceRef="Activity_Case_Saving" targetRef="Event_1k5vjr4" />
        </bpmn:subProcess>
        <bpmn:scriptTask id="Activity_Client_Id_Filling" name="Client Id Filling" scriptFormat="groovy">
          <bpmn:incoming>Flow_1efdc2t</bpmn:incoming>
          <bpmn:outgoing>Flow_0dgquoy</bpmn:outgoing>
          <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.BaseDictionary

def data = execution.getVariable("clientCheckResult")
def clientId = data.prop("SourceId")?.stringValue()

execution.setVariable("clientId", clientId)</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:subProcess id="Activity_0rl2tki" name="Parse results">
          <bpmn:incoming>Flow_00e0pz8</bpmn:incoming>
          <bpmn:outgoing>Flow_1uq5ivp</bpmn:outgoing>
          <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:collection="${resultItems.elements()}" camunda:elementVariable="resultItem" />
          <bpmn:startEvent id="Event_02vyhbf">
            <bpmn:outgoing>Flow_1dc1p28</bpmn:outgoing>
          </bpmn:startEvent>
          <bpmn:scriptTask id="Activity_List1_Filling" name="List1 Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_1dc1p28</bpmn:incoming>
            <bpmn:outgoing>Flow_13y71xb</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientList1

def cs = execution.getVariable("caseItem")
def client = execution.getVariable("client")

def list1 = new KycCaseClientList1()
list1.caseId = cs
list1.clientId = client

execution.setVariable("list1Item", list1)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:scriptTask id="Activity_Name_List_Filling" name="Name List Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_0qh6qx7</bpmn:incoming>
            <bpmn:outgoing>Flow_0qhshsc</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientNameList;
import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")


def names = resultItem.prop("record")?.prop("nameList")?.elements()

def bestMatch = resultItem.prop("bestMatch")?.prop("name")?.stringValue()
def bestMatchType = resultItem.prop("bestMatch")?.prop("nameType")?.stringValue()

def saveObjects = []

names?.each{name -&gt;
    def nameType = name.prop("nameType").stringValue()

    def nameList = new KycCaseClientNameList()
    nameList.kycCaseClientList2Id = list2Item
    nameList.nameType = getBd(280, nameType)
    nameList.name = name.prop("name").stringValue();

    if (name.hasProp("firstName")) {
        nameList.firstName = name.prop("firstName").stringValue()
    }

    if (name.hasProp("lastName")) {
        nameList.lastName = name.prop("lastName").stringValue()
    }

    if (name.hasProp("middleName")) {
        nameList.middleName = name.prop("middleName").stringValue()
    }

    if (name.hasProp("Latin")) {
        nameList.latin = name.prop("Latin").stringValue()
    }

    if (name.hasProp("DateOfBirth")) {
        nameList.dateOfBirth = name.prop("DateOfBirth").stringValue()
    }

    if (name.hasProp("YearOfBirth")) {
        nameList.yearOfBirth = name.prop("YearOfBirth").stringValue()
    }

    if (name.hasProp("PlaceOfBirth")) {
        nameList.placeOfBirth = name.prop("PlaceOfBirth").stringValue()
    }

    if (name.hasProp("INN")) {
        nameList.inn = name.prop("INN").stringValue()
    }

    if (name.hasProp("SNILS")) {
        nameList.snils = name.prop("SNILS").stringValue()
    }

    if (name.hasProp("RegistrationDate")) {
        nameList.registrationDate = name.prop("RegistrationDate").stringValue()
    }

    if (name.hasProp("PlaceOfRegistration")) {
        nameList.placeOfRegistration = name.prop("PlaceOfRegistration").stringValue()
    }

    if (name.hasProp("OGRN")) {
        nameList.ogrn = name.prop("OGRN").stringValue()
    }

    nameList.bestMatch = (nameList.name == bestMatch &amp;&amp; nameType == bestMatchType);

    saveObjects.add(nameList)
}

execution.setVariable("saveObjects", saveObjects);</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:serviceTask id="Activity_List1_Saving" name="List1 Saving" camunda:delegateExpression="${saveObjectDelegate}">
            <bpmn:extensionElements>
              <camunda:inputOutput>
                <camunda:inputParameter name="outputVarName">list1Item</camunda:inputParameter>
                <camunda:inputParameter name="saveObject">${list1Item}</camunda:inputParameter>
              </camunda:inputOutput>
            </bpmn:extensionElements>
            <bpmn:incoming>Flow_13y71xb</bpmn:incoming>
            <bpmn:outgoing>Flow_1um56dj</bpmn:outgoing>
          </bpmn:serviceTask>
          <bpmn:sequenceFlow id="Flow_1dc1p28" sourceRef="Event_02vyhbf" targetRef="Activity_List1_Filling" />
          <bpmn:sequenceFlow id="Flow_13y71xb" sourceRef="Activity_List1_Filling" targetRef="Activity_List1_Saving" />
          <bpmn:scriptTask id="Activity_List2_Filling" name="List2 Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_1um56dj</bpmn:incoming>
            <bpmn:outgoing>Flow_1x5a3to</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientList2
import com.prime.db.rnkb.model.BaseDictionary
import org.camunda.spin.json.SpinJsonNode

BaseDictionary getBd(Integer type, String code) {
   baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

String getMarkers(SpinJsonNode node, List&lt;String&gt; markers) {
    def result = []
    markers.each{m -&gt;
        if(m.startsWith("M")) {
            if(node.prop(m).isBoolean() &amp;&amp; node.prop(m).boolValue() == true)
                result.add(m)
        } else {
            if(node.prop(m)?.numberValue() != 0)
                result.add(m)
        }
    }

    return result.join(";")
}

def markers = ["M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9", "M10", "M11", "M12", "M13", "M14", "M15", "M16", "M17","M18", "M19", "M20", "M21", "M22", "M23", "M24", "M25", "M26", "D27", "D28", "D29", "D0", "M28", "M29", "M30", "M31", "M32", "M33", "M34", "M35", "M36"]

def cs = execution.getVariable("caseItem")
def resultItem = execution.getVariable("resultItem")

def kycList = resultItem.prop("KYCList")
def typeList = kycList.prop("Id").stringValue()
def record = resultItem.prop("record")
def isActive = resultItem.prop("record").prop("isActive").boolValue()
def entityType = resultItem.prop("record").prop("entityType").stringValue()
def d0 = resultItem.prop("D0").numberValue()?.intValue()
def d27 = resultItem.prop("D27").numberValue()?.intValue()
def d28 = resultItem.prop("D28").numberValue()?.intValue()
def d29 = resultItem.prop("D29").numberValue()?.intValue()
// def levelBlocking = kycList.prop("LevelBlocking").numberValue()?.intValue()
// def checkStatus = kycList.prop("CheckStatus")?.numberValue()?.intValue()

def list2 = new KycCaseClientList2()
list2.caseId = cs
list2.typeList = getBd(214, typeList)
list2.exId = record.prop("exId").stringValue()
list2.num = record.prop("num").stringValue()
list2.markers = getMarkers(resultItem, markers)
list2.nameMatch = d0
list2.firstName = d27
list2.lastName = d28
list2.middleName = d29
//list2.levelBlocking = levelBlocking
//list2.checkStatus = checkStatus
list2.isActive = isActive
list2.entityType = entityType

execution.setVariable("list2Item", list2)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:serviceTask id="Activity_List2_Saving" name="List2 Saving" camunda:delegateExpression="${saveObjectDelegate}">
            <bpmn:extensionElements>
              <camunda:inputOutput>
                <camunda:inputParameter name="outputVarName">list1Item</camunda:inputParameter>
                <camunda:inputParameter name="saveObject">${list2Item}</camunda:inputParameter>
              </camunda:inputOutput>
            </bpmn:extensionElements>
            <bpmn:incoming>Flow_1x5a3to</bpmn:incoming>
            <bpmn:outgoing>Flow_0qh6qx7</bpmn:outgoing>
          </bpmn:serviceTask>
          <bpmn:sequenceFlow id="Flow_0qhshsc" sourceRef="Activity_Name_List_Filling" targetRef="Activity_Address_List_Filling" />
          <bpmn:sequenceFlow id="Flow_0x82lkj" sourceRef="Activity_Versions_List_Filling" targetRef="Activity_Save_Lists" />
          <bpmn:sequenceFlow id="Flow_015jx0t" sourceRef="Activity_Date_List_Filling" targetRef="Activity_Identity_List_Filling" />
          <bpmn:sequenceFlow id="Flow_14b4wst" sourceRef="Activity_Address_List_Filling" targetRef="Activity_Date_List_Filling" />
          <bpmn:serviceTask id="Activity_Save_Lists" name="Save Lists" camunda:delegateExpression="${saveObjectListDelegate}">
            <bpmn:extensionElements>
              <camunda:inputOutput>
                <camunda:inputParameter name="saveObject">${saveObjects}</camunda:inputParameter>
              </camunda:inputOutput>
            </bpmn:extensionElements>
            <bpmn:incoming>Flow_0x82lkj</bpmn:incoming>
            <bpmn:incoming>Flow_1pbdlz2</bpmn:incoming>
            <bpmn:outgoing>Flow_1ykvkqu</bpmn:outgoing>
          </bpmn:serviceTask>
          <bpmn:scriptTask id="Activity_Versions_List_Filling" name="Versions List Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_00ols1c</bpmn:incoming>
            <bpmn:outgoing>Flow_0x82lkj</bpmn:outgoing>
            <bpmn:outgoing>Flow_1pbdlz2</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientVersionsList;
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def versions = resultItem?.prop("record")?.prop("versionsList")?.elements()
def signOfTerrorist = 0

if (resultItem.prop("record").hasProp("signOfTerrorist")) {
    signOfTerrorist = resultItem.prop("record").prop("signOfTerrorist").numberValue().intValue()
}

DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSS");

versions?.each{version -&gt;
    def versionList = new KycCaseClientVersionsList()

    versionList.kycCaseClientList2Id = list2Item
    versionList.listIdentifier = version.prop("listIdentifier").stringValue()
    versionList.listVersion = version.prop("listVersion").stringValue()
    versionList.versionDate = LocalDateTime.parse(version.prop("versionDate").stringValue(), formatter)
    versionList.loadDate = LocalDateTime.parse(version.prop("loadDate").stringValue(), formatter)
    versionList.updateDate = LocalDateTime.parse(version.prop("updateDate").stringValue(), formatter)
    versionList.isLastVersion = version.prop("isLastVersion").boolValue()
    versionList.signOfTerrorist = signOfTerrorist

    saveObjects.add(versionList)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:scriptTask id="Activity_Identity_List_Filling" name="Identity List Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_015jx0t</bpmn:incoming>
            <bpmn:outgoing>Flow_17hl1ab</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientIdentityAtrList;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def ids = resultItem?.prop("record")?.prop("identityAtrList")?.elements()

ids?.each{id -&gt;
    def idType = id.prop("idType").stringValue()

    def identityList = new KycCaseClientIdentityAtrList()

    identityList.kycCaseClientList2Id = list2Item
    identityList.idType = getBd(283, idType)

    if (id.hasProp("idValue")) {
        identityList.idValue = id.prop("idValue").stringValue()
    }

    if (id.hasProp("idSerial")) {
        identityList.idSerial = id.prop("idSerial").stringValue()
    }

    if (id.hasProp("idNumber")) {
        identityList.idNumber = id.prop("idNumber").stringValue()
    }

    if (id.hasProp("Comment")) {
        identityList.comment = id.prop("Comment").stringValue()
    }

    if (id.hasProp("DateDocument")) {
        identityList.dateDocument = id.prop("DateDocument").stringValue()
    }

    if (id.hasProp("IssuingAuthority")) {
        identityList.issuingAuthority = id.prop("IssuingAuthority").stringValue()
    }

    if (id.hasProp("DateOfDocument")) {
        identityList.dateOfDocument = id.prop("DateOfDocument").stringValue()
    }

    if (id.hasProp("ExpiryDateOfDocument")) {
        identityList.expiryDateOfDocument = id.prop("ExpiryDateOfDocument").stringValue()
    }

    if (id.hasProp("ValidDoc")) {
        identityList.validDoc = id.prop("ValidDoc").stringValue()
    }

    saveObjects.add(identityList)
}

execution.setVariable("saveObjects", saveObjects)
</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:scriptTask id="Activity_Date_List_Filling" name="Date List Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_14b4wst</bpmn:incoming>
            <bpmn:outgoing>Flow_015jx0t</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientDateDetails;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def dates = resultItem?.prop("record")?.prop("dateDetails")?.elements()

dates?.each{date -&gt;
    def dateDetails = new KycCaseClientDateDetails()

    dateDetails.kycCaseClientList2Id = list2Item
    dateDetails.dateTypeId = getBd(282, date.prop("dateTypeId").stringValue())
    dateDetails.dateValue = date.prop("dateValue")?.stringValue();
    dateDetails.day = date.prop("day")?.numberValue()?.toString();
    dateDetails.month = date.prop("month")?.numberValue()?.toString();
    dateDetails.year = date.prop("year")?.numberValue()?.toString();

    saveObjects.add(dateDetails)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:scriptTask id="Activity_Address_List_Filling" name="Address List Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_0qhshsc</bpmn:incoming>
            <bpmn:outgoing>Flow_14b4wst</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientAddressList;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def addresses = resultItem?.prop("record")?.prop("addressList")?.elements()

addresses?.each{address -&gt;
    def addressType = address.prop("addressType").stringValue()

    def addressList = new KycCaseClientAddressList()

    addressList.kycCaseClientList2Id = list2Item
    addressList.addressType = getBd(281, addressType)
    addressList.addressLine = address.prop("addressLine").stringValue();
    addressList.countryCOde = address.prop("CountryCode").stringValue()
    addressList.country = address.prop("Country").stringValue()

    saveObjects.add(addressList)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:sequenceFlow id="Flow_1um56dj" sourceRef="Activity_List1_Saving" targetRef="Activity_List2_Filling" />
          <bpmn:sequenceFlow id="Flow_1x5a3to" sourceRef="Activity_List2_Filling" targetRef="Activity_List2_Saving" />
          <bpmn:sequenceFlow id="Flow_0qh6qx7" sourceRef="Activity_List2_Saving" targetRef="Activity_Name_List_Filling" />
          <bpmn:scriptTask id="Activity_Country_List_Filling" name="Country List Filling" scriptFormat="groovy">
            <bpmn:incoming>Flow_17hl1ab</bpmn:incoming>
            <bpmn:outgoing>Flow_00ols1c</bpmn:outgoing>
            <bpmn:script>import static org.camunda.spin.Spin.*
import static org.camunda.spin.DataFormats.*
import com.prime.db.rnkb.model.kyc.KycCaseClientCountryList;

import com.prime.db.rnkb.model.BaseDictionary

BaseDictionary getBd(Integer type, String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(type, code);
}

def resultItem = execution.getVariable("resultItem")
def list2Item = execution.getVariable("list2Item")
def saveObjects = execution.getVariable("saveObjects")

def countries = resultItem?.prop("record")?.prop("countryList")?.elements()

countries?.each{country -&gt;
    def countryList = new KycCaseClientCountryList()

    countryList.kycCaseClientList2Id = list2Item
    countryList.countryType = getBd(284, country.prop("CountryType").stringValue())
    countryList.countryCode = country.prop("CountryCode").stringValue()
    countryList.countryName = country.prop("CountryName").stringValue()

    saveObjects.add(countryList)
}

execution.setVariable("saveObjects", saveObjects)</bpmn:script>
          </bpmn:scriptTask>
          <bpmn:sequenceFlow id="Flow_17hl1ab" sourceRef="Activity_Identity_List_Filling" targetRef="Activity_Country_List_Filling" />
          <bpmn:sequenceFlow id="Flow_00ols1c" sourceRef="Activity_Country_List_Filling" targetRef="Activity_Versions_List_Filling" />
          <bpmn:sequenceFlow id="Flow_1pbdlz2" sourceRef="Activity_Versions_List_Filling" targetRef="Activity_Save_Lists" />
          <bpmn:endEvent id="Event_1ecoip2">
            <bpmn:incoming>Flow_1ykvkqu</bpmn:incoming>
          </bpmn:endEvent>
          <bpmn:sequenceFlow id="Flow_1ykvkqu" sourceRef="Activity_Save_Lists" targetRef="Event_1ecoip2" />
        </bpmn:subProcess>
        <bpmn:sequenceFlow id="Flow_1efdc2t" sourceRef="Event_0nwiigi" targetRef="Activity_Client_Id_Filling" />
        <bpmn:sequenceFlow id="Flow_0dgquoy" sourceRef="Activity_Client_Id_Filling" targetRef="Activity_1o3wbs1" />
        <bpmn:sequenceFlow id="Flow_0uooo24" sourceRef="Activity_1o3wbs1" targetRef="Activity_Items_Filling" />
        <bpmn:sequenceFlow id="Flow_02vr7hf" sourceRef="Activity_Items_Filling" targetRef="Activity_Case_Creation" />
        <bpmn:sequenceFlow id="Flow_00e0pz8" sourceRef="Activity_Case_Creation" targetRef="Activity_0rl2tki" />
        <bpmn:endEvent id="Event_0jfm275">
          <bpmn:incoming>Flow_1uq5ivp</bpmn:incoming>
        </bpmn:endEvent>
        <bpmn:sequenceFlow id="Flow_1uq5ivp" sourceRef="Activity_0rl2tki" targetRef="Event_0jfm275" />
      </bpmn:subProcess>
      <bpmn:sequenceFlow id="Flow_Case_Status_Decision_Variant_3" name="CSD #3" sourceRef="Gateway_1ixvp1l" targetRef="Activity_06ner0a">
        <bpmn:documentation>CSD - Case Status Decision - Решение по статусу найденного кейса (или ненайденного)
1 - Меняем статус найденного кейса и создаем новый
2 - Завершаем процесс
3 - Создаем новый кейс</bpmn:documentation>
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${csd == 3}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_1f117pp" sourceRef="Activity_Save_Case_Status" targetRef="Activity_06ner0a" />
      <bpmn:endEvent id="Event_1tr0k73">
        <bpmn:incoming>Flow_1auljgg</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_1auljgg" sourceRef="Activity_06ner0a" targetRef="Event_1tr0k73" />
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="Flow_1fmjt5z" sourceRef="Activity_Open_Session" targetRef="Activity_Start_Transaction_Delegate" />
    <bpmn:sequenceFlow id="Flow_16i4xfs" sourceRef="Activity_038bidn" targetRef="Activity_End_Transaction_Delegate" />
    <bpmn:sequenceFlow id="Flow_0tmz7xl" sourceRef="Activity_Process_Logging" targetRef="Activity_Open_Session" />
    <bpmn:serviceTask id="Activity_Close_Session" name="Close Session" camunda:delegateExpression="${closeSessionDelegate}">
      <bpmn:incoming>Flow_11p9jsk</bpmn:incoming>
      <bpmn:outgoing>Flow_1qkyy98</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1qkyy98" sourceRef="Activity_Close_Session" targetRef="Event_009dr5b" />
    <bpmn:serviceTask id="Activity_Start_Transaction_Delegate" name="Start Transaction Delegate" camunda:delegateExpression="${startTransactionDelegate}">
      <bpmn:incoming>Flow_1fmjt5z</bpmn:incoming>
      <bpmn:outgoing>Flow_1iepyy5</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_End_Transaction_Delegate" name="End Transaction Delegate" camunda:delegateExpression="${endTransactionDelegate}">
      <bpmn:incoming>Flow_16i4xfs</bpmn:incoming>
      <bpmn:outgoing>Flow_11p9jsk</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_11p9jsk" sourceRef="Activity_End_Transaction_Delegate" targetRef="Activity_Close_Session" />
    <bpmn:sequenceFlow id="Flow_1iepyy5" sourceRef="Activity_Start_Transaction_Delegate" targetRef="Activity_038bidn" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="amlCsmKycClientRequest">
      <bpmndi:BPMNEdge id="Flow_1iepyy5_di" bpmnElement="Flow_1iepyy5">
        <di:waypoint x="630" y="385" />
        <di:waypoint x="700" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0tmz7xl_di" bpmnElement="Flow_0tmz7xl">
        <di:waypoint x="330" y="385" />
        <di:waypoint x="380" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16i4xfs_di" bpmnElement="Flow_16i4xfs">
        <di:waypoint x="4990" y="385" />
        <di:waypoint x="5070" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1fmjt5z_di" bpmnElement="Flow_1fmjt5z">
        <di:waypoint x="480" y="385" />
        <di:waypoint x="530" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0dvx4sc_di" bpmnElement="Flow_0dvx4sc">
        <di:waypoint x="195" y="385" />
        <di:waypoint x="230" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1qkyy98_di" bpmnElement="Flow_1qkyy98">
        <di:waypoint x="5340" y="385" />
        <di:waypoint x="5392" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_11p9jsk_di" bpmnElement="Flow_11p9jsk">
        <di:waypoint x="5170" y="385" />
        <di:waypoint x="5240" y="385" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="159" y="367" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1jae6rb_di" bpmnElement="Activity_Process_Logging">
        <dc:Bounds x="230" y="345" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1qwn6qf_di" bpmnElement="Activity_Open_Session">
        <dc:Bounds x="380" y="345" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_009dr5b_di" bpmnElement="Event_009dr5b">
        <dc:Bounds x="5392" y="367" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_131dz13_di" bpmnElement="Activity_Close_Session">
        <dc:Bounds x="5240" y="345" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1ljabnt_di" bpmnElement="Activity_End_Transaction_Delegate">
        <dc:Bounds x="5070" y="345" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_038bidn_di" bpmnElement="Activity_038bidn" isExpanded="true">
        <dc:Bounds x="700" y="80" width="4290" height="450" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1auljgg_di" bpmnElement="Flow_1auljgg">
        <di:waypoint x="4870" y="320" />
        <di:waypoint x="4922" y="320" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1f117pp_di" bpmnElement="Flow_1f117pp">
        <di:waypoint x="1530" y="240" />
        <di:waypoint x="1570" y="240" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_01xsc4d_di" bpmnElement="Flow_Case_Status_Decision_Variant_3">
        <di:waypoint x="1255" y="380" />
        <di:waypoint x="1570" y="380" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1318" y="353" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0wff83m_di" bpmnElement="Flow_Case_Status_Decision_Variant_2">
        <di:waypoint x="1255" y="380" />
        <di:waypoint x="1392" y="380" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1306" y="362" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1s75o9g_di" bpmnElement="Flow_1s75o9g">
        <di:waypoint x="1400" y="240" />
        <di:waypoint x="1430" y="240" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0jecp3q_di" bpmnElement="Flow_Case_Status_Decision_Variant_1">
        <di:waypoint x="1230" y="355" />
        <di:waypoint x="1230" y="240" />
        <di:waypoint x="1300" y="240" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1246" y="222" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0wdbxtf_di" bpmnElement="Flow_0wdbxtf">
        <di:waypoint x="1160" y="380" />
        <di:waypoint x="1205" y="380" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_02epdra_di" bpmnElement="Flow_02epdra">
        <di:waypoint x="1030" y="380" />
        <di:waypoint x="1060" y="380" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1umk5kd_di" bpmnElement="Flow_1umk5kd">
        <di:waypoint x="900" y="380" />
        <di:waypoint x="930" y="380" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1jftf2k_di" bpmnElement="Flow_1jftf2k">
        <di:waypoint x="776" y="380" />
        <di:waypoint x="800" y="380" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_1i5ua25_di" bpmnElement="Event_1i5ua25">
        <dc:Bounds x="740" y="362" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0us54of_di" bpmnElement="Activity_Payload_Retirieving">
        <dc:Bounds x="800" y="340" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1rg2fzk_di" bpmnElement="Activity_Case_Selection">
        <dc:Bounds x="930" y="340" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_14eggto_di" bpmnElement="Activity_Case_Status_Decision">
        <dc:Bounds x="1060" y="340" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1ixvp1l_di" bpmnElement="Gateway_1ixvp1l" isMarkerVisible="true">
        <dc:Bounds x="1205" y="355" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1p0yyq5_di" bpmnElement="Activity_Change_Case_Status">
        <dc:Bounds x="1300" y="200" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1reu5zm_di" bpmnElement="Activity_Save_Case_Status">
        <dc:Bounds x="1430" y="200" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1ex7y4t_di" bpmnElement="Event_1ex7y4t">
        <dc:Bounds x="1392" y="362" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1tr0k73_di" bpmnElement="Event_1tr0k73">
        <dc:Bounds x="4922" y="302" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_06ner0a_di" bpmnElement="Activity_06ner0a" isExpanded="true">
        <dc:Bounds x="1570" y="140" width="3300" height="320" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1efdc2t_di" bpmnElement="Flow_1efdc2t">
        <di:waypoint x="1688" y="304" />
        <di:waypoint x="1750" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0dgquoy_di" bpmnElement="Flow_0dgquoy">
        <di:waypoint x="1850" y="304" />
        <di:waypoint x="1900" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0uooo24_di" bpmnElement="Flow_0uooo24">
        <di:waypoint x="2000" y="304" />
        <di:waypoint x="2060" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_02vr7hf_di" bpmnElement="Flow_02vr7hf">
        <di:waypoint x="2160" y="304" />
        <di:waypoint x="2230" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_00e0pz8_di" bpmnElement="Flow_00e0pz8">
        <di:waypoint x="2720" y="304" />
        <di:waypoint x="2810" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1uq5ivp_di" bpmnElement="Flow_1uq5ivp">
        <di:waypoint x="4570" y="304" />
        <di:waypoint x="4672" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_0nwiigi_di" bpmnElement="Event_0nwiigi">
        <dc:Bounds x="1652" y="286" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0f5mztl" bpmnElement="Activity_1o3wbs1">
        <dc:Bounds x="1900" y="264" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1757kl4" bpmnElement="Activity_Items_Filling">
        <dc:Bounds x="2060" y="264" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1q844gy" bpmnElement="Activity_Client_Id_Filling">
        <dc:Bounds x="1750" y="264" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0jfm275_di" bpmnElement="Event_0jfm275">
        <dc:Bounds x="4672" y="286" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1ivfsz7_di" bpmnElement="Activity_Case_Creation" isExpanded="true">
        <dc:Bounds x="2230" y="204" width="490" height="200" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0z17ecp_di" bpmnElement="Flow_0z17ecp">
        <di:waypoint x="2610" y="304" />
        <di:waypoint x="2662" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0o2uo40_di" bpmnElement="Flow_0o2uo40">
        <di:waypoint x="2440" y="304" />
        <di:waypoint x="2510" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0dyv6eh_di" bpmnElement="Flow_0dyv6eh">
        <di:waypoint x="2286" y="304" />
        <di:waypoint x="2340" y="304" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_0o64b6z_di" bpmnElement="Event_0o64b6z">
        <dc:Bounds x="2250" y="286" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_07tpxm8_di" bpmnElement="Activity_Case_Filling">
        <dc:Bounds x="2340" y="264" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1htxl5y" bpmnElement="Activity_Case_Saving">
        <dc:Bounds x="2510" y="264" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1k5vjr4_di" bpmnElement="Event_1k5vjr4">
        <dc:Bounds x="2662" y="286" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0ajm9c1" bpmnElement="Activity_0rl2tki" isExpanded="true">
        <dc:Bounds x="2810" y="210" width="1760" height="188" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1ykvkqu_di" bpmnElement="Flow_1ykvkqu">
        <di:waypoint x="4430" y="300" />
        <di:waypoint x="4492" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1pbdlz2_di" bpmnElement="Flow_1pbdlz2">
        <di:waypoint x="4270" y="300" />
        <di:waypoint x="4330" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_00ols1c_di" bpmnElement="Flow_00ols1c">
        <di:waypoint x="4120" y="300" />
        <di:waypoint x="4170" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_17hl1ab_di" bpmnElement="Flow_17hl1ab">
        <di:waypoint x="3970" y="300" />
        <di:waypoint x="4020" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0qh6qx7_di" bpmnElement="Flow_0qh6qx7">
        <di:waypoint x="3430" y="300" />
        <di:waypoint x="3460" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1x5a3to_di" bpmnElement="Flow_1x5a3to">
        <di:waypoint x="3290" y="300" />
        <di:waypoint x="3330" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1um56dj_di" bpmnElement="Flow_1um56dj">
        <di:waypoint x="3160" y="300" />
        <di:waypoint x="3190" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_006evyl" bpmnElement="Flow_14b4wst">
        <di:waypoint x="3680" y="300" />
        <di:waypoint x="3720" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1a0tij9" bpmnElement="Flow_015jx0t">
        <di:waypoint x="3820" y="300" />
        <di:waypoint x="3870" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_091pb79" bpmnElement="Flow_0x82lkj">
        <di:waypoint x="4270" y="300" />
        <di:waypoint x="4330" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_16ynm6c" bpmnElement="Flow_0qhshsc">
        <di:waypoint x="3560" y="300" />
        <di:waypoint x="3580" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_17p310d" bpmnElement="Flow_13y71xb">
        <di:waypoint x="3020" y="300" />
        <di:waypoint x="3060" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1yx7390" bpmnElement="Flow_1dc1p28">
        <di:waypoint x="2878" y="300" />
        <di:waypoint x="2920" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="BPMNShape_1ws2aki" bpmnElement="Event_02vyhbf">
        <dc:Bounds x="2842" y="282" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0kqjg0c" bpmnElement="Activity_List1_Filling">
        <dc:Bounds x="2920" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1sojace" bpmnElement="Activity_Name_List_Filling">
        <dc:Bounds x="3460" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_07ar8gb" bpmnElement="Activity_List1_Saving">
        <dc:Bounds x="3060" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1sr1dwj" bpmnElement="Activity_List2_Filling">
        <dc:Bounds x="3190" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0ekmnaw" bpmnElement="Activity_List2_Saving">
        <dc:Bounds x="3330" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1h3w9h0" bpmnElement="Activity_Save_Lists">
        <dc:Bounds x="4330" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_14c6o4m" bpmnElement="Activity_Versions_List_Filling">
        <dc:Bounds x="4170" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_145e1xt" bpmnElement="Activity_Identity_List_Filling">
        <dc:Bounds x="3870" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1fisabs" bpmnElement="Activity_Date_List_Filling">
        <dc:Bounds x="3720" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0096v7g" bpmnElement="Activity_Address_List_Filling">
        <dc:Bounds x="3580" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1wpidy3" bpmnElement="Activity_Country_List_Filling">
        <dc:Bounds x="4020" y="260" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1ecoip2_di" bpmnElement="Event_1ecoip2">
        <dc:Bounds x="4492" y="282" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_15o2wki_di" bpmnElement="Activity_Start_Transaction_Delegate">
        <dc:Bounds x="530" y="345" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
