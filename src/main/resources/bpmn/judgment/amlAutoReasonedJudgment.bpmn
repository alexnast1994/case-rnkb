<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1mjxfdw" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.2.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
  <bpmn:process id="amlAutoReasonedJudgment" name="8. Автоматическое формирование МС" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_16sg86q</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_16sg86q" sourceRef="StartEvent_1" targetRef="Activity_0uqf4tg" />
    <bpmn:serviceTask id="Activity_0uqf4tg" name="Логирование" camunda:delegateExpression="${loggerDelegate}">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="processName">ReasonedJudgmentProcess</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_16sg86q</bpmn:incoming>
      <bpmn:outgoing>Flow_0b9b043</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0b9b043" sourceRef="Activity_0uqf4tg" targetRef="Activity_04cx2ds" />
    <bpmn:sequenceFlow id="Flow_0v286vx" sourceRef="Activity_04cx2ds" targetRef="Activity_payload" />
    <bpmn:endEvent id="Event_End">
      <bpmn:incoming>Flow_01253c3</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:serviceTask id="Activity_04cx2ds" name="Открыть сессию" camunda:delegateExpression="${openSessionDelegate}">
      <bpmn:incoming>Flow_0b9b043</bpmn:incoming>
      <bpmn:outgoing>Flow_0v286vx</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_0hj1qcq" name="Закрыть сессию" camunda:delegateExpression="${closeSessionDelegate}">
      <bpmn:incoming>Flow_14efkmw</bpmn:incoming>
      <bpmn:outgoing>Flow_01253c3</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_01253c3" sourceRef="Activity_0hj1qcq" targetRef="Event_End" />
    <bpmn:scriptTask id="Activity_payload" name="Payload" scriptFormat="groovy">
      <bpmn:incoming>Flow_0v286vx</bpmn:incoming>
      <bpmn:outgoing>Flow_0afcxcw</bpmn:outgoing>
      <bpmn:script>import static org.camunda.spin.Spin.JSON

                def jsonStr = execution.getVariable("payload")
                def jsonData = JSON(jsonStr)

                def payloadObject = jsonData.prop("payload").prop("amlAutoReasonedJudgment")

                def clientId = payloadObject.prop("clientId").numberValue().longValue()
                def caseElements = payloadObject.prop("caseIds").elements()
                def startDate = payloadObject.prop("startDate").stringValue()
                def offDate = payloadObject.prop("offDate").stringValue()
                def typeRj = payloadObject.prop("typeRj").stringValue()

                def caseIds = []
                caseElements.each { caseElement -&gt;
                caseIds.add(caseElement.numberValue().longValue())
                }
                def caseIdsString = caseIds.inject { first, second -&gt;
                "$first,$second"
                }
                execution.setVariable("caseIds", caseIds)
                execution.setVariable("clientId", clientId)
                execution.setVariable("startDate", startDate)
                execution.setVariable("offDate", offDate)
                execution.setVariable("typeRj", typeRj)
                execution.setVariable("caseIdsString", caseIdsString)
            </bpmn:script>
    </bpmn:scriptTask>
    <bpmn:subProcess id="Activity_1508q2q">
      <bpmn:incoming>Flow_0afcxcw</bpmn:incoming>
      <bpmn:outgoing>Flow_14efkmw</bpmn:outgoing>
      <bpmn:startEvent id="Event_1652rxe">
        <bpmn:outgoing>Flow_0pk93wk</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:serviceTask id="Activity_0gfu4n2" name="Select CLientRelation from base" camunda:delegateExpression="${selectOneDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">clientRelationBase</camunda:inputParameter>
            <camunda:inputParameter name="parameters">
              <camunda:map>
                <camunda:entry key="clientBase">${clientBase}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT c FROM ClientRelation c WHERE c.fromClientId =
                            :clientBase
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1drg82v</bpmn:incoming>
        <bpmn:outgoing>Flow_01wrt3k</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_0clav10" name="RJ_CLIENTLICENSE" scriptFormat="groovy" camunda:resultVariable="rjLicense">
        <bpmn:incoming>Flow_1jjw6br</bpmn:incoming>
        <bpmn:outgoing>Flow_0iif719</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.ClLicense
                    import com.prime.db.rnkb.model.commucation.judgment.RjClient
                    import com.prime.db.rnkb.model.commucation.judgment.RjLicense
                    import java.time.LocalDateTime

                    def rjLicense = new RjLicense()
                    def rjclient = execution.getVariable("rjClient") as RjClient
                    def clLicense = execution.getVariable("clientLicenseBase") as ClLicense
                    rjLicense.client = rjclient
                    if(clLicense!=null){
    rjLicense.licensenumber = clLicense.licnumber
    rjLicense.licenseissueby = clLicense.issueby
    if(clLicense.issuedate!=null){rjLicense.licenseissuedate = clLicense.issuedate}
    if(clLicense.expirationdate!=null){
        rjLicense.licenseExpirationDate = clLicense.expirationdate}
    rjLicense.licenseactivitylist = clLicense.activitylist
    rjLicense.licenseType = clLicense.type

    rjLicense.licenseValidity = clLicense.validity}



return rjLicense
</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_1nzkgv3" name="Select case from base" camunda:delegateExpression="${selectOneDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">clientLicenseBase</camunda:inputParameter>
            <camunda:inputParameter name="parameters">
              <camunda:map>
                <camunda:entry key="clientBase">${clientBase}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT c FROM ClLicense c WHERE c.clientId=
                            :clientBase
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0e7mx8m</bpmn:incoming>
        <bpmn:outgoing>Flow_1jjw6br</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_0tj94ac" name="Select case from base" camunda:delegateExpression="${selectOneDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">verificationDocumentsBase</camunda:inputParameter>
            <camunda:inputParameter name="parameters">
              <camunda:map>
                <camunda:entry key="clientBase">${clientBase}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT v FROM VerificationDocument v WHERE v.client=
                            :clientBase
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0wzhvab</bpmn:incoming>
        <bpmn:outgoing>Flow_0d951ar</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_18jvan9" name="RJ_VERIFICATIONDOC" scriptFormat="groovy" camunda:resultVariable="rjVerificationdoc">
        <bpmn:incoming>Flow_0d951ar</bpmn:incoming>
        <bpmn:outgoing>Flow_0wtnroh</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
                    import com.prime.db.rnkb.model.VerificationDocument
                    import com.prime.db.rnkb.model.commucation.judgment.RjClient
                    import com.prime.db.rnkb.model.commucation.judgment.RjVerificationdoc
                    import org.slf4j.LoggerFactory

                    import java.time.LocalDateTime

                    def log = LoggerFactory.getLogger(this.class)


def rjclient = execution.getVariable("rjClient") as RjClient
def verificationDocument = execution.getVariable("verificationDocumentsBase") as VerificationDocument


def rjVerificationdoc = new RjVerificationdoc()
rjVerificationdoc.rjclient = rjClient

if (verificationDocument != null) {
    rjVerificationdoc.number = verificationDocument.docNumber
                    rjVerificationdoc.issuebyorganization = verificationDocument.issueByOrganization
                    rjVerificationdoc.issuebydepartamentcode = verificationDocument.issueByDepartmentCode
                    def baseDic = verificationDocument.type as BaseDictionary
                    rjVerificationdoc.type = baseDic
                    def localDateTime = verificationDocument.issueDate.atTime(0,0,0) as LocalDateTime
                    rjVerificationdoc.issuedate = localDateTime
                    }

                    return rjVerificationdoc
                </bpmn:script>
      </bpmn:scriptTask>
      <bpmn:scriptTask id="Activity_0z1d6b4" name="RJ_CLient" scriptFormat="groovy" camunda:resultVariable="rjClient">
        <bpmn:incoming>Flow_0m76unr</bpmn:incoming>
        <bpmn:outgoing>Flow_19akj7z</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.Client
                    import com.prime.db.rnkb.model.ClientIndividual
                    import com.prime.db.rnkb.model.ClientLegal
                    import com.prime.db.rnkb.model.commucation.judgment.ReasonedJudgment
                    import com.prime.db.rnkb.model.commucation.judgment.RjClient
                    import java.time.LocalDateTime
                    import org.slf4j.LoggerFactory
                    def log = LoggerFactory.getLogger(this.class)

                    def rjClient = new RjClient()
def reasonedJudgment = execution.getVariable("reasonedJudgmentOut") as ReasonedJudgment

def client = execution.getVariable("clientBase") as Client

def clientLegal = new ClientLegal()
def clientIndividual = new ClientIndividual()

if(client.clientLegal!=null) {
    clientLegal = client.clientLegal
    def sc = clientLegal?.sharecapital != null ? clientLegal?.sharecapital?.longValue() : 0L
    rjClient.sharecapital = sc
}

if(client.clientIndividual!=null) {
    clientIndividual = client.clientIndividual
}
rjClient.rjId = reasonedJudgment
rjClient.clientInn = client.inn

if(client.clientOfBankFromDate!=null){
    rjClient.clientOfBankFromDate = client.clientOfBankFromDate
}

if(clientIndividual.birthdate!=null){
    rjClient.clientBirthdate = clientIndividual.birthdate
}

if(client.ogrnDate!=null){
    rjClient.ogrndate = client.ogrnDate
}

rjClient.placeofbirth = clientIndividual.placeofbirth
rjClient.clientFullname = client.fullName
rjClient.manager = client.manager
                    rjClient.branch = client.exBranch
                    rjClient.fnsSegment = client.fnsSegment
                    rjClient.ogrn = client.ogrn
                    rjClient.typeOfClient = client.clientType

                    rjClient.client = client
                    rjClient.exClientId = client.exClientId

                    return rjClient
                </bpmn:script>
      </bpmn:scriptTask>
      <bpmn:scriptTask id="Activity_1nxjv8d" name="RJ_CLIENTRE" scriptFormat="groovy" camunda:resultVariable="rjClientRe">
        <bpmn:incoming>Flow_01wrt3k</bpmn:incoming>
        <bpmn:outgoing>Flow_06xamdo</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
                    import com.prime.db.rnkb.model.Client
                    import com.prime.db.rnkb.model.ClientIndividual
                    import com.prime.db.rnkb.model.ClientRelation
                    import com.prime.db.rnkb.model.commucation.judgment.RjClient
                    import com.prime.db.rnkb.model.commucation.judgment.RjClientRe
                    import org.slf4j.LoggerFactory
                    def log = LoggerFactory.getLogger(this.class)

                    def rjClient = execution.getVariable("rjClient") as RjClient
def client = execution.getVariable("clientBase") as Client
def clientIndividual = new ClientIndividual()
def rjClientRe = new RjClientRe()
if(client.clientIndividual!=null){
    clientIndividual=client.clientIndividual
    rjClientRe.birthDate = clientIndividual.birthdate
}
def clientRelation = execution.getVariable("clientRelationBase") as ClientRelation


rjClientRe.rjclient = rjClient
rjClientRe.exToClientId = client
rjClientRe.toClientId = client
if(clientRelation!=null){
    rjClientRe.relationType = clientRelation.relationType
    rjClientRe.isEIOChild = clientRelation.iseiochild
    if(client.inn!=null){
        rjClientRe.inn = Long.valueOf(client.inn)
    }
    if(client.ogrn!=null){
        rjClientRe.ogrn = Long.valueOf(client.ogrn)
    }
    rjClientRe.isEIOToDateDate = clientRelation.iseiotodatedate
    rjClientRe.isEIOFromDate = clientRelation.iseiofromdate
    rjClientRe.sharePercent = clientRelation.sharepercent
}
def baseDic = client.clientMark as BaseDictionary
rjClientRe.clientMark = baseDic

return rjClientRe</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0freyzt" name="SaveDelegate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${caseReasonedJudgment}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1sw7auf</bpmn:incoming>
        <bpmn:outgoing>Flow_0m76unr</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_1upcvus" name="Select client from base" camunda:delegateExpression="${selectOneDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">clientBase</camunda:inputParameter>
            <camunda:inputParameter name="parameters">
              <camunda:map>
                <camunda:entry key="clientId">${clientId}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT c FROM Client c WHERE c.id = :clientId
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0xbj7ji</bpmn:incoming>
        <bpmn:outgoing>Flow_0p4pf0a</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_0l5rgpu" name="Select case from base" camunda:delegateExpression="${selectOneDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">caseBase</camunda:inputParameter>
            <camunda:inputParameter name="parameters">
              <camunda:map>
                <camunda:entry key="caseId">${caseIds[0]}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT c FROM Case c WHERE c.id = :caseId
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0p4pf0a</bpmn:incoming>
        <bpmn:outgoing>Flow_0qs0cri</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_0y7j53y" name="ReasonedJudgment" scriptFormat="groovy" camunda:resultVariable="reasonedJudgment">
        <bpmn:incoming>Flow_0qs0cri</bpmn:incoming>
        <bpmn:outgoing>Flow_06pads4</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
                    import com.prime.db.rnkb.model.Case
                    import com.prime.db.rnkb.model.commucation.judgment.ReasonedJudgment

                    import java.time.LocalDateTime

                    BaseDictionary getStatus(String code) {
                    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(213, code);
                    }

                    BaseDictionary getJobStatus(String code) {
                    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(266, code);
                    }

                    BaseDictionary getTypeOfControl(String code) {
                    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(181, code);
                    }

                    BaseDictionary getTypeRj(String code) {
                    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(277, code);
                    }

                    ReasonedJudgment reasonedJudgment = new ReasonedJudgment()

                    def case1 = execution.getVariable("caseBase") as Case
                    def caseDic = case1.caseType as BaseDictionary

                    if (caseDic.code == "3") {
                    reasonedJudgment.typeOfControl = getTypeOfControl("1")
                    }

                    if (caseDic.code == "4") {
                    reasonedJudgment.typeOfControl = getTypeOfControl("2")
                    }

                    def typeRj = execution.getVariable("typeRj")

                    reasonedJudgment.status = getStatus("5")
                    reasonedJudgment.clientId = execution.getVariable("clientBase")
                    reasonedJudgment.jobStatus = getJobStatus("1")
                    reasonedJudgment.typeRj = getTypeRj(typeRj)

                    try {
                    def startDateLDT = LocalDateTime.parse(execution.getVariable("startDate")) as LocalDateTime
                    reasonedJudgment.startDate = startDateLDT
                    } catch (Exception e) {
                    e.getMessage()
                    }

                    try {
                    def offDateLDT = LocalDateTime.parse(execution.getVariable("offDate")) as LocalDateTime
                    reasonedJudgment.offDate = offDateLDT
                    } catch (Exception e) {
                    e.getMessage()
                    }

                    reasonedJudgment.developmentDate = LocalDateTime.now()
                    return reasonedJudgment
                </bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_10rgy42" name="SaveDelegate" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${reasonedJudgment}</camunda:inputParameter>
            <camunda:inputParameter name="outputVarName">reasonedJudgmentOut</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_06pads4</bpmn:incoming>
        <bpmn:outgoing>Flow_07o6nc3</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_05xstuy" name="SaveDelegate" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${rjClient}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_19akj7z</bpmn:incoming>
        <bpmn:outgoing>Flow_1drg82v</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_1n2yjps" name="SaveDelegate" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${rjClientRe}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_06xamdo</bpmn:incoming>
        <bpmn:outgoing>Flow_0e7mx8m</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_0xtklh3" name="SaveDelegate" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${rjLicense}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0iif719</bpmn:incoming>
        <bpmn:outgoing>Flow_0wzhvab</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_08upt1g" name="SaveDelegate" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${rjVerificationdoc}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0wtnroh</bpmn:incoming>
        <bpmn:outgoing>Flow_0e97atb</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_0e3ywof" name="Select case from base" camunda:delegateExpression="${selectOneDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">rbsBlockBase</camunda:inputParameter>
            <camunda:inputParameter name="parameters">
              <camunda:map>
                <camunda:entry key="clientBase">${clientBase}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT cb FROM ClientRbsBlock cb left join ClientRbs
                            cr on cr.id=cb.clientRbs WHERE cr.client= :clientBase
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0e97atb</bpmn:incoming>
        <bpmn:outgoing>Flow_10rgka5</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_0jfbyz9" name="RJ_RBS" scriptFormat="groovy" camunda:resultVariable="rjRbs">
        <bpmn:incoming>Flow_10rgka5</bpmn:incoming>
        <bpmn:outgoing>Flow_0sc07we</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.BaseDictionary
                    import com.prime.db.rnkb.model.Client
                    import com.prime.db.rnkb.model.ClientRbs
                    import com.prime.db.rnkb.model.ClientRbsBlock
                    import com.prime.db.rnkb.model.commucation.judgment.RjClient
                    import com.prime.db.rnkb.model.commucation.judgment.RjRbs

                    import java.time.LocalDate
                    import java.time.LocalDateTime


BaseDictionary getStatus(String code) {
    baseDictRepo.getByBaseDictionaryTypeCodeAndCode(269, code);
}

def rjRbs = new RjRbs()
def client = execution.getVariable("clientBase") as Client
def rjClient= execution.getVariable("rjClient") as RjClient
def clientRbsBlock = execution.getVariable("rbsBlockBase") as ClientRbsBlock
def clientRbs = new ClientRbs()
if(clientRbsBlock!=null){
    clientRbs = clientRbsBlock.clientRbs
    rjRbs.blockdate = clientRbsBlock.agreementBlockDate
    rjRbs.unblockdate = clientRbsBlock.agreementUnblockDate
}
if(clientRbs!=null){
    def rjRbsDic = clientRbs.status as BaseDictionary
    if(rjRbsDic != null) {
       rjRbs.status = getStatus(rjRbsDic.code)
    }
}
if(client!=null&amp;&amp;client.id!=null){
    rjRbs.dboClientId = client.id.toString()
}
rjRbs.rjclient = rjClient


return rjRbs


</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0n8u21p" name="SaveDelegate" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${rjRbs}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0sc07we</bpmn:incoming>
        <bpmn:outgoing>Flow_1eh52bn</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_008mkxs" name="CaseReasonedJudgment " scriptFormat="groovy" camunda:resultVariable="caseReasonedJudgment">
        <bpmn:incoming>Flow_07o6nc3</bpmn:incoming>
        <bpmn:outgoing>Flow_1sw7auf</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.commucation.judgment.CaseReasonedJudgment
                    import com.prime.db.rnkb.model.commucation.judgment.ReasonedJudgment
                    import com.prime.db.rnkb.model.Case
                    def reasonedJudgment = execution.getVariable("reasonedJudgmentOut") as ReasonedJudgment
                    def cases = execution.getVariable("caseIds") as List&lt;Long&gt;
                    def crj = []
                    cases.forEach({ c -&gt;
                    def caseReasonedJudgment = new CaseReasonedJudgment()
                    def caseObj = new Case()
                    caseObj.setId(c)
                    caseReasonedJudgment.caseId = caseObj
                    caseReasonedJudgment.idrj = reasonedJudgment
                    crj.add(caseReasonedJudgment)
                    })


                    return crj
                </bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0ogxdmb" name="Проверяем на существование МС" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">existsCRJ</camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT cr from CaseReasonedJudgment cr join
                            ReasonedJudgment r on r.id = cr.idrj.id where cr.caseId.id in (${caseIdsString}) and
                            r.clientId.id = ${clientId}
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1kkerxf</bpmn:incoming>
        <bpmn:outgoing>Flow_0gxyg39</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:exclusiveGateway id="Gateway_1etb415" default="Flow_0xbj7ji">
        <bpmn:incoming>Flow_0gxyg39</bpmn:incoming>
        <bpmn:outgoing>Flow_0xbj7ji</bpmn:outgoing>
        <bpmn:outgoing>Flow_0yg66mc</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:scriptTask id="Activity_1t2oxzd" name="Выбрасываем исключение" scriptFormat="groovy">
        <bpmn:incoming>Flow_0yg66mc</bpmn:incoming>
        <bpmn:outgoing>Flow_067km6t</bpmn:outgoing>
        <bpmn:script>def clientId = execution.getVariable("clientId")
                    def caseIdsString = execution.getVariable("caseIdsString")

                    def message = """
                    Одно или несколько МС в рамках значений clientId = $clientId, caseIds = $caseIdsString уже есть в
                    AML, данные перезаполняться не будут
                    """

                    def ex = new IllegalArgumentException(message)
                    throw ex
                </bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_0bxfwli" default="Flow_1kkerxf">
        <bpmn:incoming>Flow_0pk93wk</bpmn:incoming>
        <bpmn:outgoing>Flow_1kkerxf</bpmn:outgoing>
        <bpmn:outgoing>Flow_1vsqp5t</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:endEvent id="Event_0i78gao">
        <bpmn:incoming>Flow_067km6t</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:scriptTask id="Activity_1ok6m41" name="Выбрасываем исключение" scriptFormat="groovy">
        <bpmn:incoming>Flow_1vsqp5t</bpmn:incoming>
        <bpmn:outgoing>Flow_1ro8nc8</bpmn:outgoing>
        <bpmn:script>def clientId = execution.getVariable("clientId")

                    def message = """
                    Не указаны CaseId в рамках значений clientId = $clientId
                    """

                    def ex = new IllegalArgumentException(message)
                    throw ex
                </bpmn:script>
      </bpmn:scriptTask>
      <bpmn:endEvent id="Event_0fqd5wo">
        <bpmn:incoming>Flow_1ro8nc8</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_1drg82v" sourceRef="Activity_05xstuy" targetRef="Activity_0gfu4n2" />
      <bpmn:sequenceFlow id="Flow_01wrt3k" sourceRef="Activity_0gfu4n2" targetRef="Activity_1nxjv8d" />
      <bpmn:sequenceFlow id="Flow_1jjw6br" sourceRef="Activity_1nzkgv3" targetRef="Activity_0clav10" />
      <bpmn:sequenceFlow id="Flow_0iif719" sourceRef="Activity_0clav10" targetRef="Activity_0xtklh3" />
      <bpmn:sequenceFlow id="Flow_0e7mx8m" sourceRef="Activity_1n2yjps" targetRef="Activity_1nzkgv3" />
      <bpmn:sequenceFlow id="Flow_0wzhvab" sourceRef="Activity_0xtklh3" targetRef="Activity_0tj94ac" />
      <bpmn:sequenceFlow id="Flow_0d951ar" sourceRef="Activity_0tj94ac" targetRef="Activity_18jvan9" />
      <bpmn:sequenceFlow id="Flow_0wtnroh" sourceRef="Activity_18jvan9" targetRef="Activity_08upt1g" />
      <bpmn:sequenceFlow id="Flow_0m76unr" sourceRef="Activity_0freyzt" targetRef="Activity_0z1d6b4" />
      <bpmn:sequenceFlow id="Flow_19akj7z" sourceRef="Activity_0z1d6b4" targetRef="Activity_05xstuy" />
      <bpmn:sequenceFlow id="Flow_06xamdo" sourceRef="Activity_1nxjv8d" targetRef="Activity_1n2yjps" />
      <bpmn:sequenceFlow id="Flow_0xbj7ji" sourceRef="Gateway_1etb415" targetRef="Activity_1upcvus" />
      <bpmn:sequenceFlow id="Flow_0p4pf0a" sourceRef="Activity_1upcvus" targetRef="Activity_0l5rgpu" />
      <bpmn:sequenceFlow id="Flow_0qs0cri" sourceRef="Activity_0l5rgpu" targetRef="Activity_0y7j53y" />
      <bpmn:sequenceFlow id="Flow_06pads4" sourceRef="Activity_0y7j53y" targetRef="Activity_10rgy42" />
      <bpmn:sequenceFlow id="Flow_07o6nc3" sourceRef="Activity_10rgy42" targetRef="Activity_008mkxs" />
      <bpmn:sequenceFlow id="Flow_0e97atb" sourceRef="Activity_08upt1g" targetRef="Activity_0e3ywof" />
      <bpmn:sequenceFlow id="Flow_10rgka5" sourceRef="Activity_0e3ywof" targetRef="Activity_0jfbyz9" />
      <bpmn:sequenceFlow id="Flow_0sc07we" sourceRef="Activity_0jfbyz9" targetRef="Activity_0n8u21p" />
      <bpmn:sequenceFlow id="Flow_1sw7auf" sourceRef="Activity_008mkxs" targetRef="Activity_0freyzt" />
      <bpmn:sequenceFlow id="Flow_1kkerxf" sourceRef="Gateway_0bxfwli" targetRef="Activity_0ogxdmb" />
      <bpmn:sequenceFlow id="Flow_0gxyg39" sourceRef="Activity_0ogxdmb" targetRef="Gateway_1etb415" />
      <bpmn:sequenceFlow id="Flow_0yg66mc" sourceRef="Gateway_1etb415" targetRef="Activity_1t2oxzd">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${existsCRJ.size()&gt;0}
                </bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_067km6t" sourceRef="Activity_1t2oxzd" targetRef="Event_0i78gao" />
      <bpmn:sequenceFlow id="Flow_1vsqp5t" sourceRef="Gateway_0bxfwli" targetRef="Activity_1ok6m41">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${caseIds.isEmpty()}
                </bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_1ro8nc8" sourceRef="Activity_1ok6m41" targetRef="Event_0fqd5wo" />
      <bpmn:sequenceFlow id="Flow_0pk93wk" sourceRef="Event_1652rxe" targetRef="Gateway_0bxfwli" />
      <bpmn:serviceTask id="Activity_1h855uv" name="Получаем Okved" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">okveds</camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">SELECT o from Okved o where o.clientId.id =
                            ${clientId} and o.isMain = 1
                        </camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1eh52bn</bpmn:incoming>
        <bpmn:outgoing>Flow_1t0z8ey</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_17o0dxi" name="RJ_OKVED" scriptFormat="groovy" camunda:resultVariable="rjOkved">
        <bpmn:incoming>Flow_183kxyb</bpmn:incoming>
        <bpmn:outgoing>Flow_0zkgxvg</bpmn:outgoing>
        <bpmn:script>import com.cognive.projects.casernkb.model.projection.BranchGroup
import com.cognive.projects.casernkb.model.projection.RosstatOkveds
import com.prime.db.rnkb.model.Okved
import com.prime.db.rnkb.model.commucation.judgment.RjClient
import com.prime.db.rnkb.model.commucation.judgment.RjOkved
import com.prime.db.rnkb.model.egrip.ListEgripOkved
import com.prime.db.rnkb.model.egrul.ListEgrulInfoOkvedType
import org.apache.tomcat.jni.Local

import java.time.LocalDateTime

def rjOkved = new RjOkved()

def okveds = execution.getVariable("okveds") as ArrayList&lt;Okved&gt;
def okved = okveds != null &amp;&amp; !okveds.isEmpty() &amp;&amp; okveds.size() &gt; 0 ? okveds.get(0) : null
def egrul = execution.getVariable("ergul") as ListEgrulInfoOkvedType
def egrip = execution.getVariable("egrip") as ListEgripOkved
boolean egrName = false
boolean egrCode = false

List&lt;RosstatOkveds&gt; getBranchGroupOkveds(Long branchGroupId, String okvedCode) {
    lstRosstatOkvedRepo.findRosstatOkveds(branchGroupId, okvedCode)
}

BranchGroup getBranchGroup(Long clientId, String dateStart, String dateEnd) {
    filedAggGeneralRepo.findBranch(clientId, dateStart, dateEnd)
}

//OKVED_NAME
if (egrul != null &amp;&amp; egrul.nameOkved != null) {
    println "ЕГРЮЛ"
    rjOkved.okvedname = egrul.nameOkved
    egrName = true
} else if (egrip != null &amp;&amp; egrip.nameOkved != null) {
    println "ЕГРИЛ"
    rjOkved.okvedname = egrip.nameOkved
    egrName = true
} else if (okved != null){
    println "ОКВЭД"
    rjOkved.okvedname = okved.name
}

//OKVED_CODE
if (egrul != null &amp;&amp; egrul.nameOkved != null) {
    println "ЕГРЮЛ"
    rjOkved.okvedcode = egrul.codeOkved
    egrCode = true
} else if (egrip != null &amp;&amp; egrip.nameOkved != null) {
    println "ЕГРИЛ"
    rjOkved.okvedcode = egrip.codeOkved
    egrCode = true
} else if (okved != null){
    rjOkved.okvedcode = okved.code
}

//ISOKVED


Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String
BranchGroup branch = getBranchGroup(clientId, dateStart.substring(0, 10), dateEnd.substring(0, 10))
println "Полученный объект branch: " + branch


if (branch != null) {
    String branchGroup = branch.getBranch_group()
    Long branchGroupIds = branchGroup as Long


    rjOkved.isokved = getBranchGroupOkveds(branchGroupIds, rjOkved.okvedcode) != null &amp;&amp; getBranchGroupOkveds(branchGroupIds, rjOkved.okvedcode).size() &gt; 0

    rjOkved.branchGroupName = branch.getBranch_group_name() as String
}

rjOkved.egrulip = egrName &amp;&amp; egrCode
rjOkved.rjClient = execution.getVariable("rjClient") as RjClient
println rjOkved.toString()

execution.setVariable("rjOkved", rjOkved)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_1msvyzc" name="Получение okved из EGRUL" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="selectQuery">select euo from ListEgrulInfoOkvedType euo inner join ListEgrulInfoUl e on euo.infoUlId.id = e.id where e.innUl = ${clientBase.inn} and euo.id = e.infoOkvedTypeId</camunda:inputParameter>
            <camunda:inputParameter name="outputVarName">egrul</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1t0z8ey</bpmn:incoming>
        <bpmn:outgoing>Flow_0milh4u</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_0fb2oxw" name="Получение okved из egrip" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="selectQuery">select efo from ListEgripOkved efo inner join ListEgripInfoIndividual e on efo.individualId.id = e.id where e.innFl = ${clientBase.inn} and efo.id = e.okvedId.id</camunda:inputParameter>
            <camunda:inputParameter name="outputVarName">egrip</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0milh4u</bpmn:incoming>
        <bpmn:outgoing>Flow_183kxyb</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_199mx1h" name="Save Delegate" camunda:delegateExpression="${saveObjectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObject">${rjOkved}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1hss4wp</bpmn:incoming>
        <bpmn:outgoing>Flow_175xq33</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_12ha2ax" name="Получение clientAccount" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="selectQuery">select ca From ClientAccount ca where ca.clientId.id = ${clientId}</camunda:inputParameter>
            <camunda:inputParameter name="outputVarName">clientAccounts</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0lheuak</bpmn:incoming>
        <bpmn:outgoing>Flow_1xev41m</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_1ub5mmg" name="RJ_ACCOUNT" scriptFormat="groovy" camunda:resultVariable="rjAccountList">
        <bpmn:incoming>Flow_1xev41m</bpmn:incoming>
        <bpmn:outgoing>Flow_0nenofv</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.ClientAccount
import com.prime.db.rnkb.model.commucation.judgment.RjAccount
import com.prime.db.rnkb.model.commucation.judgment.RjClient

def clientAccounts = execution.getVariable("clientAccounts") as List&lt;ClientAccount&gt;

List&lt;RjAccount&gt; rjAccountList = new ArrayList&lt;&gt;()
if (clientAccounts != null &amp;&amp; clientAccounts.size() &gt; 0) {
    clientAccounts.each { clientAccount -&gt;
        RjAccount rjAccount = new RjAccount()
        rjAccount.rjclient = execution.getVariable("rjClient") as RjClient
        rjAccount.accountcontracttype = clientAccount.accountcontracttype
        rjAccount.agreementnumber = clientAccount.agreementnumber
        rjAccount.accountnumber = clientAccount.accountnumber
        rjAccount.startdate = clientAccount.startdate
        rjAccount.closedate = clientAccount.closedate
        rjAccount.currency = clientAccount.currency
        rjAccountList.add(rjAccount)
    }
}
if (!rjAccountList.isEmpty() &amp;&amp; rjAccountList != null &amp;&amp; rjAccountList.size() &gt; 0) {
    execution.setVariable("rjAccountList", rjAccountList)
    execution.setVariable("emptyAccountList", false)
}
else {
    execution.setVariable("emptyAccountList", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_1urxbo9" name="save list delegate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjAccountList}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_165m5zz</bpmn:incoming>
        <bpmn:outgoing>Flow_0rd5id0</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_1d9lnmw" name="Получение Address" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">addresses</camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">select a from Address a where a.client.id = ${clientId}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1cjk8x1</bpmn:incoming>
        <bpmn:outgoing>Flow_02ltpcs</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_1gaajch" name="RJ_ADDRESS" scriptFormat="groovy" camunda:resultVariable="addressList">
        <bpmn:incoming>Flow_02ltpcs</bpmn:incoming>
        <bpmn:outgoing>Flow_170nw6l</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.Address
import com.prime.db.rnkb.model.commucation.judgment.RjAddress
import com.prime.db.rnkb.model.commucation.judgment.RjClient

def addresses = execution.getVariable("addresses") as List&lt;Address&gt;
List&lt;RjAddress&gt; addressList = new ArrayList&lt;&gt;()
if (addresses != null &amp;&amp; addresses.size()&gt;0) {
    addresses.each {address -&gt;
        RjAddress rjAddress = new RjAddress()
        rjAddress.rjclient = execution.getVariable("rjClient") as RjClient
        rjAddress.addressLine = address.addressLine
        rjAddress.addressType = address.type
        addressList.add(rjAddress)
    }
}
if (!addressList.isEmpty() &amp;&amp; addressList != null &amp;&amp; addressList.size() &gt;0) {
    execution.setVariable("addressList", addressList)
    execution.setVariable("emptyAddressList", false)
    println false
}
else {
    execution.setVariable("emptyAddressList", true)
    println true
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0m1ejfh" name="save list delegate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${addressList}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_01sbe2p</bpmn:incoming>
        <bpmn:outgoing>Flow_1ahw8na</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:scriptTask id="Activity_0sw810i" name="RJ_FIELD_AGGREGATE" scriptFormat="groovy">
        <bpmn:incoming>Flow_0ukzlai</bpmn:incoming>
        <bpmn:outgoing>Flow_1o4ec3w</bpmn:outgoing>
        <bpmn:script>import com.cognive.projects.casernkb.model.projection.FieldAgg
import com.cognive.projects.casernkb.repo.FiledAggGeneralRepo
import com.prime.db.rnkb.model.Rule
import com.prime.db.rnkb.model.commucation.judgment.RjClient
import com.prime.db.rnkb.model.commucation.judgment.RjFieldAggregate

Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String
println clientId
println dateStart.substring(0, 10)
println dateEnd.substring(0, 10)
List&lt;FieldAgg&gt; getFieldAggs(Long clientId, String dateStart, String dateEnd) {
    filedAggGeneralRepo.getFieldAgg(clientId, dateStart.substring(0, 10), dateEnd.substring(0, 10))
}

Rule getRuleById(Long aggrId) {
    ruleRepo.getRule(aggrId)
}

List&lt;RjFieldAggregate&gt; rjFieldAggregateList = new ArrayList&lt;&gt;()

List&lt;FieldAgg&gt; fieldAggList = getFieldAggs(clientId, dateStart.substring(0, 10), dateEnd.substring(0, 10))

println fieldAggList.toString()

fieldAggList.each {f -&gt;
    RjFieldAggregate rjFieldAggregate = new RjFieldAggregate()
    rjFieldAggregate.rjClientId = execution.getVariable("rjClient") as RjClient
    rjFieldAggregate.type = f.getLtype() as Long
    rjFieldAggregate.string = f.getString() as String
    rjFieldAggregate.sum = f.getLsum() as BigDecimal
    rjFieldAggregate.count = f.getLcount() as Long
    rjFieldAggregate.aggdirid = getRuleById(f.getAggId())
    println rjFieldAggregate.toString()
    rjFieldAggregateList.add(rjFieldAggregate)
}

execution.setVariable("rjFieldAggregateList", rjFieldAggregateList)</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:endEvent id="Event_0ptnuee">
        <bpmn:incoming>Flow_0k0jva9</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:serviceTask id="Activity_0xf45jf" name="Логирование процесса" camunda:delegateExpression="${loggerDelegate}">
        <bpmn:incoming>Flow_0i3nmos</bpmn:incoming>
        <bpmn:outgoing>Flow_1wa8roj</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:serviceTask id="Activity_0db784s" name="save RJ_FIELDS_DELEGATE" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjFieldAggregateList}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1o4ec3w</bpmn:incoming>
        <bpmn:outgoing>Flow_0i3nmos</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1wa8roj" sourceRef="Activity_0xf45jf" targetRef="Activity_0wtw47c" />
      <bpmn:sequenceFlow id="Flow_0i3nmos" sourceRef="Activity_0db784s" targetRef="Activity_0xf45jf" />
      <bpmn:sequenceFlow id="Flow_1o4ec3w" sourceRef="Activity_0sw810i" targetRef="Activity_0db784s" />
      <bpmn:sequenceFlow id="Flow_1ahw8na" sourceRef="Activity_0m1ejfh" targetRef="Gateway_1hpwoz7" />
      <bpmn:exclusiveGateway id="Gateway_1hpwoz7">
        <bpmn:incoming>Flow_1ahw8na</bpmn:incoming>
        <bpmn:incoming>Flow_15oy6uv</bpmn:incoming>
        <bpmn:outgoing>Flow_0ukzlai</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0ukzlai" sourceRef="Gateway_1hpwoz7" targetRef="Activity_0sw810i" />
      <bpmn:exclusiveGateway id="Gateway_0svxjo0">
        <bpmn:incoming>Flow_170nw6l</bpmn:incoming>
        <bpmn:outgoing>Flow_01sbe2p</bpmn:outgoing>
        <bpmn:outgoing>Flow_15oy6uv</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_01sbe2p" sourceRef="Gateway_0svxjo0" targetRef="Activity_0m1ejfh">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!emptyAddressList}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_15oy6uv" sourceRef="Gateway_0svxjo0" targetRef="Gateway_1hpwoz7">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyAddressList}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_170nw6l" sourceRef="Activity_1gaajch" targetRef="Gateway_0svxjo0" />
      <bpmn:sequenceFlow id="Flow_02ltpcs" sourceRef="Activity_1d9lnmw" targetRef="Activity_1gaajch" />
      <bpmn:sequenceFlow id="Flow_0rd5id0" sourceRef="Activity_1urxbo9" targetRef="Gateway_0ekn006" />
      <bpmn:exclusiveGateway id="Gateway_0ekn006">
        <bpmn:incoming>Flow_0rd5id0</bpmn:incoming>
        <bpmn:incoming>Flow_1sncmzj</bpmn:incoming>
        <bpmn:outgoing>Flow_1cjk8x1</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1cjk8x1" sourceRef="Gateway_0ekn006" targetRef="Activity_1d9lnmw" />
      <bpmn:exclusiveGateway id="Gateway_1khrb0y">
        <bpmn:incoming>Flow_0nenofv</bpmn:incoming>
        <bpmn:outgoing>Flow_1sncmzj</bpmn:outgoing>
        <bpmn:outgoing>Flow_165m5zz</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1sncmzj" sourceRef="Gateway_1khrb0y" targetRef="Gateway_0ekn006">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyAccountList}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_165m5zz" sourceRef="Gateway_1khrb0y" targetRef="Activity_1urxbo9">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!emptyAccountList}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_0nenofv" sourceRef="Activity_1ub5mmg" targetRef="Gateway_1khrb0y" />
      <bpmn:sequenceFlow id="Flow_1xev41m" sourceRef="Activity_12ha2ax" targetRef="Activity_1ub5mmg" />
      <bpmn:sequenceFlow id="Flow_175xq33" sourceRef="Activity_199mx1h" targetRef="Gateway_0eaf3nu" />
      <bpmn:exclusiveGateway id="Gateway_0eaf3nu">
        <bpmn:incoming>Flow_175xq33</bpmn:incoming>
        <bpmn:incoming>Flow_0v2xvj3</bpmn:incoming>
        <bpmn:outgoing>Flow_0lheuak</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0lheuak" sourceRef="Gateway_0eaf3nu" targetRef="Activity_12ha2ax" />
      <bpmn:exclusiveGateway id="Gateway_0bue41y" default="Flow_1hss4wp">
        <bpmn:incoming>Flow_0zkgxvg</bpmn:incoming>
        <bpmn:outgoing>Flow_0v2xvj3</bpmn:outgoing>
        <bpmn:outgoing>Flow_1hss4wp</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0v2xvj3" sourceRef="Gateway_0bue41y" targetRef="Gateway_0eaf3nu">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${rjOkved == null}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_1hss4wp" sourceRef="Gateway_0bue41y" targetRef="Activity_199mx1h" />
      <bpmn:sequenceFlow id="Flow_0zkgxvg" sourceRef="Activity_17o0dxi" targetRef="Gateway_0bue41y" />
      <bpmn:sequenceFlow id="Flow_183kxyb" sourceRef="Activity_0fb2oxw" targetRef="Activity_17o0dxi" />
      <bpmn:sequenceFlow id="Flow_0milh4u" sourceRef="Activity_1msvyzc" targetRef="Activity_0fb2oxw" />
      <bpmn:sequenceFlow id="Flow_1t0z8ey" sourceRef="Activity_1h855uv" targetRef="Activity_1msvyzc" />
      <bpmn:sequenceFlow id="Flow_1eh52bn" sourceRef="Activity_0n8u21p" targetRef="Activity_1h855uv" />
      <bpmn:scriptTask id="Activity_0wtw47c" name="RJ_COUNTERPARTY" scriptFormat="groovy">
        <bpmn:incoming>Flow_1wa8roj</bpmn:incoming>
        <bpmn:outgoing>Flow_1xw2k24</bpmn:outgoing>
        <bpmn:script>import com.cognive.projects.casernkb.model.projection.CounterpartyAgg
import com.cognive.projects.casernkb.model.projection.Egrip
import com.cognive.projects.casernkb.model.projection.Egrul
import com.cognive.projects.casernkb.model.projection.OkvedProj
import com.prime.db.rnkb.model.Client
import com.prime.db.rnkb.model.commucation.judgment.ReasonedJudgment
import com.prime.db.rnkb.model.commucation.judgment.RjCounterparty

import java.time.LocalDateTime
import java.time.temporal.ChronoUnit


Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String

List&lt;CounterpartyAgg&gt; getClientAgg(Long clientId, String dateStart, String dateEnd) {
    filedAggGeneralRepo.getClientAgg(clientId, dateStart, dateEnd)
}

Client getCounterpartyClientByInn(String inn) {
    clientRepo.getCounterpartyClientByInn(inn)
}

Egrul getEgrulByInn(String inn) {
    egrulRepo.getEgrulByInn(inn)
}

OkvedProj getEgrulOkvedByInn(String inn) {
    egrulRepo.getEgrulOkvedByInn(inn)
}

Egrip getEgripByInn(String inn) {
    egripRepo.getEgripByInn(inn)
}

OkvedProj getEgripOkvedByInn(String inn) {
    egripRepo.getEgripOkvedByInn(inn)
}

OkvedProj getOkvedByInn(String inn) {
    okvedRepo.getOkvedByInn(inn)
}
Long getRuleId(String code) {
    ruleRepo.getRuleId(code)
}

List&lt;CounterpartyAgg&gt; counterpartyAggList = getClientAgg(clientId, dateStart.substring(0,10), dateEnd.substring(0,10))
if (!counterpartyAggList.isEmpty() &amp;&amp; counterpartyAggList != null) {
    List&lt;RjCounterparty&gt; rjCounterparties = new ArrayList&lt;&gt;()
    counterpartyAggList.each {c -&gt;
        try {
            println "Начало формирования контрагента с ИНН: " + c.aggSting + " с записью по агрегату " + c.aggAggdirId
            RjCounterparty rjCounterparty = new RjCounterparty()
            rjCounterparty.rjId = execution.getVariable("reasonedJudgmentOut") as ReasonedJudgment
            Egrul egrul = getEgrulByInn(c.aggSting)
            try {
                if (egrul != null) {
                    rjCounterparty.fullName = egrul.fullname
                    rjCounterparty.isNewlyFormed = ChronoUnit.MONTHS.between(LocalDateTime.now(), egrul.dateOgrn) &lt; 18
                }
                else {
                    Egrip egrip = getEgripByInn(c.aggSting)
                    if (egrip != null) {
                        rjCounterparty.fullName = egrip.lastName + " " + egrip.firstName + " " + egrip.middleName
                        rjCounterparty.isNewlyFormed = ChronoUnit.MONTHS.between(LocalDateTime.now(), egrip.dateOgrnip) &lt; 18
                    }
                    else {
                        Client client = getCounterpartyClientByInn(c.aggSting)
                        rjCounterparty.fullName = client.fullName
                        rjCounterparty.isNewlyFormed = ChronoUnit.MONTHS.between(LocalDateTime.now(), client.ogrnDate) &lt; 18
                    }
                }
            }
            catch (Exception e) {
                println "Не найден клиент по ИНН " + e.localizedMessage
            }
            OkvedProj okvedProj = getEgrulOkvedByInn(c.aggSting)
            if (okvedProj == null) {
                okvedProj = getEgripOkvedByInn(c.aggSting)
                if (okvedProj == null) {
                    okvedProj = getOkvedByInn(c.aggSting)
                }
            }
            try {
                rjCounterparty.okvedCode = okvedProj.code
                rjCounterparty.okvedName = okvedProj.name
            }
            catch (Exception e) {
                println "Не найден оквэд клиента по ИНН " + e.localizedMessage
            }
            rjCounterparty.inn = c.aggSting
            if (c.aggAggdirId == getRuleId("AGRT096")) {
                rjCounterparty.oborotDt = c.aggSum
            }
            else {
                rjCounterparty.oborotKt = c.aggSum
            }
            rjCounterparties.add(rjCounterparty)
            println "Добавлен контрагент: " + rjCounterparty.toString()
        }
        catch (Exception e) {
            println "Не удалось сформировать запись по контрагенту с ИНН: " + c.aggSum
        }
    }
    if (rjCounterparties.isEmpty() || rjCounterparties == null) {
        println "Не удалось сформировать записи по контрагентам, в БД ничего записано не будет"
        execution.setVariable("emptyCounterpartyAgg", true)
    }
    else {
        execution.setVariable("rjCounterparties", rjCounterparties)
    }
}
else {
    println "Нужные записи в CounterpartyAgg не найдены"
    execution.setVariable("emptyCounterpartyAgg", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_0amq5wf" name="save rj_counterparty" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjCounterparties}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1snz34v</bpmn:incoming>
        <bpmn:outgoing>Flow_0twcua1</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:exclusiveGateway id="Gateway_0jjpitr" default="Flow_1snz34v">
        <bpmn:incoming>Flow_1xw2k24</bpmn:incoming>
        <bpmn:outgoing>Flow_1snz34v</bpmn:outgoing>
        <bpmn:outgoing>Flow_06phinh</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1xw2k24" sourceRef="Activity_0wtw47c" targetRef="Gateway_0jjpitr" />
      <bpmn:sequenceFlow id="Flow_1snz34v" sourceRef="Gateway_0jjpitr" targetRef="Activity_0amq5wf" />
      <bpmn:exclusiveGateway id="Gateway_043w3vy">
        <bpmn:incoming>Flow_06phinh</bpmn:incoming>
        <bpmn:incoming>Flow_1travt0</bpmn:incoming>
        <bpmn:incoming>Flow_1u5e9q3</bpmn:incoming>
        <bpmn:outgoing>Flow_1jk74w9</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_06phinh" sourceRef="Gateway_0jjpitr" targetRef="Gateway_043w3vy">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyCounterpartyAgg}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_0twcua1" sourceRef="Activity_0amq5wf" targetRef="Activity_0cxd61y" />
      <bpmn:scriptTask id="Activity_0cxd61y" name="RJ_COUNTERPARTY_BANK" scriptFormat="groovy">
        <bpmn:incoming>Flow_0twcua1</bpmn:incoming>
        <bpmn:outgoing>Flow_1qcliqh</bpmn:outgoing>
        <bpmn:script>import com.cognive.projects.casernkb.model.projection.BankProjection
import com.prime.db.rnkb.model.FieldAggGeneral
import com.prime.db.rnkb.model.commucation.judgment.RjCounterparty
import com.prime.db.rnkb.model.commucation.judgment.RjCounterpartyBank

List&lt;FieldAggGeneral&gt; getClientAggIds(Long clientId, String dateStart, String dateEnd, List&lt;String&gt; inns) {
    filedAggGeneralRepo.getClientAggIds(clientId, dateStart, dateEnd, inns)
}

List&lt;BankProjection&gt; getPayerBanks(List&lt;String&gt; inn) {
    paymentRepo.getPayerBanks(inn)
}

List&lt;BankProjection&gt; getPayeeBanks(List&lt;String&gt; inn) {
    paymentRepo.getPayeeBanks(inn)
}

Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String


List&lt;RjCounterparty&gt; rjCounterparties = execution.getVariable("rjCounterparties") as List&lt;RjCounterparty&gt;

List&lt;BankProjection&gt; bankList = new ArrayList&lt;&gt;()
bankList.addAll(getPayerBanks(rjCounterparties.collect({ it.inn })))
bankList.addAll(getPayeeBanks(rjCounterparties.collect({ it.inn })))
if (bankList != null &amp;&amp; !bankList.isEmpty()) {
    def uniqueBank = bankList.unique { b1, b2 -&gt; b1.bank.id &lt;=&gt; b2.bank.id }
    List&lt;RjCounterpartyBank&gt; rjCounterpartyBanks = new ArrayList&lt;&gt;()
    uniqueBank.each { b -&gt;
        RjCounterpartyBank rjCounterpartyBank = new RjCounterpartyBank()
        try {
            rjCounterpartyBank.counterpartyId = rjCounterparties.find { r -&gt; r.inn == b.bank.inn }
            rjCounterpartyBank.name = b.inn
            rjCounterpartyBank.bic = b.bank.bic
            rjCounterpartyBanks.addAll(rjCounterpartyBank)
        }
        catch (Exception e) {
            println "Не удалсь записать rjCounterpartyBank для банка: " + b.toString()
        }
    }
    if (!rjCounterpartyBanks.isEmpty() &amp;&amp; rjCounterpartyBanks != null) {
        execution.setVariable("rjCounterpartyBanks",rjCounterpartyBanks)
        execution.setVariable("emptyBank", false)
    }
    else {
        println("Не удалось записать ни одного rjCounterpartyBanks")
        execution.setVariable("emptyBank", true)
    }
}
else {
    println "Не удалось найти банки для данных ИНН"
    execution.setVariable("emptyBank", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_1uc551g" default="Flow_0pf97qd">
        <bpmn:incoming>Flow_1qcliqh</bpmn:incoming>
        <bpmn:outgoing>Flow_0pf97qd</bpmn:outgoing>
        <bpmn:outgoing>Flow_1travt0</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1qcliqh" sourceRef="Activity_0cxd61y" targetRef="Gateway_1uc551g" />
      <bpmn:sequenceFlow id="Flow_0pf97qd" sourceRef="Gateway_1uc551g" targetRef="Activity_0jiapll" />
      <bpmn:sequenceFlow id="Flow_1u5e9q3" sourceRef="Activity_0jiapll" targetRef="Gateway_043w3vy" />
      <bpmn:sequenceFlow id="Flow_1travt0" sourceRef="Gateway_1uc551g" targetRef="Gateway_043w3vy">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyBank}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:serviceTask id="Activity_0jiapll" name="save counterPartyBank" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjCounterpartyBanks}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0pf97qd</bpmn:incoming>
        <bpmn:outgoing>Flow_1u5e9q3</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1jk74w9" sourceRef="Gateway_043w3vy" targetRef="Activity_1lzdmgo" />
      <bpmn:scriptTask id="Activity_1lzdmgo" name="RJ_AGGREGATE" scriptFormat="groovy">
        <bpmn:incoming>Flow_1jk74w9</bpmn:incoming>
        <bpmn:outgoing>Flow_050sefu</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.ProfileAggGeneral
import com.prime.db.rnkb.model.commucation.judgment.RjAggregate
import com.prime.db.rnkb.model.commucation.judgment.RjClient

import java.time.LocalDate
import java.time.LocalDateTime


Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String

List&lt;ProfileAggGeneral&gt; getAggrs(Long clientId, LocalDate startDate, LocalDate offDate) {
    aggGeneralRepo.getAggr(clientId, startDate, offDate)
}

List&lt;ProfileAggGeneral&gt; profAggGeneral = getAggrs(clientId, LocalDate.parse(dateStart.substring(0,10)), LocalDate.parse(dateEnd.substring(0,10)))
def rjClient = execution.getVariable("rjClient") as RjClient

if (!profAggGeneral.isEmpty() &amp;&amp; profAggGeneral != null) {

    List&lt;RjAggregate&gt; rjAggregates = new ArrayList&lt;&gt;()

    profAggGeneral.each { p -&gt;
        try {
            RjAggregate rjAggregate = new RjAggregate()
            rjAggregate.rjClientId = rjClient
            rjAggregate.turnoverDt = p.profAgr1
            rjAggregate.turnoverKt = p.profAgr2
            rjAggregate.turnoverDtClean = p.profAgr5
            rjAggregate.turnoverKtClean = p.profAgr82
            rjAggregate.transferToKo = p.profAgr72
            rjAggregate.transferFromKo = p.profAgr44
            rjAggregate.taxSum = p.profAgr13
            rjAggregate.economicActivitySum = p.profAgr33
            rjAggregates.add(rjAggregate)
        }
        catch (Exception e) {
            println("Не удалось записать rjAggregate")
        }
    }
    if (rjAggregates.isEmpty()) {
        println("Не удалось записать ни один rjAggregate")
        execution.setVariable("emptyProfileAggGeneral", true)
    }
    else {
        execution.setVariable("rjAggregates", rjAggregates)
        execution.setVariable("emptyProfileAggGeneral", false)
    }

} else {
    println("ProfileAggGeneral не найдены")
    execution.setVariable("emptyProfileAggGeneral", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_191bell" default="Flow_10mma8t">
        <bpmn:incoming>Flow_050sefu</bpmn:incoming>
        <bpmn:outgoing>Flow_10mma8t</bpmn:outgoing>
        <bpmn:outgoing>Flow_13naaka</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_050sefu" sourceRef="Activity_1lzdmgo" targetRef="Gateway_191bell" />
      <bpmn:sequenceFlow id="Flow_10mma8t" sourceRef="Gateway_191bell" targetRef="Activity_0tk6n5v" />
      <bpmn:exclusiveGateway id="Gateway_14q2a3u">
        <bpmn:incoming>Flow_0j8e4uz</bpmn:incoming>
        <bpmn:incoming>Flow_13naaka</bpmn:incoming>
        <bpmn:outgoing>Flow_1ahu9fj</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0j8e4uz" sourceRef="Activity_0tk6n5v" targetRef="Gateway_14q2a3u" />
      <bpmn:sequenceFlow id="Flow_13naaka" sourceRef="Gateway_191bell" targetRef="Gateway_14q2a3u">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyProfileAggGeneral}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:serviceTask id="Activity_0tk6n5v" name="save rj_aggregate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjAggregates}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_10mma8t</bpmn:incoming>
        <bpmn:outgoing>Flow_0j8e4uz</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1ahu9fj" sourceRef="Gateway_14q2a3u" targetRef="Activity_11kp1jm" />
      <bpmn:serviceTask id="Activity_11kp1jm" name="Получение risklevel" camunda:delegateExpression="${selectDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="outputVarName">risklevel</camunda:inputParameter>
            <camunda:inputParameter name="selectQuery">select r from RiskLevel r where r.clientId.id = ${clientId}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1ahu9fj</bpmn:incoming>
        <bpmn:outgoing>Flow_0u4jl76</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_0u4jl76" sourceRef="Activity_11kp1jm" targetRef="Activity_0l1uo50" />
      <bpmn:scriptTask id="Activity_0l1uo50" name="RJ_RISKLEVEL" scriptFormat="groovy">
        <bpmn:incoming>Flow_0u4jl76</bpmn:incoming>
        <bpmn:outgoing>Flow_0ow1tp9</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.RiskLevel
import com.prime.db.rnkb.model.commucation.judgment.RjClient
import com.prime.db.rnkb.model.commucation.judgment.RjRiskLevel

List&lt;RiskLevel&gt; riskLevelList = execution.getVariable("risklevel") as List&lt;RiskLevel&gt;
def rjClient = execution.getVariable("rjClient") as RjClient
List&lt;RjRiskLevel&gt; rjRiskLevels = new ArrayList&lt;&gt;()
if (!riskLevelList.isEmpty() &amp;&amp; riskLevelList != null) {
   
    riskLevelList.each {r -&gt;
        RjRiskLevel riskLevel = new RjRiskLevel()
        riskLevel.rjClientId = rjClient
        riskLevel.scoreSum = r.scoreSum
        riskLevel.levelRisk = r.levelRisk
        riskLevel.typeOfRisk = r.typeOfRisk
        rjRiskLevels.add(riskLevel)
    }
    execution.setVariable("rjRiskLevels", rjRiskLevels)
    execution.setVariable("emptyRiskLevel", false)
}
else {
    println("Не найдено записей RiskLevel")
    execution.setVariable("emptyRiskLevel", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_0hrivxt" default="Flow_05bcvqx">
        <bpmn:incoming>Flow_0ow1tp9</bpmn:incoming>
        <bpmn:outgoing>Flow_05bcvqx</bpmn:outgoing>
        <bpmn:outgoing>Flow_0q9rea6</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0ow1tp9" sourceRef="Activity_0l1uo50" targetRef="Gateway_0hrivxt" />
      <bpmn:sequenceFlow id="Flow_05bcvqx" sourceRef="Gateway_0hrivxt" targetRef="Activity_039txn0" />
      <bpmn:exclusiveGateway id="Gateway_01wf6t4">
        <bpmn:incoming>Flow_1tp4izo</bpmn:incoming>
        <bpmn:incoming>Flow_0q9rea6</bpmn:incoming>
        <bpmn:outgoing>Flow_1vtlagx</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1tp4izo" sourceRef="Activity_039txn0" targetRef="Gateway_01wf6t4" />
      <bpmn:sequenceFlow id="Flow_0q9rea6" sourceRef="Gateway_0hrivxt" targetRef="Gateway_01wf6t4">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyRiskLevel}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:serviceTask id="Activity_039txn0" name="save riskLevel" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjRiskLevels}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_05bcvqx</bpmn:incoming>
        <bpmn:outgoing>Flow_1tp4izo</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1vtlagx" sourceRef="Gateway_01wf6t4" targetRef="Activity_1o7sh79" />
      <bpmn:scriptTask id="Activity_1o7sh79" name="RJ_KYC" scriptFormat="groovy">
        <bpmn:incoming>Flow_1vtlagx</bpmn:incoming>
        <bpmn:outgoing>Flow_0q3bqmz</bpmn:outgoing>
        <bpmn:script>import com.cognive.projects.casernkb.model.projection.CaseProjection
import com.prime.db.rnkb.model.commucation.judgment.RjClient
import com.prime.db.rnkb.model.commucation.judgment.RjKyc

import java.time.LocalDateTime

List&lt;CaseProjection&gt; getCaseKyc(Long clientId, LocalDateTime dateStart, LocalDateTime dateEnd) {
    caseRepo.getCaseKyc(clientId, dateStart, dateEnd)
}

def rjClient = execution.getVariable("rjClient") as RjClient
Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String

List&lt;CaseProjection&gt; caseProjections = getCaseKyc(clientId, LocalDateTime.parse(dateStart), LocalDateTime.parse(dateEnd))
List&lt;RjKyc&gt; kycList = new ArrayList&lt;&gt;()
if (!caseProjections.isEmpty() &amp;&amp; caseProjections != null) {
    caseProjections.each {c -&gt;
        RjKyc rjKyc = new RjKyc()
        rjKyc.rjclient = rjClient
        rjKyc.kycName = c.typeList
        rjKyc.startdate = c.creationDate
        kycList.add(rjKyc)
    }
    execution.setVariable("rjkycList",kycList)
    execution.setVariable("emptyCaseKyc", false)
}
else {
    println("Не удалось найти подходящие кейсы kyc")
    execution.setVariable("emptyCaseKyc", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_1kk02z9" default="Flow_083p6o3">
        <bpmn:incoming>Flow_0q3bqmz</bpmn:incoming>
        <bpmn:outgoing>Flow_083p6o3</bpmn:outgoing>
        <bpmn:outgoing>Flow_1tjlof3</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0q3bqmz" sourceRef="Activity_1o7sh79" targetRef="Gateway_1kk02z9" />
      <bpmn:sequenceFlow id="Flow_083p6o3" sourceRef="Gateway_1kk02z9" targetRef="Activity_0ivrv39" />
      <bpmn:exclusiveGateway id="Gateway_19vr3o8">
        <bpmn:incoming>Flow_1tt5dch</bpmn:incoming>
        <bpmn:incoming>Flow_1tjlof3</bpmn:incoming>
        <bpmn:outgoing>Flow_1omp6se</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1tt5dch" sourceRef="Activity_0ivrv39" targetRef="Gateway_19vr3o8" />
      <bpmn:sequenceFlow id="Flow_1tjlof3" sourceRef="Gateway_1kk02z9" targetRef="Gateway_19vr3o8">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyCaseKyc}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:serviceTask id="Activity_0ivrv39" name="save rj_kyc" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjkycList}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_083p6o3</bpmn:incoming>
        <bpmn:outgoing>Flow_1tt5dch</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1omp6se" sourceRef="Gateway_19vr3o8" targetRef="Activity_1hnspuv" />
      <bpmn:scriptTask id="Activity_1hnspuv" name="RJ_BLOCK_ATTRIBUTES_LIST" scriptFormat="groovy">
        <bpmn:incoming>Flow_1omp6se</bpmn:incoming>
        <bpmn:outgoing>Flow_1h19939</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.af.AfBlockAttributesList
import com.prime.db.rnkb.model.commucation.judgment.RjBlockAttributesList
import com.prime.db.rnkb.model.commucation.judgment.RjClient

import java.time.LocalDateTime


Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String

List&lt;AfBlockAttributesList&gt; getBlocks(Long clientId, LocalDateTime startDate, LocalDateTime offDate) {
    blockAttrRepo.getBlocks(clientId, startDate, offDate)
}

List&lt;AfBlockAttributesList&gt; afBlockAttributesLists = getBlocks(clientId, LocalDateTime.parse(dateStart), LocalDateTime.parse(dateEnd))

def rjClient = execution.getVariable("rjClient") as RjClient
List&lt;RjBlockAttributesList&gt; rjBlockAttributesLists = new ArrayList&lt;&gt;()

if (!afBlockAttributesLists.isEmpty() &amp;&amp; afBlockAttributesLists != null) {
    afBlockAttributesLists.each {a -&gt;
        RjBlockAttributesList rjBlockAttributesList = new RjBlockAttributesList()
        rjBlockAttributesList.rjClientId = rjClient
        rjBlockAttributesList.productName = a.productName
        rjBlockAttributesList.productNumber = a.productNumber
        rjBlockAttributesList.dateBlock = a.dateBlock
        rjBlockAttributesList.dateUnblock = a.dateUnBlock
        rjBlockAttributesLists.add(rjBlockAttributesList)

    }
    execution.setVariable("emptyAfBlockAttributesList", false)
    execution.setVariable("rjBlockAttributesLists", rjBlockAttributesLists)
}
else {
    println("Не найдено AfBlockAttributesList")
    execution.setVariable("emptyAfBlockAttributesList", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_1nd09im" name="save delegate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjBlockAttributesLists}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1wydpcm</bpmn:incoming>
        <bpmn:outgoing>Flow_0cmuklg</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:exclusiveGateway id="Gateway_04qrd0q" default="Flow_1wydpcm">
        <bpmn:incoming>Flow_1h19939</bpmn:incoming>
        <bpmn:outgoing>Flow_1wydpcm</bpmn:outgoing>
        <bpmn:outgoing>Flow_0ckjcoq</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1h19939" sourceRef="Activity_1hnspuv" targetRef="Gateway_04qrd0q" />
      <bpmn:sequenceFlow id="Flow_1wydpcm" sourceRef="Gateway_04qrd0q" targetRef="Activity_1nd09im" />
      <bpmn:exclusiveGateway id="Gateway_1a60hqx">
        <bpmn:incoming>Flow_0cmuklg</bpmn:incoming>
        <bpmn:incoming>Flow_0ckjcoq</bpmn:incoming>
        <bpmn:outgoing>Flow_0hxkzes</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0cmuklg" sourceRef="Activity_1nd09im" targetRef="Gateway_1a60hqx" />
      <bpmn:sequenceFlow id="Flow_0ckjcoq" sourceRef="Gateway_04qrd0q" targetRef="Gateway_1a60hqx">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyAfBlockAttributesList}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:exclusiveGateway id="Gateway_1paeos0" default="Flow_1bx9uoq">
        <bpmn:incoming>Flow_0hxkzes</bpmn:incoming>
        <bpmn:outgoing>Flow_1bx9uoq</bpmn:outgoing>
        <bpmn:outgoing>Flow_0lpc2s3</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0hxkzes" sourceRef="Gateway_1a60hqx" targetRef="Gateway_1paeos0" />
      <bpmn:sequenceFlow id="Flow_1bx9uoq" sourceRef="Gateway_1paeos0" targetRef="Activity_01tscc7" />
      <bpmn:scriptTask id="Activity_01tscc7" name="RJ_RULE" scriptFormat="groovy">
        <bpmn:incoming>Flow_1bx9uoq</bpmn:incoming>
        <bpmn:outgoing>Flow_1buc2c3</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.CaseRules
import com.prime.db.rnkb.model.commucation.judgment.ReasonedJudgment
import com.prime.db.rnkb.model.commucation.judgment.RjRule

List&lt;CaseRules&gt; getCaseRules(List&lt;Long&gt; ids) {
    caseRuleRepo.getCaseRules(ids)
}

def caseRules = getCaseRules(execution.getVariable("caseIds") as List&lt;Long&gt;)
if (!caseRules.isEmpty() &amp;&amp; caseRules != null) {
    List&lt;RjRule&gt; rjRuleList = new ArrayList&lt;&gt;()

    caseRules.each {c -&gt;
        RjRule rjRule = new RjRule()
        rjRule.rjId = execution.getVariable("reasonedJudgmentOut") as ReasonedJudgment
        rjRule.fesCode = c.code
        rjRule.rule = c.ruleId
        rjRuleList.add(rjRule)
    }
    execution.setVariable("rjRuleList", rjRuleList)
    execution.setVariable("emptycaserules", false)
}
else {
    println("Не удалось получить caserules")
    execution.setVariable("emptycaserules", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_0l8dqkq" default="Flow_15ia4lj">
        <bpmn:incoming>Flow_1buc2c3</bpmn:incoming>
        <bpmn:outgoing>Flow_15ia4lj</bpmn:outgoing>
        <bpmn:outgoing>Flow_1brlwch</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1buc2c3" sourceRef="Activity_01tscc7" targetRef="Gateway_0l8dqkq" />
      <bpmn:sequenceFlow id="Flow_15ia4lj" sourceRef="Gateway_0l8dqkq" targetRef="Activity_12utrd9" />
      <bpmn:exclusiveGateway id="Gateway_1nfyd3k">
        <bpmn:incoming>Flow_0riqbe9</bpmn:incoming>
        <bpmn:incoming>Flow_1brlwch</bpmn:incoming>
        <bpmn:incoming>Flow_0lpc2s3</bpmn:incoming>
        <bpmn:outgoing>Flow_1xwckuq</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0riqbe9" sourceRef="Activity_12utrd9" targetRef="Gateway_1nfyd3k" />
      <bpmn:sequenceFlow id="Flow_1brlwch" sourceRef="Gateway_0l8dqkq" targetRef="Gateway_1nfyd3k">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptycaserules}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_0lpc2s3" sourceRef="Gateway_1paeos0" targetRef="Gateway_1nfyd3k">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${caseIds.isEmpty()}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:serviceTask id="Activity_12utrd9" name="save delegate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjRuleList}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_15ia4lj</bpmn:incoming>
        <bpmn:outgoing>Flow_0riqbe9</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1xwckuq" sourceRef="Gateway_1nfyd3k" targetRef="Activity_10jsgkm" />
      <bpmn:scriptTask id="Activity_10jsgkm" name="ZK_REQUEST" scriptFormat="groovy">
        <bpmn:incoming>Flow_1xwckuq</bpmn:incoming>
        <bpmn:outgoing>Flow_0frci20</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.commucation.judgment.ReasonedJudgment
import com.prime.db.rnkb.model.commucation.judgment.Rjzkrequest
import com.prime.db.rnkb.model.commucation.request.Request

import java.time.LocalDateTime

List&lt;Request&gt; getRequests(Long clientId, LocalDateTime dateStart, LocalDateTime dateEnd) {
    zkRequestRepo.getRequests(clientId, dateStart, dateEnd)
}

Long clientId = execution.getVariable("clientId") as Long
String dateStart = execution.getVariable("startDate") as String
String dateEnd = execution.getVariable("offDate") as String

try {
    List&lt;Request&gt; requestList = getRequests(clientId, LocalDateTime.parse(dateStart),LocalDateTime.parse(dateEnd))
    if (!requestList.isEmpty() &amp;&amp; requestList != null) {
        execution.setVariable("requestList", requestList)
        List&lt;Rjzkrequest&gt; rjzkrequestList = new ArrayList&lt;&gt;()
        requestList.each {r -&gt;
            Rjzkrequest rjzkrequest = new Rjzkrequest()
            rjzkrequest.rjId = execution.getVariable("reasonedJudgment") as ReasonedJudgment
            rjzkrequest.dateOfFormation = r.dateOfFormation
            rjzkrequest.requestType = r.requestType
            rjzkrequest.fullInf = r.fullInf
            rjzkrequest.overDue = r.overdue
            rjzkrequest.dateOfExecution = r.dateOfExecution
            if (r.answerList != null &amp;&amp; r.answerList.size() &gt; 0) {
                rjzkrequest.dateOfResponse = r.answerList.get(0).dateOfResponse
            }
            rjzkrequest.zkRequestId = r
            rjzkrequestList.add(rjzkrequest)
            execution.setVariable("rjzkrequestList", rjzkrequestList)
            execution.setVariable("emptyrequestList", false)
        }
    }
    else {
        execution.setVariable("emptyrequestList", true)
        println("requestList не найдены")
    }
}
catch (Exception e) {
    execution.setVariable("emptyrequestList", true)
    println "Ошибка при получении requestList" + e.localizedMessage
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_19nsshl" default="Flow_0te70b8">
        <bpmn:incoming>Flow_0frci20</bpmn:incoming>
        <bpmn:outgoing>Flow_0te70b8</bpmn:outgoing>
        <bpmn:outgoing>Flow_1df6lxb</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0frci20" sourceRef="Activity_10jsgkm" targetRef="Gateway_19nsshl" />
      <bpmn:sequenceFlow id="Flow_0te70b8" sourceRef="Gateway_19nsshl" targetRef="Activity_1gtd8o7" />
      <bpmn:serviceTask id="Activity_1gtd8o7" name="save delegate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjzkrequestList}</camunda:inputParameter>
            <camunda:inputParameter name="outputVarName">rjzkrequestListOut</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0te70b8</bpmn:incoming>
        <bpmn:outgoing>Flow_1d604h5</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1df6lxb" sourceRef="Gateway_19nsshl" targetRef="Gateway_0hv9qag">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyrequestList}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:scriptTask id="Activity_00f8npc" name="RJ_ZK_ACTIONSMIDL" scriptFormat="groovy">
        <bpmn:incoming>Flow_1d604h5</bpmn:incoming>
        <bpmn:outgoing>Flow_1f4740m</bpmn:outgoing>
        <bpmn:script>import com.prime.db.rnkb.model.commucation.judgment.RjZkActionMidl
import com.prime.db.rnkb.model.commucation.judgment.Rjzkrequest
import com.prime.db.rnkb.model.commucation.midl.ActionsMIDL
import com.prime.db.rnkb.model.commucation.request.Request
import com.prime.db.rnkb.model.commucation.request.RequestedInformation

List&lt;ActionsMIDL&gt; getActionMidl(List&lt;Request&gt; requests) {
    zkRequestRepo.getActionMidl(requests)
}

List&lt;ActionsMIDL&gt; actionsMIDLList = getActionMidl(execution.getVariable("requestList") as List&lt;Request&gt;)
List&lt;Rjzkrequest&gt; rjzkrequests = execution.getVariable("rjzkrequestListOut") as List&lt;Rjzkrequest&gt;
if (!actionsMIDLList.isEmpty() &amp;&amp; actionsMIDLList != null) {
    List&lt;RjZkActionMidl&gt; rjZkActionMidlList = new ArrayList&lt;&gt;()
    actionsMIDLList.each {a -&gt;
        RjZkActionMidl rjZkActionMidl = new RjZkActionMidl()
        rjZkActionMidl.rjZkRequestId = rjzkrequests.find { a.issueId == it.zkRequestId.zkTaskId}
        rjZkActionMidl.date = a.date
        rjZkActionMidl.time = a.time
        rjZkActionMidl.quantity = a.quantity
        rjZkActionMidlList.add(rjZkActionMidl)
    }
    execution.setVariable("rjZkActionMidlList",rjZkActionMidlList)
    execution.setVariable("emptyactionsMIDLList", false)
}
else {
    println("Не найдены actionsMIDLList")
    execution.setVariable("emptyactionsMIDLList", true)
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_1d604h5" sourceRef="Activity_1gtd8o7" targetRef="Activity_00f8npc" />
      <bpmn:exclusiveGateway id="Gateway_0rm1uer" default="Flow_1bnhhj4">
        <bpmn:incoming>Flow_1f4740m</bpmn:incoming>
        <bpmn:outgoing>Flow_1bnhhj4</bpmn:outgoing>
        <bpmn:outgoing>Flow_0wcklve</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1f4740m" sourceRef="Activity_00f8npc" targetRef="Gateway_0rm1uer" />
      <bpmn:sequenceFlow id="Flow_1bnhhj4" sourceRef="Gateway_0rm1uer" targetRef="Activity_0eape63" />
      <bpmn:exclusiveGateway id="Gateway_0hv9qag">
        <bpmn:incoming>Flow_0naax5n</bpmn:incoming>
        <bpmn:incoming>Flow_0wcklve</bpmn:incoming>
        <bpmn:incoming>Flow_1df6lxb</bpmn:incoming>
        <bpmn:outgoing>Flow_0k0jva9</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_0naax5n" sourceRef="Activity_0eape63" targetRef="Gateway_0hv9qag" />
      <bpmn:sequenceFlow id="Flow_0wcklve" sourceRef="Gateway_0rm1uer" targetRef="Gateway_0hv9qag">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${emptyactionsMIDLList}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:serviceTask id="Activity_0eape63" name="save delegate" camunda:delegateExpression="${saveObjectListDelegate}">
        <bpmn:extensionElements>
          <camunda:inputOutput>
            <camunda:inputParameter name="saveObjectList">${rjZkActionMidlList}</camunda:inputParameter>
          </camunda:inputOutput>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1bnhhj4</bpmn:incoming>
        <bpmn:outgoing>Flow_0naax5n</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_0k0jva9" sourceRef="Gateway_0hv9qag" targetRef="Event_0ptnuee" />
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="Flow_0afcxcw" sourceRef="Activity_payload" targetRef="Activity_1508q2q" />
    <bpmn:sequenceFlow id="Flow_14efkmw" sourceRef="Activity_1508q2q" targetRef="Activity_0hj1qcq" />
    <bpmn:textAnnotation id="TextAnnotation_1ser3at">
      <bpmn:text>clientId
                caseIds
                startDate
                offDate


            </bpmn:text>
    </bpmn:textAnnotation>
    <bpmn:association id="Association_1kizanl" sourceRef="StartEvent_1" targetRef="TextAnnotation_1ser3at" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="amlAutoReasonedJudgment">
      <bpmndi:BPMNShape id="TextAnnotation_1ser3at_di" bpmnElement="TextAnnotation_1ser3at">
        <dc:Bounds x="160" y="130" width="100" height="111" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_14efkmw_di" bpmnElement="Flow_14efkmw">
        <di:waypoint x="12330" y="260" />
        <di:waypoint x="12400" y="260" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0afcxcw_di" bpmnElement="Flow_0afcxcw">
        <di:waypoint x="650" y="270" />
        <di:waypoint x="910" y="270" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_01253c3_di" bpmnElement="Flow_01253c3">
        <di:waypoint x="12500" y="260" />
        <di:waypoint x="12572" y="260" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0v286vx_di" bpmnElement="Flow_0v286vx">
        <di:waypoint x="510" y="270" />
        <di:waypoint x="550" y="270" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0b9b043_di" bpmnElement="Flow_0b9b043">
        <di:waypoint x="380" y="270" />
        <di:waypoint x="410" y="270" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16sg86q_di" bpmnElement="Flow_16sg86q">
        <di:waypoint x="228" y="270" />
        <di:waypoint x="280" y="270" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="192" y="252" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1hjbmy9_di" bpmnElement="Activity_0uqf4tg">
        <dc:Bounds x="280" y="230" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1vgpprs_di" bpmnElement="Activity_04cx2ds">
        <dc:Bounds x="410" y="230" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1bv3f5b_di" bpmnElement="Activity_payload">
        <dc:Bounds x="550" y="230" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1es98f4_di" bpmnElement="Event_End">
        <dc:Bounds x="12572" y="242" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1b8hv6f_di" bpmnElement="Activity_0hj1qcq">
        <dc:Bounds x="12400" y="220" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1508q2q_di" bpmnElement="Activity_1508q2q" isExpanded="true">
        <dc:Bounds x="910" y="80" width="11420" height="480" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0nenofv_di" bpmnElement="Flow_0nenofv">
        <di:waypoint x="5640" y="340" />
        <di:waypoint x="5665" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1sncmzj_di" bpmnElement="Flow_1sncmzj">
        <di:waypoint x="5690" y="365" />
        <di:waypoint x="5690" y="460" />
        <di:waypoint x="5930" y="460" />
        <di:waypoint x="5930" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_165m5zz_di" bpmnElement="Flow_165m5zz">
        <di:waypoint x="5715" y="340" />
        <di:waypoint x="5750" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0rd5id0_di" bpmnElement="Flow_0rd5id0">
        <di:waypoint x="5850" y="340" />
        <di:waypoint x="5905" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1cjk8x1_di" bpmnElement="Flow_1cjk8x1">
        <di:waypoint x="5955" y="340" />
        <di:waypoint x="6020" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_02ltpcs_di" bpmnElement="Flow_02ltpcs">
        <di:waypoint x="6120" y="340" />
        <di:waypoint x="6160" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_170nw6l_di" bpmnElement="Flow_170nw6l">
        <di:waypoint x="6260" y="340" />
        <di:waypoint x="6285" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_01sbe2p_di" bpmnElement="Flow_01sbe2p">
        <di:waypoint x="6335" y="340" />
        <di:waypoint x="6420" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_15oy6uv_di" bpmnElement="Flow_15oy6uv">
        <di:waypoint x="6310" y="365" />
        <di:waypoint x="6310" y="480" />
        <di:waypoint x="6630" y="480" />
        <di:waypoint x="6630" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ahw8na_di" bpmnElement="Flow_1ahw8na">
        <di:waypoint x="6520" y="340" />
        <di:waypoint x="6605" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1xev41m_di" bpmnElement="Flow_1xev41m">
        <di:waypoint x="5520" y="340" />
        <di:waypoint x="5540" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_183kxyb_di" bpmnElement="Flow_183kxyb">
        <di:waypoint x="4980" y="340" />
        <di:waypoint x="5030" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0milh4u_di" bpmnElement="Flow_0milh4u">
        <di:waypoint x="4790" y="340" />
        <di:waypoint x="4880" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1t0z8ey_di" bpmnElement="Flow_1t0z8ey">
        <di:waypoint x="4640" y="340" />
        <di:waypoint x="4690" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0pk93wk_di" bpmnElement="Flow_0pk93wk">
        <di:waypoint x="986" y="340" />
        <di:waypoint x="1032" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0ofnea7" bpmnElement="Flow_1ro8nc8">
        <di:waypoint x="1237" y="240" />
        <di:waypoint x="1289" y="240" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0imp1ku" bpmnElement="Flow_1vsqp5t">
        <di:waypoint x="1057" y="315" />
        <di:waypoint x="1057" y="240" />
        <di:waypoint x="1137" y="240" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1hmh22n" bpmnElement="Flow_067km6t">
        <di:waypoint x="1357" y="460" />
        <di:waypoint x="1409" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_13c3i6h" bpmnElement="Flow_0yg66mc">
        <di:waypoint x="1307" y="365" />
        <di:waypoint x="1307" y="420" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_13hrtn3" bpmnElement="Flow_0gxyg39">
        <di:waypoint x="1237" y="340" />
        <di:waypoint x="1282" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0y8cwxp" bpmnElement="Flow_1kkerxf">
        <di:waypoint x="1082" y="340" />
        <di:waypoint x="1137" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_05tn844" bpmnElement="Flow_1sw7auf">
        <di:waypoint x="2122" y="340" />
        <di:waypoint x="2179" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1xfarvn" bpmnElement="Flow_0sc07we">
        <di:waypoint x="4320" y="340" />
        <di:waypoint x="4377" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0dp6gyb" bpmnElement="Flow_10rgka5">
        <di:waypoint x="4163" y="340" />
        <di:waypoint x="4220" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0miffwi" bpmnElement="Flow_0e97atb">
        <di:waypoint x="4006" y="340" />
        <di:waypoint x="4063" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0fpgbxg" bpmnElement="Flow_1eh52bn">
        <di:waypoint x="4477" y="340" />
        <di:waypoint x="4540" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_02aspz5" bpmnElement="Flow_07o6nc3">
        <di:waypoint x="1965" y="340" />
        <di:waypoint x="2022" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0l85t1a" bpmnElement="Flow_06pads4">
        <di:waypoint x="1808" y="340" />
        <di:waypoint x="1865" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0pob5hf" bpmnElement="Flow_0qs0cri">
        <di:waypoint x="1651" y="340" />
        <di:waypoint x="1708" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0fjxif6" bpmnElement="Flow_0p4pf0a">
        <di:waypoint x="1494" y="340" />
        <di:waypoint x="1551" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0s1wkqh" bpmnElement="Flow_0xbj7ji">
        <di:waypoint x="1332" y="340" />
        <di:waypoint x="1394" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0h7q5ei" bpmnElement="Flow_06xamdo">
        <di:waypoint x="2907" y="340" />
        <di:waypoint x="2964" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1100oi8" bpmnElement="Flow_19akj7z">
        <di:waypoint x="2436" y="340" />
        <di:waypoint x="2493" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_094czbr" bpmnElement="Flow_0m76unr">
        <di:waypoint x="2279" y="340" />
        <di:waypoint x="2336" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1q48rz0" bpmnElement="Flow_0wtnroh">
        <di:waypoint x="3849" y="340" />
        <di:waypoint x="3906" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1apvr8q" bpmnElement="Flow_0d951ar">
        <di:waypoint x="3692" y="340" />
        <di:waypoint x="3749" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0co1iwv" bpmnElement="Flow_0wzhvab">
        <di:waypoint x="3535" y="340" />
        <di:waypoint x="3592" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1mt7i7n" bpmnElement="Flow_0e7mx8m">
        <di:waypoint x="3064" y="340" />
        <di:waypoint x="3121" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1h1g28t" bpmnElement="Flow_0iif719">
        <di:waypoint x="3378" y="340" />
        <di:waypoint x="3435" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0tzwee0" bpmnElement="Flow_1jjw6br">
        <di:waypoint x="3221" y="340" />
        <di:waypoint x="3278" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0ux2d46" bpmnElement="Flow_01wrt3k">
        <di:waypoint x="2750" y="340" />
        <di:waypoint x="2807" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_000634j" bpmnElement="Flow_1drg82v">
        <di:waypoint x="2593" y="340" />
        <di:waypoint x="2650" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ukzlai_di" bpmnElement="Flow_0ukzlai">
        <di:waypoint x="6655" y="340" />
        <di:waypoint x="6710" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0zkgxvg_di" bpmnElement="Flow_0zkgxvg">
        <di:waypoint x="5130" y="340" />
        <di:waypoint x="5155" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1hss4wp_di" bpmnElement="Flow_1hss4wp">
        <di:waypoint x="5205" y="340" />
        <di:waypoint x="5230" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_175xq33_di" bpmnElement="Flow_175xq33">
        <di:waypoint x="5330" y="340" />
        <di:waypoint x="5355" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0lheuak_di" bpmnElement="Flow_0lheuak">
        <di:waypoint x="5405" y="340" />
        <di:waypoint x="5420" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0v2xvj3_di" bpmnElement="Flow_0v2xvj3">
        <di:waypoint x="5180" y="365" />
        <di:waypoint x="5180" y="440" />
        <di:waypoint x="5380" y="440" />
        <di:waypoint x="5380" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1o4ec3w_di" bpmnElement="Flow_1o4ec3w">
        <di:waypoint x="6810" y="340" />
        <di:waypoint x="6860" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0i3nmos_di" bpmnElement="Flow_0i3nmos">
        <di:waypoint x="6960" y="340" />
        <di:waypoint x="7000" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1wa8roj_di" bpmnElement="Flow_1wa8roj">
        <di:waypoint x="7100" y="340" />
        <di:waypoint x="7170" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1xw2k24_di" bpmnElement="Flow_1xw2k24">
        <di:waypoint x="7270" y="340" />
        <di:waypoint x="7345" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1snz34v_di" bpmnElement="Flow_1snz34v">
        <di:waypoint x="7395" y="340" />
        <di:waypoint x="7450" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_06phinh_di" bpmnElement="Flow_06phinh">
        <di:waypoint x="7370" y="365" />
        <di:waypoint x="7370" y="470" />
        <di:waypoint x="8090" y="470" />
        <di:waypoint x="8090" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0twcua1_di" bpmnElement="Flow_0twcua1">
        <di:waypoint x="7550" y="340" />
        <di:waypoint x="7610" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1qcliqh_di" bpmnElement="Flow_1qcliqh">
        <di:waypoint x="7710" y="340" />
        <di:waypoint x="7775" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0pf97qd_di" bpmnElement="Flow_0pf97qd">
        <di:waypoint x="7825" y="340" />
        <di:waypoint x="7890" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1u5e9q3_di" bpmnElement="Flow_1u5e9q3">
        <di:waypoint x="7990" y="340" />
        <di:waypoint x="8065" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1travt0_di" bpmnElement="Flow_1travt0">
        <di:waypoint x="7800" y="315" />
        <di:waypoint x="7800" y="230" />
        <di:waypoint x="8090" y="230" />
        <di:waypoint x="8090" y="315" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1jk74w9_di" bpmnElement="Flow_1jk74w9">
        <di:waypoint x="8115" y="340" />
        <di:waypoint x="8260" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_050sefu_di" bpmnElement="Flow_050sefu">
        <di:waypoint x="8360" y="340" />
        <di:waypoint x="8465" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_10mma8t_di" bpmnElement="Flow_10mma8t">
        <di:waypoint x="8515" y="340" />
        <di:waypoint x="8580" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0j8e4uz_di" bpmnElement="Flow_0j8e4uz">
        <di:waypoint x="8680" y="340" />
        <di:waypoint x="8745" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13naaka_di" bpmnElement="Flow_13naaka">
        <di:waypoint x="8490" y="365" />
        <di:waypoint x="8490" y="470" />
        <di:waypoint x="8770" y="470" />
        <di:waypoint x="8770" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ahu9fj_di" bpmnElement="Flow_1ahu9fj">
        <di:waypoint x="8795" y="340" />
        <di:waypoint x="8860" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0u4jl76_di" bpmnElement="Flow_0u4jl76">
        <di:waypoint x="8960" y="340" />
        <di:waypoint x="9000" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ow1tp9_di" bpmnElement="Flow_0ow1tp9">
        <di:waypoint x="9100" y="340" />
        <di:waypoint x="9125" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_05bcvqx_di" bpmnElement="Flow_05bcvqx">
        <di:waypoint x="9175" y="340" />
        <di:waypoint x="9210" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1tp4izo_di" bpmnElement="Flow_1tp4izo">
        <di:waypoint x="9310" y="340" />
        <di:waypoint x="9335" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0q9rea6_di" bpmnElement="Flow_0q9rea6">
        <di:waypoint x="9150" y="365" />
        <di:waypoint x="9150" y="470" />
        <di:waypoint x="9360" y="470" />
        <di:waypoint x="9360" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1vtlagx_di" bpmnElement="Flow_1vtlagx">
        <di:waypoint x="9385" y="340" />
        <di:waypoint x="9410" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0q3bqmz_di" bpmnElement="Flow_0q3bqmz">
        <di:waypoint x="9510" y="340" />
        <di:waypoint x="9535" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_083p6o3_di" bpmnElement="Flow_083p6o3">
        <di:waypoint x="9585" y="340" />
        <di:waypoint x="9640" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1tt5dch_di" bpmnElement="Flow_1tt5dch">
        <di:waypoint x="9740" y="340" />
        <di:waypoint x="9775" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1tjlof3_di" bpmnElement="Flow_1tjlof3">
        <di:waypoint x="9560" y="365" />
        <di:waypoint x="9560" y="470" />
        <di:waypoint x="9800" y="470" />
        <di:waypoint x="9800" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1omp6se_di" bpmnElement="Flow_1omp6se">
        <di:waypoint x="9825" y="340" />
        <di:waypoint x="9890" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1h19939_di" bpmnElement="Flow_1h19939">
        <di:waypoint x="9990" y="340" />
        <di:waypoint x="10055" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1wydpcm_di" bpmnElement="Flow_1wydpcm">
        <di:waypoint x="10105" y="340" />
        <di:waypoint x="10150" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0cmuklg_di" bpmnElement="Flow_0cmuklg">
        <di:waypoint x="10250" y="340" />
        <di:waypoint x="10275" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ckjcoq_di" bpmnElement="Flow_0ckjcoq">
        <di:waypoint x="10080" y="365" />
        <di:waypoint x="10080" y="450" />
        <di:waypoint x="10300" y="450" />
        <di:waypoint x="10300" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0hxkzes_di" bpmnElement="Flow_0hxkzes">
        <di:waypoint x="10325" y="340" />
        <di:waypoint x="10355" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1bx9uoq_di" bpmnElement="Flow_1bx9uoq">
        <di:waypoint x="10405" y="340" />
        <di:waypoint x="10510" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1buc2c3_di" bpmnElement="Flow_1buc2c3">
        <di:waypoint x="10610" y="340" />
        <di:waypoint x="10785" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_15ia4lj_di" bpmnElement="Flow_15ia4lj">
        <di:waypoint x="10835" y="340" />
        <di:waypoint x="10900" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0riqbe9_di" bpmnElement="Flow_0riqbe9">
        <di:waypoint x="11000" y="340" />
        <di:waypoint x="11065" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1brlwch_di" bpmnElement="Flow_1brlwch">
        <di:waypoint x="10810" y="365" />
        <di:waypoint x="10810" y="460" />
        <di:waypoint x="11090" y="460" />
        <di:waypoint x="11090" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0lpc2s3_di" bpmnElement="Flow_0lpc2s3">
        <di:waypoint x="10380" y="315" />
        <di:waypoint x="10380" y="210" />
        <di:waypoint x="11090" y="210" />
        <di:waypoint x="11090" y="315" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1xwckuq_di" bpmnElement="Flow_1xwckuq">
        <di:waypoint x="11115" y="340" />
        <di:waypoint x="11180" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0frci20_di" bpmnElement="Flow_0frci20">
        <di:waypoint x="11280" y="340" />
        <di:waypoint x="11345" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0te70b8_di" bpmnElement="Flow_0te70b8">
        <di:waypoint x="11395" y="340" />
        <di:waypoint x="11460" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1df6lxb_di" bpmnElement="Flow_1df6lxb">
        <di:waypoint x="11370" y="365" />
        <di:waypoint x="11370" y="450" />
        <di:waypoint x="12130" y="450" />
        <di:waypoint x="12130" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1d604h5_di" bpmnElement="Flow_1d604h5">
        <di:waypoint x="11560" y="340" />
        <di:waypoint x="11630" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1f4740m_di" bpmnElement="Flow_1f4740m">
        <di:waypoint x="11730" y="340" />
        <di:waypoint x="11805" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1bnhhj4_di" bpmnElement="Flow_1bnhhj4">
        <di:waypoint x="11855" y="340" />
        <di:waypoint x="11930" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0naax5n_di" bpmnElement="Flow_0naax5n">
        <di:waypoint x="12030" y="340" />
        <di:waypoint x="12105" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0wcklve_di" bpmnElement="Flow_0wcklve">
        <di:waypoint x="11830" y="315" />
        <di:waypoint x="11830" y="190" />
        <di:waypoint x="12130" y="190" />
        <di:waypoint x="12130" y="315" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0k0jva9_di" bpmnElement="Flow_0k0jva9">
        <di:waypoint x="12155" y="340" />
        <di:waypoint x="12222" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_1652rxe_di" bpmnElement="Event_1652rxe">
        <dc:Bounds x="950" y="322" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0g5qr4v" bpmnElement="Activity_0gfu4n2">
        <dc:Bounds x="2650" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_00fce9q" bpmnElement="Activity_0clav10">
        <dc:Bounds x="3278" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0s8btvh" bpmnElement="Activity_1nzkgv3">
        <dc:Bounds x="3121" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0yaflqr" bpmnElement="Activity_0tj94ac">
        <dc:Bounds x="3592" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_15ztt94" bpmnElement="Activity_18jvan9">
        <dc:Bounds x="3749" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0ec6bl2" bpmnElement="Activity_0z1d6b4">
        <dc:Bounds x="2336" y="300" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_17h1b34" bpmnElement="Activity_1nxjv8d">
        <dc:Bounds x="2807" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ctgmla" bpmnElement="Activity_0freyzt">
        <dc:Bounds x="2179" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1b8u51d" bpmnElement="Activity_1upcvus">
        <dc:Bounds x="1394" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1kj5iu9" bpmnElement="Activity_0l5rgpu">
        <dc:Bounds x="1551" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0tep3d5" bpmnElement="Activity_0y7j53y">
        <dc:Bounds x="1708" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_073iy20" bpmnElement="Activity_10rgy42">
        <dc:Bounds x="1865" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1w3b96l" bpmnElement="Activity_05xstuy">
        <dc:Bounds x="2493" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0eyv5tz" bpmnElement="Activity_1n2yjps">
        <dc:Bounds x="2964" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ppuyn5" bpmnElement="Activity_0xtklh3">
        <dc:Bounds x="3435" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1wj9sjl" bpmnElement="Activity_08upt1g">
        <dc:Bounds x="3906" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_12ncfwe" bpmnElement="Activity_0e3ywof">
        <dc:Bounds x="4063" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_00mgb29" bpmnElement="Activity_0jfbyz9">
        <dc:Bounds x="4220" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1h1rscc" bpmnElement="Activity_0n8u21p">
        <dc:Bounds x="4377" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0d1kjn8" bpmnElement="Activity_008mkxs">
        <dc:Bounds x="2022" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_095cg74" bpmnElement="Activity_0ogxdmb">
        <dc:Bounds x="1137" y="300" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_16spo04" bpmnElement="Gateway_1etb415" isMarkerVisible="true">
        <dc:Bounds x="1282" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0emjr5w" bpmnElement="Activity_1t2oxzd">
        <dc:Bounds x="1257" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0ckhbxu" bpmnElement="Gateway_0bxfwli" isMarkerVisible="true">
        <dc:Bounds x="1032" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1psf6m8" bpmnElement="Event_0i78gao">
        <dc:Bounds x="1409" y="442" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1d1aod9" bpmnElement="Activity_1ok6m41">
        <dc:Bounds x="1137" y="200" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1r3147r" bpmnElement="Event_0fqd5wo">
        <dc:Bounds x="1289" y="222" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_156znm7" bpmnElement="Activity_1h855uv">
        <dc:Bounds x="4540" y="300" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_00hyz2s_di" bpmnElement="Activity_1urxbo9">
        <dc:Bounds x="5750" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_02y0qpq_di" bpmnElement="Activity_1gaajch">
        <dc:Bounds x="6160" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1hpwoz7_di" bpmnElement="Gateway_1hpwoz7" isMarkerVisible="true">
        <dc:Bounds x="6605" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0svxjo0_di" bpmnElement="Gateway_0svxjo0" isMarkerVisible="true">
        <dc:Bounds x="6285" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0ekn006_di" bpmnElement="Gateway_0ekn006" isMarkerVisible="true">
        <dc:Bounds x="5905" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1khrb0y_di" bpmnElement="Gateway_1khrb0y" isMarkerVisible="true">
        <dc:Bounds x="5665" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1psmcvp_di" bpmnElement="Activity_0m1ejfh">
        <dc:Bounds x="6420" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1ms4f8x_di" bpmnElement="Activity_0sw810i">
        <dc:Bounds x="6710" y="300" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_030a0tx_di" bpmnElement="Activity_0fb2oxw">
        <dc:Bounds x="4880" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0bue41y_di" bpmnElement="Gateway_0bue41y" isMarkerVisible="true">
        <dc:Bounds x="5155" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_00gy5p7_di" bpmnElement="Activity_1ub5mmg">
        <dc:Bounds x="5540" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0hbx3x0_di" bpmnElement="Activity_199mx1h">
        <dc:Bounds x="5230" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0l4tu0c_di" bpmnElement="Activity_12ha2ax">
        <dc:Bounds x="5420" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0eaf3nu_di" bpmnElement="Gateway_0eaf3nu" isMarkerVisible="true">
        <dc:Bounds x="5355" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_03bchek_di" bpmnElement="Activity_1d9lnmw">
        <dc:Bounds x="6020" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0rl1fzj_di" bpmnElement="Activity_0xf45jf">
        <dc:Bounds x="7000" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0twusk2" bpmnElement="Activity_17o0dxi">
        <dc:Bounds x="5030" y="300" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1u86afc_di" bpmnElement="Activity_1msvyzc">
        <dc:Bounds x="4690" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0jxmt0g_di" bpmnElement="Activity_0db784s">
        <dc:Bounds x="6860" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_00v6pdp_di" bpmnElement="Activity_0wtw47c">
        <dc:Bounds x="7170" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0pedi5k_di" bpmnElement="Activity_0amq5wf">
        <dc:Bounds x="7450" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0jjpitr_di" bpmnElement="Gateway_0jjpitr" isMarkerVisible="true">
        <dc:Bounds x="7345" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1jnasn1_di" bpmnElement="Activity_0cxd61y">
        <dc:Bounds x="7610" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1uc551g_di" bpmnElement="Gateway_1uc551g" isMarkerVisible="true">
        <dc:Bounds x="7775" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1g8rh1c_di" bpmnElement="Activity_0jiapll">
        <dc:Bounds x="7890" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_043w3vy_di" bpmnElement="Gateway_043w3vy" isMarkerVisible="true">
        <dc:Bounds x="8065" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_191bell_di" bpmnElement="Gateway_191bell" isMarkerVisible="true">
        <dc:Bounds x="8465" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_14q2a3u_di" bpmnElement="Gateway_14q2a3u" isMarkerVisible="true">
        <dc:Bounds x="8745" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0c6gp2v_di" bpmnElement="Activity_0tk6n5v">
        <dc:Bounds x="8580" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0vpp3l6_di" bpmnElement="Activity_11kp1jm">
        <dc:Bounds x="8860" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1jpi8wj_di" bpmnElement="Activity_0l1uo50">
        <dc:Bounds x="9000" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0hrivxt_di" bpmnElement="Gateway_0hrivxt" isMarkerVisible="true">
        <dc:Bounds x="9125" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_01wf6t4_di" bpmnElement="Gateway_01wf6t4" isMarkerVisible="true">
        <dc:Bounds x="9335" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1nbt7lt_di" bpmnElement="Activity_039txn0">
        <dc:Bounds x="9210" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_11jb6y2_di" bpmnElement="Activity_1o7sh79">
        <dc:Bounds x="9410" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1kk02z9_di" bpmnElement="Gateway_1kk02z9" isMarkerVisible="true">
        <dc:Bounds x="9535" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_135x7hb_di" bpmnElement="Activity_1nd09im">
        <dc:Bounds x="10150" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1a60hqx_di" bpmnElement="Gateway_1a60hqx" isMarkerVisible="true">
        <dc:Bounds x="10275" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0rxzohc_di" bpmnElement="Activity_1lzdmgo">
        <dc:Bounds x="8260" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1ej5olq_di" bpmnElement="Activity_1hnspuv">
        <dc:Bounds x="9890" y="300" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_04qrd0q_di" bpmnElement="Gateway_04qrd0q" isMarkerVisible="true">
        <dc:Bounds x="10055" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_19vr3o8_di" bpmnElement="Gateway_19vr3o8" isMarkerVisible="true">
        <dc:Bounds x="9775" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0048r8h_di" bpmnElement="Activity_0ivrv39">
        <dc:Bounds x="9640" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1paeos0_di" bpmnElement="Gateway_1paeos0" isMarkerVisible="true">
        <dc:Bounds x="10355" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0l8dqkq_di" bpmnElement="Gateway_0l8dqkq" isMarkerVisible="true">
        <dc:Bounds x="10785" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1nfyd3k_di" bpmnElement="Gateway_1nfyd3k" isMarkerVisible="true">
        <dc:Bounds x="11065" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0hjncxl_di" bpmnElement="Activity_12utrd9">
        <dc:Bounds x="10900" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1gfw7j5_di" bpmnElement="Activity_10jsgkm">
        <dc:Bounds x="11180" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_19nsshl_di" bpmnElement="Gateway_19nsshl" isMarkerVisible="true">
        <dc:Bounds x="11345" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0loouna_di" bpmnElement="Activity_1gtd8o7">
        <dc:Bounds x="11460" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_15rt1fy_di" bpmnElement="Activity_00f8npc">
        <dc:Bounds x="11630" y="300" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0rm1uer_di" bpmnElement="Gateway_0rm1uer" isMarkerVisible="true">
        <dc:Bounds x="11805" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0hv9qag_di" bpmnElement="Gateway_0hv9qag" isMarkerVisible="true">
        <dc:Bounds x="12105" y="315" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1yreg3p_di" bpmnElement="Activity_0eape63">
        <dc:Bounds x="11930" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0f0qjh3_di" bpmnElement="Activity_01tscc7">
        <dc:Bounds x="10510" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_05gaqbr" bpmnElement="Event_0ptnuee">
        <dc:Bounds x="12222" y="322" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Association_1kizanl_di" bpmnElement="Association_1kizanl">
        <di:waypoint x="210" y="252" />
        <di:waypoint x="210" y="241" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
